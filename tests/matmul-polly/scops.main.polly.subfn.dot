digraph "Scop Graph for 'main.polly.subfn' function" {
	label="Scop Graph for 'main.polly.subfn' function";

	Node0x15023f0 [shape=record,label="{polly.par.setup:\l  %polly.par.LBPtr = alloca i64\l  %polly.par.UBPtr = alloca i64\l  %polly.par.userContext1 = bitcast i8* %polly.par.userContext to \{\}*\l  br label %polly.par.checkNext\l}"];
	Node0x15023f0 -> Node0x1502440;
	Node0x1502440 [shape=record,label="{polly.par.checkNext:                              \l  %0 = call i8 @GOMP_loop_runtime_next(i64* %polly.par.LBPtr, i64*\l... %polly.par.UBPtr)\l  %1 = icmp ne i8 %0, 0\l  br i1 %1, label %polly.par.loadIVBounds, label %polly.par.exit\l}"];
	Node0x1502440 -> Node0x1502410;
	Node0x1502440 -> Node0x14df7d0;
	Node0x1502410 [shape=record,label="{polly.par.loadIVBounds:                           \l  %polly.par.LB = load i64, i64* %polly.par.LBPtr\l  %polly.par.UB = load i64, i64* %polly.par.UBPtr\l  %polly.par.UBAdjusted = sub i64 %polly.par.UB, 1\l  br label %polly.loop_preheader\l}"];
	Node0x1502410 -> Node0x14df830;
	Node0x14df830 [shape=record,label="{polly.loop_preheader:                             \l  br label %polly.loop_header\l}"];
	Node0x14df830 -> Node0x151ede0;
	Node0x151ede0 [shape=record,label="{polly.loop_header:                                \l  %polly.indvar = phi i64 [ %polly.par.LB, %polly.loop_preheader ], [\l... %polly.indvar_next, %polly.loop_exit4 ]\l  br label %polly.loop_preheader3\l}"];
	Node0x151ede0 -> Node0x151ed50;
	Node0x151ed50 [shape=record,label="{polly.loop_preheader3:                            \l  %15 = shl i64 %polly.indvar, 1\l  %16 = trunc i64 %polly.indvar to i32\l  %17 = shl i32 %16, 1\l  %scevgep = getelementptr [1536 x [1536 x float]], [1536 x [1536 x float]]*\l... @A, i64 0, i64 %polly.indvar, i64 0\l  %scevgep13 = getelementptr [1536 x [1536 x float]], [1536 x [1536 x float]]*\l... @B, i64 0, i64 %polly.indvar, i64 0\l  %18 = trunc i64 %polly.indvar to i32\l  %19 = mul i64 %polly.indvar, 1536\l  %scevgep20 = getelementptr float, float* getelementptr inbounds ([1536 x\l... [1536 x float]], [1536 x [1536 x float]]* @A, i64 0, i64 0, i64 1), i64 %19\l  %scevgep22 = getelementptr float, float* getelementptr inbounds ([1536 x\l... [1536 x float]], [1536 x [1536 x float]]* @B, i64 0, i64 0, i64 1), i64 %19\l  br label %polly.loop_header2\l}"];
	Node0x151ed50 -> Node0x151edb0;
	Node0x151edb0 [shape=record,label="{polly.loop_header2:                               \l  %polly.indvar5 = phi i64 [ 0, %polly.loop_preheader3 ], [\l... %polly.indvar_next6, %polly.stmt. ]\l  br label %polly.stmt.\l}"];
	Node0x151edb0 -> Node0x151ee80;
	Node0x151ee80 [shape=record,label="{polly.stmt.:                                      \l  %2 = shl i64 %polly.indvar5, 1\l  %3 = mul i64 %15, %polly.indvar5\l  %4 = trunc i64 %polly.indvar5 to i32\l  %5 = mul i32 %17, %4\l  %p_ = srem i32 %5, 1024\l  %p_8 = or i32 %p_, 1\l  %p_9 = sitofp i32 %p_8 to double\l  %p_10 = fmul double %p_9, 5.000000e-01\l  %p_11 = fptrunc double %p_10 to float\l  %6 = shl i64 %polly.indvar5, 1\l  %scevgep12 = getelementptr float, float* %scevgep, i64 %6\l  store float %p_11, float* %scevgep12, align 8, !alias.scope !1, !noalias !3,\l... !llvm.mem.parallel_loop_access !8\l  %scevgep14 = getelementptr float, float* %scevgep13, i64 %6\l  store float %p_11, float* %scevgep14, align 8, !alias.scope !7, !noalias !9,\l... !llvm.mem.parallel_loop_access !8\l  %7 = add i64 %6, 1\l  %8 = mul i64 %polly.indvar, %7\l  %9 = trunc i64 %polly.indvar5 to i32\l  %10 = shl i32 %9, 1\l  %11 = add i32 %10, 1\l  %12 = mul i32 %18, %11\l  %p_15 = srem i32 %12, 1024\l  %p_16 = add nsw i32 %p_15, 1\l  %p_17 = sitofp i32 %p_16 to double\l  %p_18 = fmul double %p_17, 5.000000e-01\l  %p_19 = fptrunc double %p_18 to float\l  %13 = shl i64 %polly.indvar5, 1\l  %scevgep21 = getelementptr float, float* %scevgep20, i64 %13\l  store float %p_19, float* %scevgep21, align 4, !alias.scope !1, !noalias !3,\l... !llvm.mem.parallel_loop_access !8\l  %scevgep23 = getelementptr float, float* %scevgep22, i64 %13\l  store float %p_19, float* %scevgep23, align 4, !alias.scope !7, !noalias !9,\l... !llvm.mem.parallel_loop_access !8\l  %14 = add i64 %13, 2\l  %p_exitcond.i.1 = icmp eq i64 %14, 1536\l  %polly.indvar_next6 = add nsw i64 %polly.indvar5, 1\l  %polly.loop_cond7 = icmp sle i64 %polly.indvar5, 766\l  br i1 %polly.loop_cond7, label %polly.loop_header2, label %polly.loop_exit4,\l... !llvm.loop !8\l}"];
	Node0x151ee80 -> Node0x151edb0[constraint=false];
	Node0x151ee80 -> Node0x151ef20;
	Node0x151ef20 [shape=record,label="{polly.loop_exit4:                                 \l  %polly.indvar_next = add nsw i64 %polly.indvar, 1\l  %polly.adjust_ub = sub i64 %polly.par.UBAdjusted, 1\l  %polly.loop_cond = icmp sle i64 %polly.indvar, %polly.adjust_ub\l  br i1 %polly.loop_cond, label %polly.loop_header, label %polly.loop_exit\l}"];
	Node0x151ef20 -> Node0x151ede0[constraint=false];
	Node0x151ef20 -> Node0x151ef80;
	Node0x151ef80 [shape=record,label="{polly.loop_exit:                                  \l  br label %polly.par.checkNext\l}"];
	Node0x151ef80 -> Node0x1502440[constraint=false];
	Node0x14df7d0 [shape=record,label="{polly.par.exit:                                   \l  call void @GOMP_loop_end_nowait()\l  ret void\l}"];
	colorscheme = "paired12"
        subgraph cluster_0x1502370 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x1522360 {
            label = "";
            style = solid;
            color = 6
            subgraph cluster_0x14df8d0 {
              label = "";
              style = solid;
              color = 5
              subgraph cluster_0x14df850 {
                label = "";
                style = solid;
                color = 7
                Node0x151edb0;
                Node0x151ee80;
              }
              Node0x151ede0;
              Node0x151ed50;
              Node0x151ef20;
            }
            Node0x1502440;
            Node0x1502410;
            Node0x14df830;
            Node0x151ef80;
          }
          Node0x15023f0;
          Node0x14df7d0;
        }
}
