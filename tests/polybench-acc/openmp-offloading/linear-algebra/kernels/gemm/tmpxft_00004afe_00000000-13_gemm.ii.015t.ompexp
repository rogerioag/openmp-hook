
;; Function void __nv_save_fatbinhandle_for_managed_rt(void**) (_ZL37__nv_save_fatbinhandle_for_managed_rtPPv, funcdef_no=0, decl_uid=2204, cgraph_uid=0)

void __nv_save_fatbinhandle_for_managed_rt(void**) (void * * in)
{
  <bb 2>:
  __nv_fatbinhandle_for_managed_rt = in;
  return;

}



;; Function void ____nv_dummy_param_ref(void*) (_ZL22____nv_dummy_param_refPv, funcdef_no=3160, decl_uid=48428, cgraph_uid=3021)

void ____nv_dummy_param_ref(void*) (void * param)
{
  static volatile void * * __ref;

  <bb 2>:
  __ref = param;
  return;

}



;; Function void print_array(int, int, double (*)[1024]) (_ZL11print_arrayiiPA1024_d, funcdef_no=3143, decl_uid=48029, cgraph_uid=3005)

void print_array(int, int, double (*)[1024]) (int ni, int nj, double[1024] * C)
{
  int j;
  int i;
  int D.49026;
  int D.49025;
  int D.49024;
  struct _IO_FILE * stderr.36;
  double D.49022;
  double[1024] * D.49021;
  long unsigned int D.49020;
  long unsigned int D.49019;

  <bb 2>:
  i = 0;
  goto <bb 9>;

  <bb 3>:
  j = 0;
  goto <bb 7>;

  <bb 4>:
  D.49019 = (long unsigned int) i;
  D.49020 = D.49019 * 8192;
  D.49021 = C + D.49020;
  D.49022 = *D.49021[j];
  stderr.36 = stderr;
  fprintf (stderr.36, "%0.2lf ", D.49022);
  D.49024 = i * ni;
  D.49025 = D.49024 + j;
  D.49026 = D.49025 % 20;
  if (D.49026 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  stderr.36 = stderr;
  __builtin_fputc (10, stderr.36);

  <bb 6>:
  j = j + 1;

  <bb 7>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 8>:
  i = i + 1;

  <bb 9>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  stderr.36 = stderr;
  __builtin_fputc (10, stderr.36);
  return;

}



;; Function double rtclock() (_ZL7rtclockv, funcdef_no=3151, decl_uid=48388, cgraph_uid=3013)

double rtclock() ()
{
  int stat;
  struct timeval Tp;
  double D.49049;
  double D.49048;
  long int D.49047;
  double D.49046;
  long int D.49045;
  double D.49044;

  <bb 2>:
  stat = gettimeofday (&Tp, 0B);
  if (stat != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  printf ("Error return from gettimeofday: %d", stat);

  <bb 4>:
  D.49045 = Tp.tv_sec;
  D.49046 = (double) D.49045;
  D.49047 = Tp.tv_usec;
  D.49048 = (double) D.49047;
  D.49049 = D.49048 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  D.49044 = D.49046 + D.49049;
  Tp = {CLOBBER};
  return D.49044;

<L5>:
  Tp = {CLOBBER};
  resx 1

}



;; Function void* xmalloc(size_t) (_ZL7xmallocm, funcdef_no=3157, decl_uid=48412, cgraph_uid=3019)

void* xmalloc(size_t) (size_t num)
{
  int ret;
  void * newA;
  void * D.49067;
  struct _IO_FILE * stderr.42;
  void * newA.41;

  <bb 2>:
  newA = 0B;
  ret = posix_memalign (&newA, 32, num);
  newA.41 = newA;
  if (newA.41 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  if (ret != 0)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  stderr.42 = stderr;
  __builtin_fwrite ("[PolyBench] posix_memalign: cannot allocate memory", 1, 50, stderr.42);

  <bb 5>:
  exit (1);

  <bb 6>:
  D.49067 = newA;
  newA = {CLOBBER};
  return D.49067;

<L5>:
  newA = {CLOBBER};
  resx 1

}



;; Function void __cudaUnregisterBinaryUtil() (_ZL26__cudaUnregisterBinaryUtilv, funcdef_no=3161, decl_uid=48492, cgraph_uid=3022)

void __cudaUnregisterBinaryUtil() ()
{
  void * * __cudaFatCubinHandle.53;

  <bb 2>:
  ____nv_dummy_param_ref (&__cudaFatCubinHandle);
  __cudaFatCubinHandle.53 = __cudaFatCubinHandle;
  __cudaUnregisterFatBinary (__cudaFatCubinHandle.53);
  return;

}



;; Function void __nv_cudaEntityRegisterCallback(void**) (_ZL31__nv_cudaEntityRegisterCallbackPPv, funcdef_no=3193, decl_uid=48691, cgraph_uid=3054)

void __nv_cudaEntityRegisterCallback(void**) (void * * __T26)
{
  static volatile void * * __ref;

  <bb 2>:
  __ref = __T26;
  __nv_save_fatbinhandle_for_managed_rt (__T26);
  __cudaRegisterFunction (__T26, gemm_cuda_kernel, "_Z16gemm_cuda_kerneliiiddPdS_S_", "_Z16gemm_cuda_kerneliiiddPdS_S_", -1, 0B, 0B, 0B, 0B, 0B);
  return;

}



;; Function dim3::dim3(unsigned int, unsigned int, unsigned int) (_ZN4dim3C2Ejjj, funcdef_no=3, decl_uid=3003, cgraph_uid=3)

dim3::dim3(unsigned int, unsigned int, unsigned int) (struct dim3 * const this, unsigned int vx, unsigned int vy, unsigned int vz)
{
  <bb 2>:
  this->x = vx;
  this->y = vy;
  this->z = vz;
  return;

}



;; Function float std::ceil(float) (_ZSt4ceilf, funcdef_no=139, decl_uid=8260, cgraph_uid=131)

float std::ceil(float) (float __x)
{
  float D.48942;

  <bb 2>:
  D.48942 = __builtin_ceilf (__x);
  return D.48942;

}



;; Function float absVal(float) (_Z6absValf, funcdef_no=3133, decl_uid=47325, cgraph_uid=2995)

float absVal(float) (float a)
{
  float D.48753;

  <bb 2>:
  if (a < 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  D.48753 = -a;
  goto <bb 5>;

  <bb 4>:
  D.48753 = a;

  <bb 5>:
  return D.48753;

}



;; Function float percentDiff(double, double) (_Z11percentDiffdd, funcdef_no=3134, decl_uid=47329, cgraph_uid=2996)

float percentDiff(double, double) (double val1, double val2)
{
  float D.48777;
  float D.48776;
  float D.48775;
  float D.48774;
  double D.48773;
  float D.48772;
  float D.48771;
  double D.48770;
  float D.48769;
  double D.48765;
  float D.48764;
  float D.48763;
  double D.48761;
  float D.48760;
  float D.48759;
  bool iftmp.1;
  bool retval.0;

  <bb 2>:
  D.48759 = (float) val1;
  D.48760 = absVal (D.48759);
  D.48761 = (double) D.48760;
  if (D.48761 < 1.00000000000000002081668171172168513294309377670288085938e-2)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  D.48763 = (float) val2;
  D.48764 = absVal (D.48763);
  D.48765 = (double) D.48764;
  if (D.48765 < 1.00000000000000002081668171172168513294309377670288085938e-2)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.1 = 1;
  goto <bb 6>;

  <bb 5>:
  iftmp.1 = 0;

  <bb 6>:
  retval.0 = iftmp.1;
  if (retval.0 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  D.48769 = 0.0;
  goto <bb 9>;

  <bb 8>:
  D.48770 = val1 - val2;
  D.48771 = (float) D.48770;
  D.48772 = absVal (D.48771);
  D.48773 = val1 + 9.99999993922529029077850282192230224609375e-9;
  D.48774 = (float) D.48773;
  D.48775 = absVal (D.48774);
  D.48776 = D.48772 / D.48775;
  D.48777 = absVal (D.48776);
  D.48769 = D.48777 * 1.0e+2;

  <bb 9>:
  return D.48769;

}



;; Function bool create_target_functions_table(Func****, int, int) (_Z29create_target_functions_tablePPPP4Funcii, funcdef_no=3139, decl_uid=47955, cgraph_uid=3001)

bool create_target_functions_table(Func****, int, int) (struct Func * * * * table_, int nrows, int ncolumns)
{
  int j;
  int i;
  bool result;
  struct Func * * * table;
  bool D.48800;
  struct Func * D.48797;
  void * D.48796;
  struct Func * * D.48795;
  long unsigned int D.48794;
  long unsigned int D.48793;
  struct Func * * D.48790;
  void * D.48789;
  long unsigned int D.48788;
  long unsigned int D.48787;
  struct Func * * * D.48786;
  long unsigned int D.48785;
  long unsigned int D.48784;
  long unsigned int D.48781;
  long unsigned int D.48780;
  struct _IO_FILE * stderr.2;

  <bb 2>:
  result = 1;
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the rows.\n", 1, 21, stderr.2);
  D.48780 = (long unsigned int) nrows;
  D.48781 = D.48780 * 8;
  table = malloc (D.48781);
  if (table != 0B)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 3>:
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the columns.\n", 1, 24, stderr.2);
  i = 0;
  goto <bb 10>;

  <bb 4>:
  D.48784 = (long unsigned int) i;
  D.48785 = D.48784 * 8;
  D.48786 = table + D.48785;
  D.48787 = (long unsigned int) ncolumns;
  D.48788 = D.48787 * 8;
  D.48789 = malloc (D.48788);
  *D.48786 = D.48789;
  D.48784 = (long unsigned int) i;
  D.48785 = D.48784 * 8;
  D.48786 = table + D.48785;
  D.48790 = *D.48786;
  if (D.48790 != 0B)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  j = 0;
  goto <bb 7>;

  <bb 6>:
  D.48784 = (long unsigned int) i;
  D.48785 = D.48784 * 8;
  D.48786 = table + D.48785;
  D.48790 = *D.48786;
  D.48793 = (long unsigned int) j;
  D.48794 = D.48793 * 8;
  D.48795 = D.48790 + D.48794;
  D.48796 = malloc (48);
  *D.48795 = D.48796;
  D.48784 = (long unsigned int) i;
  D.48785 = D.48784 * 8;
  D.48786 = table + D.48785;
  D.48790 = *D.48786;
  D.48793 = (long unsigned int) j;
  D.48794 = D.48793 * 8;
  D.48795 = D.48790 + D.48794;
  D.48797 = *D.48795;
  D.48797->f = 0B;
  j = j + 1;

  <bb 7>:
  if (j < ncolumns)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 8>:
  stderr.2 = stderr;
  __builtin_fwrite ("Error in table of target functions allocation (columns).\n", 1, 57, stderr.2);
  result = 0;

  <bb 9>:
  i = i + 1;

  <bb 10>:
  if (i < nrows)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 11>:
  stderr.2 = stderr;
  __builtin_fwrite ("Error in table of target functions allocation (rows).\n", 1, 54, stderr.2);
  result = 0;

  <bb 12>:
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the columns is OK.\n", 1, 30, stderr.2);
  *table_ = table;
  D.48800 = result;
  return D.48800;

}



;; Function void call_function_ffi_call(Func*) (_Z22call_function_ffi_callP4Func, funcdef_no=3140, decl_uid=47970, cgraph_uid=3002)

void call_function_ffi_call(Func*) (struct Func * ff)
{
  ffi_status D.48815;
  struct ffi_cif cif;
  void (*<T18c2>) (void) D.48814;
  void * D.48813;
  void * D.48812;
  void * * D.48811;
  ffi_status D.48808;
  unsigned int D.48807;
  int D.48806;
  struct ffi_type * D.48805;
  struct ffi_type * * D.48804;
  bool retval.4;
  struct _IO_FILE * stderr.3;

  <bb 2>:
  stderr.3 = stderr;
  __builtin_fwrite (" In call_function_ffi_call.\n", 1, 28, stderr.3);

  <bb 3>:
  D.48804 = ff->arg_types;
  D.48805 = ff->ret_type;
  D.48806 = ff->nargs;
  D.48807 = (unsigned int) D.48806;
  D.48815 = ffi_prep_cif (&cif, 2, D.48807, D.48805, D.48804);

  <bb 4>:
  D.48808 = D.48815;
  retval.4 = D.48808 != 0;
  if (retval.4 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  stderr.3 = stderr;
  __builtin_fwrite ("Error ffi_prep_cif.\n", 1, 20, stderr.3);

  <bb 6>:
  exit (1);

  <bb 7>:
  D.48811 = ff->arg_values;
  D.48812 = ff->ret_value;
  D.48813 = ff->f;
  D.48814 = (void (*<T18c2>) (void)) D.48813;
  ffi_call (&cif, D.48814, D.48812, D.48811);

  <bb 8>:
  cif = {CLOBBER};
  return;

<L2>:
  cif = {CLOBBER};
  resx 1

}



;; Function void init_array(int, int, int, double*, double*, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z10init_arrayiiiPdS_PA1024_dS1_S1_, funcdef_no=3141, decl_uid=47981, cgraph_uid=3003)

void init_array(int, int, int, double*, double*, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double * alpha, double * beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  int j;
  int i;
  double[1024] * D.48826;
  double[1024] * D.48825;
  double D.48824;
  double D.48823;
  double D.48822;
  double D.48821;
  double[1024] * D.48820;
  long unsigned int D.48819;
  long unsigned int D.48818;

  <bb 2>:
  *alpha = 3.2412e+4;
  *beta = 2.123e+3;
  i = 0;
  goto <bb 7>;

  <bb 3>:
  j = 0;
  goto <bb 5>;

  <bb 4>:
  D.48818 = (long unsigned int) i;
  D.48819 = D.48818 * 8192;
  D.48820 = A + D.48819;
  D.48821 = (double) i;
  D.48822 = (double) j;
  D.48823 = D.48821 * D.48822;
  D.48824 = D.48823 * 9.765625e-4;
  *D.48820[j] = D.48824;
  j = j + 1;

  <bb 5>:
  if (j < nk)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 6>:
  i = i + 1;

  <bb 7>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  i = 0;
  goto <bb 13>;

  <bb 9>:
  j = 0;
  goto <bb 11>;

  <bb 10>:
  D.48818 = (long unsigned int) i;
  D.48819 = D.48818 * 8192;
  D.48825 = B + D.48819;
  D.48821 = (double) i;
  D.48822 = (double) j;
  D.48823 = D.48821 * D.48822;
  D.48824 = D.48823 * 9.765625e-4;
  *D.48825[j] = D.48824;
  j = j + 1;

  <bb 11>:
  if (j < nj)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 12>:
  i = i + 1;

  <bb 13>:
  if (i < nk)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 14>:
  i = 0;
  goto <bb 19>;

  <bb 15>:
  j = 0;
  goto <bb 17>;

  <bb 16>:
  D.48818 = (long unsigned int) i;
  D.48819 = D.48818 * 8192;
  D.48826 = C + D.48819;
  D.48821 = (double) i;
  D.48822 = (double) j;
  D.48823 = D.48821 * D.48822;
  D.48824 = D.48823 * 9.765625e-4;
  *D.48826[j] = D.48824;
  j = j + 1;

  <bb 17>:
  if (j < nj)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 18>:
  i = i + 1;

  <bb 19>:
  if (i < ni)
    goto <bb 15>;
  else
    goto <bb 20>;

  <bb 20>:
  return;

}



;; Function void compareResults(int, int, double (*)[1024], double (*)[1024]) (_Z14compareResultsiiPA1024_dS0_, funcdef_no=3142, decl_uid=48013, cgraph_uid=3004)

void compareResults(int, int, double (*)[1024], double (*)[1024]) (int ni, int nj, double[1024] * C, double[1024] * C_output)
{
  int fail;
  int j;
  int i;
  double D.48835;
  float D.48834;
  double D.48833;
  double[1024] * D.48832;
  double D.48831;
  double[1024] * D.48830;
  long unsigned int D.48829;
  long unsigned int D.48828;
  bool retval.5;

  <bb 2>:
  fail = 0;
  i = 0;
  goto <bb 9>;

  <bb 3>:
  j = 0;
  goto <bb 7>;

  <bb 4>:
  D.48828 = (long unsigned int) i;
  D.48829 = D.48828 * 8192;
  D.48830 = C_output + D.48829;
  D.48831 = *D.48830[j];
  D.48828 = (long unsigned int) i;
  D.48829 = D.48828 * 8192;
  D.48832 = C + D.48829;
  D.48833 = *D.48832[j];
  D.48834 = percentDiff (D.48833, D.48831);
  D.48835 = (double) D.48834;
  retval.5 = D.48835 > 5.000000000000000277555756156289135105907917022705078125e-2;
  if (retval.5 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  fail = fail + 1;

  <bb 6>:
  j = j + 1;

  <bb 7>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 8>:
  i = i + 1;

  <bb 9>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  printf ("Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\n", 5.000000000000000277555756156289135105907917022705078125e-2, fail);
  return;

}



;; Function void gemm(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z4gemmiiiddPA1024_dS0_S0_, funcdef_no=3144, decl_uid=48049, cgraph_uid=3006)

void gemm(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  int k;
  int j;
  int i;
  double D.48852;
  double D.48851;
  double D.48850;
  double[1024] * D.48849;
  long unsigned int D.48848;
  long unsigned int D.48847;
  double D.48846;
  double D.48845;
  double[1024] * D.48844;
  double D.48843;
  double D.48842;
  double[1024] * D.48841;
  long unsigned int D.48840;
  long unsigned int D.48839;

  <bb 2>:
  i = 0;
  goto <bb 10>;

  <bb 3>:
  j = 0;
  goto <bb 8>;

  <bb 4>:
  D.48839 = (long unsigned int) i;
  D.48840 = D.48839 * 8192;
  D.48841 = C + D.48840;
  D.48839 = (long unsigned int) i;
  D.48840 = D.48839 * 8192;
  D.48841 = C + D.48840;
  D.48842 = *D.48841[j];
  D.48843 = D.48842 * beta;
  *D.48841[j] = D.48843;
  k = 0;
  goto <bb 6>;

  <bb 5>:
  D.48839 = (long unsigned int) i;
  D.48840 = D.48839 * 8192;
  D.48841 = C + D.48840;
  D.48839 = (long unsigned int) i;
  D.48840 = D.48839 * 8192;
  D.48841 = C + D.48840;
  D.48842 = *D.48841[j];
  D.48839 = (long unsigned int) i;
  D.48840 = D.48839 * 8192;
  D.48844 = A + D.48840;
  D.48845 = *D.48844[k];
  D.48846 = D.48845 * alpha;
  D.48847 = (long unsigned int) k;
  D.48848 = D.48847 * 8192;
  D.48849 = B + D.48848;
  D.48850 = *D.48849[j];
  D.48851 = D.48846 * D.48850;
  D.48852 = D.48842 + D.48851;
  *D.48841[j] = D.48852;
  k = k + 1;

  <bb 6>:
  if (k < nk)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 7>:
  j = j + 1;

  <bb 8>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 9>:
  i = i + 1;

  <bb 10>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  return;

}



;; Function void gemm_omp_kernel(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_, funcdef_no=3146, decl_uid=48084, cgraph_uid=3008)


OMP region tree

bb 2: gimple_omp_parallel
    bb 3: gimple_omp_for
    bb 10: GIMPLE_OMP_CONTINUE
    bb 11: GIMPLE_OMP_RETURN
bb 12: GIMPLE_OMP_RETURN

Merging blocks 2 and 17
Merging blocks 2 and 13
void gemm_omp_kernel(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  unsigned int retval.74;
  bool D.49173;
  long int .iend0.73;
  int D.49172;
  long int .istart0.72;
  long int D.49168;
  bool D.49169;
  long int .iend0.71;
  long int .istart0.70;
  int k;
  int j;
  int i;
  int D.48915;
  int k;
  int j;
  int i;
  int retval.6;
  struct .omp_data_s.10 .omp_data_o.11;
  int D.48914;
  int D.48913;
  double[1024] * D.48912;
  double D.48911;
  double[1024] * D.48910;
  double[1024] * D.48909;
  double[1024] * D.48908;
  double D.48907;
  double[1024] * D.48906;
  double[1024] * D.48905;

  <bb 2>:
  retval.6 = omp_get_num_procs ();
  .omp_data_o.11.alpha = alpha;
  .omp_data_o.11.beta = beta;
  .omp_data_o.11.A = A;
  .omp_data_o.11.B = B;
  .omp_data_o.11.C = C;
  .omp_data_o.11.ni = ni;
  .omp_data_o.11.nj = nj;
  .omp_data_o.11.nk = nk;
  retval.74 = (unsigned int) retval.6;
  __builtin_GOMP_parallel_start (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0, &.omp_data_o.11, retval.74);
  _Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0 (&.omp_data_o.11);
  __builtin_GOMP_parallel_end ();
  alpha = .omp_data_o.11.alpha;
  beta = .omp_data_o.11.beta;
  A = .omp_data_o.11.A;
  B = .omp_data_o.11.B;
  C = .omp_data_o.11.C;
  ni = .omp_data_o.11.ni;
  nj = .omp_data_o.11.nj;
  nk = .omp_data_o.11.nk;
  return;

}



;; Function void GPU_argv_init() (_Z13GPU_argv_initv, funcdef_no=3148, decl_uid=48108, cgraph_uid=3010)

void GPU_argv_init() ()
{
  struct cudaDeviceProp deviceProp;
  struct _IO_FILE * stderr.12;

  <bb 2>:
  stderr.12 = stderr;
  __builtin_fwrite ("GPU init.\n", 1, 10, stderr.12);

  <bb 3>:
  cudaGetDeviceProperties (&deviceProp, 0);

  <bb 4>:
  printf ("setting device %d with name %s\n", 0, &deviceProp.name);

  <bb 5>:
  cudaSetDevice (0);

  <bb 6>:
  deviceProp = {CLOBBER};
  return;

<L0>:
  deviceProp = {CLOBBER};
  resx 1

}



;; Function void polybench_flush_cache() (_Z21polybench_flush_cachev, funcdef_no=3152, decl_uid=48392, cgraph_uid=3014)

void polybench_flush_cache() ()
{
  static const char __PRETTY_FUNCTION__[29] = "void polybench_flush_cache()";
  double tmp;
  int i;
  double * flush;
  int cs;
  double D.49035;
  double * D.49034;
  long unsigned int D.49033;
  long unsigned int D.49032;
  long unsigned int D.49031;
  long unsigned int D.49030;

  <bb 2>:
  D.49030 = 4194560;
  cs = (int) D.49030;
  D.49031 = (long unsigned int) cs;
  flush = calloc (D.49031, 8);
  tmp = 0.0;
  i = 0;
  goto <bb 4>;

  <bb 3>:
  D.49032 = (long unsigned int) i;
  D.49033 = D.49032 * 8;
  D.49034 = flush + D.49033;
  D.49035 = *D.49034;
  tmp = D.49035 + tmp;
  i = i + 1;

  <bb 4>:
  if (i < cs)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  if (tmp <= 1.0e+1)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  __assert_fail ("tmp <= 10.0", "../../../utilities/polybench.c", 96, &__PRETTY_FUNCTION__);

  <bb 7>:
  free (flush);
  return;

}



;; Function void polybench_prepare_instruments() (_Z29polybench_prepare_instrumentsv, funcdef_no=3153, decl_uid=48403, cgraph_uid=3015)

void polybench_prepare_instruments() ()
{
  <bb 2>:
  polybench_flush_cache ();
  return;

}



;; Function void polybench_timer_start() (_Z21polybench_timer_startv, funcdef_no=3154, decl_uid=47315, cgraph_uid=3016)

void polybench_timer_start() ()
{
  double D.49040;
  double polybench_t_start.37;

  <bb 2>:
  polybench_prepare_instruments ();
  D.49040 = rtclock ();
  polybench_t_start.37 = D.49040;
  polybench_t_start = polybench_t_start.37;
  return;

}



;; Function void polybench_timer_stop() (_Z20polybench_timer_stopv, funcdef_no=3155, decl_uid=47316, cgraph_uid=3017)

void polybench_timer_stop() ()
{
  double D.49054;
  double polybench_t_end.38;

  <bb 2>:
  D.49054 = rtclock ();
  polybench_t_end.38 = D.49054;
  polybench_t_end = polybench_t_end.38;
  return;

}



;; Function void polybench_timer_print() (_Z21polybench_timer_printv, funcdef_no=3156, decl_uid=47317, cgraph_uid=3018)

void polybench_timer_print() ()
{
  double D.49057;
  double polybench_t_start.40;
  double polybench_t_end.39;

  <bb 2>:
  polybench_t_end.39 = polybench_t_end;
  polybench_t_start.40 = polybench_t_start;
  D.49057 = polybench_t_end.39 - polybench_t_start.40;
  printf ("%0.6f\n", D.49057);
  return;

}



;; Function void gemm_original(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z13gemm_originaliiiddPA1024_dS0_S0_, funcdef_no=3145, decl_uid=48074, cgraph_uid=3007)

void gemm_original(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  <bb 2>:
  polybench_timer_start ();
  gemm (ni, nj, nk, alpha, beta, A, B, C);
  polybench_timer_stop ();
  __builtin_puts (&"Original CPU Time in seconds:"[0]);
  polybench_timer_print ();
  return;

}



;; Function void gemm_omp(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z8gemm_ompiiiddPA1024_dS0_S0_, funcdef_no=3147, decl_uid=48106, cgraph_uid=3009)

void gemm_omp(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C_outputFromOMP)
{
  <bb 2>:
  polybench_timer_start ();
  gemm_omp_kernel (ni, nj, nk, alpha, beta, A, B, C_outputFromOMP);
  __builtin_puts (&"OpenMP Time in seconds:"[0]);
  polybench_timer_stop ();
  polybench_timer_print ();
  return;

}



;; Function void* polybench_alloc_data(long long unsigned int, int) (_Z20polybench_alloc_datayi, funcdef_no=3158, decl_uid=47323, cgraph_uid=3020)

void* polybench_alloc_data(long long unsigned int, int) (long long unsigned int n, int elt_size)
{
  void * D.49061;
  void * ret;
  size_t val;
  void * D.49059;
  long unsigned int D.49058;

  <bb 2>:
  val = n;
  D.49058 = (long unsigned int) elt_size;
  val = D.49058 * val;
  D.49061 = xmalloc (val);
  ret = D.49061;
  D.49059 = ret;
  return D.49059;

}



;; Function int main(int, char**) (main, funcdef_no=3150, decl_uid=48156, cgraph_uid=3012)

int main(int, char**) (int argc, char * * argv)
{
  bool D.49016;
  void * D.49015;
  void * D.49014;
  double[1024][1024] * D.49013;
  void * D.49012;
  void * D.49011;
  void * D.49010;
  static const char __PRETTY_FUNCTION__[22] = "int main(int, char**)";
  int ndevices;
  int nloops;
  struct Func * ff_0;
  int n_params;
  double[1024][1024] * C_outputFromGpu;
  double[1024][1024] * C_inputToGpu;
  double[1024][1024] * C_outputFromOMP;
  double[1024][1024] * C;
  double[1024][1024] * B;
  double[1024][1024] * A;
  double beta;
  double alpha;
  int nk;
  int nj;
  int ni;
  int D.49008;
  unsigned char D.49004;
  char * D.49003;
  double[1024][1024] * C_outputFromGpu.35;
  double alpha.34;
  double beta.33;
  double[1024][1024] * C_inputToGpu.32;
  int ni.31;
  int nj.30;
  int nk.29;
  double[1024][1024] * A.28;
  double[1024][1024] * B.27;
  double[1024][1024] * C.26;
  struct Func * * * TablePointerFunctions.25;
  struct Func * D.48986;
  struct Func * * D.48985;
  struct Func * * D.48984;
  struct Func * * * table.24;
  bool retval.23;
  struct ffi_type * * D.48977;
  struct ffi_type * * D.48976;
  struct ffi_type * * D.48975;
  struct ffi_type * * D.48974;
  struct ffi_type * * D.48973;
  struct ffi_type * * D.48972;
  struct ffi_type * * D.48971;
  struct ffi_type * * D.48970;
  struct ffi_type * * D.48969;
  struct ffi_type * * D.48968;
  struct ffi_type * * D.48967;
  void * * D.48966;
  void * * D.48965;
  void * * D.48964;
  void * * D.48963;
  void * * D.48962;
  void * * D.48961;
  void * * D.48960;
  void * * D.48959;
  void * * D.48958;
  void * * D.48957;
  void * * D.48956;
  void * * D.48955;
  void * D.48954;
  void * D.48953;
  long unsigned int D.48952;
  long unsigned int D.48951;
  int D.48950;
  struct _IO_FILE * stderr.22;
  void * C_outputFromGpu.21;
  void * C_inputToGpu.20;
  void * C.19;
  void * B.18;
  void * A.17;

  <bb 2>:
  ni = 1024;
  nj = 1024;
  nk = 1024;
  D.49010 = polybench_alloc_data (1048576, 8);

  <bb 3>:
  A.17 = D.49010;
  A = A.17;
  D.49011 = polybench_alloc_data (1048576, 8);

  <bb 4>:
  B.18 = D.49011;
  B = B.18;
  D.49012 = polybench_alloc_data (1048576, 8);

  <bb 5>:
  C.19 = D.49012;
  C = C.19;
  D.49013 = polybench_alloc_data (1048576, 8);

  <bb 6>:
  C_outputFromOMP = D.49013;
  D.49014 = polybench_alloc_data (1048576, 8);

  <bb 7>:
  C_inputToGpu.20 = D.49014;
  C_inputToGpu = C_inputToGpu.20;
  D.49015 = polybench_alloc_data (1048576, 8);

  <bb 8>:
  C_outputFromGpu.21 = D.49015;
  C_outputFromGpu = C_outputFromGpu.21;
  stderr.22 = stderr;
  __builtin_fwrite ("Preparing alternatives functions.\n", 1, 34, stderr.22);

  <bb 9>:
  n_params = 10;
  ff_0 = malloc (48);
  D.48950 = n_params + 1;
  D.48951 = (long unsigned int) D.48950;
  D.48952 = D.48951 * 8;
  D.48953 = malloc (D.48952);
  ff_0->arg_types = D.48953;
  D.48950 = n_params + 1;
  D.48951 = (long unsigned int) D.48950;
  D.48952 = D.48951 * 8;
  D.48954 = malloc (D.48952);
  ff_0->arg_values = D.48954;
  ff_0->f = gemm_cuda;
  D.48955 = &ff_0->ret_value;
  memset (D.48955, 0, 8);
  ff_0->ret_type = &ffi_type_void;
  ff_0->nargs = n_params;
  D.48956 = ff_0->arg_values;
  *D.48956 = &ni;
  D.48956 = ff_0->arg_values;
  D.48957 = D.48956 + 8;
  *D.48957 = &nj;
  D.48956 = ff_0->arg_values;
  D.48958 = D.48956 + 16;
  *D.48958 = &nk;
  D.48956 = ff_0->arg_values;
  D.48959 = D.48956 + 24;
  *D.48959 = &alpha;
  D.48956 = ff_0->arg_values;
  D.48960 = D.48956 + 32;
  *D.48960 = &beta;
  D.48956 = ff_0->arg_values;
  D.48961 = D.48956 + 40;
  *D.48961 = &A;
  D.48956 = ff_0->arg_values;
  D.48962 = D.48956 + 48;
  *D.48962 = &B;
  D.48956 = ff_0->arg_values;
  D.48963 = D.48956 + 56;
  *D.48963 = &C;
  D.48956 = ff_0->arg_values;
  D.48964 = D.48956 + 64;
  *D.48964 = &C_inputToGpu;
  D.48956 = ff_0->arg_values;
  D.48965 = D.48956 + 72;
  *D.48965 = &C_outputFromGpu;
  D.48956 = ff_0->arg_values;
  D.48966 = D.48956 + 80;
  *D.48966 = 0B;
  D.48967 = ff_0->arg_types;
  *D.48967 = &ffi_type_sint32;
  D.48967 = ff_0->arg_types;
  D.48968 = D.48967 + 8;
  *D.48968 = &ffi_type_sint32;
  D.48967 = ff_0->arg_types;
  D.48969 = D.48967 + 16;
  *D.48969 = &ffi_type_sint32;
  D.48967 = ff_0->arg_types;
  D.48970 = D.48967 + 24;
  *D.48970 = &ffi_type_double;
  D.48967 = ff_0->arg_types;
  D.48971 = D.48967 + 32;
  *D.48971 = &ffi_type_double;
  D.48967 = ff_0->arg_types;
  D.48972 = D.48967 + 40;
  *D.48972 = &ffi_type_pointer;
  D.48967 = ff_0->arg_types;
  D.48973 = D.48967 + 48;
  *D.48973 = &ffi_type_pointer;
  D.48967 = ff_0->arg_types;
  D.48974 = D.48967 + 56;
  *D.48974 = &ffi_type_pointer;
  D.48967 = ff_0->arg_types;
  D.48975 = D.48967 + 64;
  *D.48975 = &ffi_type_pointer;
  D.48967 = ff_0->arg_types;
  D.48976 = D.48967 + 72;
  *D.48976 = &ffi_type_pointer;
  D.48967 = ff_0->arg_types;
  D.48977 = D.48967 + 80;
  *D.48977 = 0B;
  stderr.22 = stderr;
  __builtin_fwrite ("Creating table of target functions.\n", 1, 36, stderr.22);

  <bb 10>:
  nloops = 1;
  ndevices = 2;
  D.49016 = create_target_functions_table (&table, nloops, ndevices);

  <bb 11>:
  retval.23 = D.49016;
  if (retval.23 != 0)
    goto <bb 12>;
  else
    goto <bb 17>;

  <bb 12>:
  table.24 = table;
  if (table.24 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __assert_fail ("table != __null", "gemm.cu", 369, &__PRETTY_FUNCTION__);

  <bb 14>:
  stderr.22 = stderr;
  __builtin_fwrite ("Declaring function in 0,1.\n", 1, 27, stderr.22);

  <bb 15>:
  table.24 = table;
  D.48984 = *table.24;
  D.48985 = D.48984 + 8;
  D.48986 = *D.48985;
  *D.48986 = MEM[(const struct Func &)ff_0];
  table.24 = table;
  TablePointerFunctions = table.24;
  TablePointerFunctions.25 = TablePointerFunctions;
  if (TablePointerFunctions.25 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  __assert_fail ("TablePointerFunctions != __null", "gemm.cu", 375, &__PRETTY_FUNCTION__);

  <bb 17>:
  stderr.22 = stderr;
  __builtin_fwrite ("Calling init_array.\n", 1, 20, stderr.22);

  <bb 18>:
  C.26 = C;
  B.27 = B;
  A.28 = A;
  nk.29 = nk;
  nj.30 = nj;
  ni.31 = ni;
  init_array (ni.31, nj.30, nk.29, &alpha, &beta, A.28, B.27, C.26);
  C.26 = C;
  memcpy (C_outputFromOMP, C.26, 8);
  C.26 = C;
  C_inputToGpu.32 = C_inputToGpu;
  memcpy (C_inputToGpu.32, C.26, 8);
  stderr.22 = stderr;
  __builtin_fwrite ("Calling gemm_original.\n", 1, 23, stderr.22);

  <bb 19>:
  C.26 = C;
  B.27 = B;
  A.28 = A;
  beta.33 = beta;
  alpha.34 = alpha;
  nk.29 = nk;
  nj.30 = nj;
  ni.31 = ni;
  gemm_original (ni.31, nj.30, nk.29, alpha.34, beta.33, A.28, B.27, C.26);

  <bb 20>:
  stderr.22 = stderr;
  __builtin_fwrite ("Calling gemm_omp.\n", 1, 18, stderr.22);

  <bb 21>:
  B.27 = B;
  A.28 = A;
  beta.33 = beta;
  alpha.34 = alpha;
  nk.29 = nk;
  nj.30 = nj;
  ni.31 = ni;
  gemm_omp (ni.31, nj.30, nk.29, alpha.34, beta.33, A.28, B.27, C_outputFromOMP);

  <bb 22>:
  stderr.22 = stderr;
  __builtin_fwrite ("Calling compareResults(original, omp).\n", 1, 39, stderr.22);

  <bb 23>:
  C.26 = C;
  nj.30 = nj;
  ni.31 = ni;
  compareResults (ni.31, nj.30, C.26, C_outputFromOMP);

  <bb 24>:
  stderr.22 = stderr;
  __builtin_fwrite ("Calling compareResults(original, cuda).\n", 1, 40, stderr.22);

  <bb 25>:
  C_outputFromGpu.35 = C_outputFromGpu;
  C.26 = C;
  nj.30 = nj;
  ni.31 = ni;
  compareResults (ni.31, nj.30, C.26, C_outputFromGpu.35);

  <bb 26>:
  if (argc > 42)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 27>:
  D.49003 = *argv;
  D.49004 = MEM[(const unsigned char * {ref-all})D.49003];
  if (D.49004 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  C_outputFromGpu.35 = C_outputFromGpu;
  nj.30 = nj;
  ni.31 = ni;
  print_array (ni.31, nj.30, C_outputFromGpu.35);

  <bb 29>:
  A.28 = A;
  free (A.28);
  B.27 = B;
  free (B.27);
  C.26 = C;
  free (C.26);
  free (C_outputFromOMP);
  C_outputFromGpu.35 = C_outputFromGpu;
  free (C_outputFromGpu.35);
  D.49008 = 0;
  ni = {CLOBBER};
  nj = {CLOBBER};
  nk = {CLOBBER};
  alpha = {CLOBBER};
  beta = {CLOBBER};
  A = {CLOBBER};
  B = {CLOBBER};
  C = {CLOBBER};
  C_inputToGpu = {CLOBBER};
  C_outputFromGpu = {CLOBBER};
  return D.49008;

<L14>:
  ni = {CLOBBER};
  nj = {CLOBBER};
  nk = {CLOBBER};
  alpha = {CLOBBER};
  beta = {CLOBBER};
  A = {CLOBBER};
  B = {CLOBBER};
  C = {CLOBBER};
  C_inputToGpu = {CLOBBER};
  C_outputFromGpu = {CLOBBER};
  resx 1

}



;; Function void __sti____cudaRegisterAll_39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611() (_ZL76__sti____cudaRegisterAll_39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611v, funcdef_no=3194, decl_uid=48692, cgraph_uid=3055)

void __sti____cudaRegisterAll_39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611() ()
{
  void * * D.49117;
  void (*<T52da>) (void * *) callback_fp;
  void * * __cudaFatCubinHandle.52;
  void * * __cudaFatCubinHandle.51;

  <bb 2>:
  D.49117 = __cudaRegisterFatBinary (&__fatDeviceText);
  __cudaFatCubinHandle.51 = D.49117;
  __cudaFatCubinHandle = __cudaFatCubinHandle.51;
  callback_fp = __nv_cudaEntityRegisterCallback;
  __cudaFatCubinHandle.52 = __cudaFatCubinHandle;
  callback_fp (__cudaFatCubinHandle.52);
  atexit (__cudaUnregisterBinaryUtil);
  return;

}



;; Function cudaError_t _GLOBAL__N__39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch(T*) [with T = char; cudaError_t = cudaError] (_ZN63_GLOBAL__N__39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e461110cudaLaunchIcEE9cudaErrorPT_, funcdef_no=3195, decl_uid=48720, cgraph_uid=3056)

cudaError_t _GLOBAL__N__39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch(T*) [with T = char; cudaError_t = cudaError] (char * func)
{
  cudaError_t D.49114;
  cudaError_t D.49112;

  <bb 2>:
  D.49114 = cudaLaunch (func);
  D.49112 = D.49114;
  return D.49112;

}



;; Function void __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_(int, int, int, double, double, double*, double*, double*) (_Z45__device_stub__Z16gemm_cuda_kerneliiiddPdS_S_iiiddPdS_S_, funcdef_no=3191, decl_uid=48689, cgraph_uid=3052)

void __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_(int, int, int, double, double, double*, double*, double*) (int __par0, int __par1, int __par2, double __par3, double __par4, double * __par5, double * __par6, double * __par7)
{
  cudaError D.49111;
  cudaError D.49110;
  cudaError D.49109;
  cudaError D.49108;
  cudaError D.49107;
  cudaError D.49106;
  cudaError D.49105;
  cudaError D.49104;
  static volatile char * __f;
  cudaError D.49100;
  bool retval.50;
  cudaError D.49096;
  bool retval.49;
  cudaError D.49092;
  bool retval.48;
  cudaError D.49088;
  bool retval.47;
  cudaError D.49084;
  bool retval.46;
  cudaError D.49080;
  bool retval.45;
  cudaError D.49076;
  bool retval.44;
  cudaError D.49072;
  bool retval.43;

  <bb 2>:
  D.49104 = cudaSetupArgument (&__par0, 4, 0);
  D.49072 = D.49104;
  retval.43 = D.49072 != 0;
  if (retval.43 != 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  D.49105 = cudaSetupArgument (&__par1, 4, 4);
  D.49076 = D.49105;
  retval.44 = D.49076 != 0;
  if (retval.44 != 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  D.49106 = cudaSetupArgument (&__par2, 4, 8);
  D.49080 = D.49106;
  retval.45 = D.49080 != 0;
  if (retval.45 != 0)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  D.49107 = cudaSetupArgument (&__par3, 8, 16);
  D.49084 = D.49107;
  retval.46 = D.49084 != 0;
  if (retval.46 != 0)
    goto <bb 11>;
  else
    goto <bb 6>;

  <bb 6>:
  D.49108 = cudaSetupArgument (&__par4, 8, 24);
  D.49088 = D.49108;
  retval.47 = D.49088 != 0;
  if (retval.47 != 0)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  D.49109 = cudaSetupArgument (&__par5, 8, 32);
  D.49092 = D.49109;
  retval.48 = D.49092 != 0;
  if (retval.48 != 0)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  D.49110 = cudaSetupArgument (&__par6, 8, 40);
  D.49096 = D.49110;
  retval.49 = D.49096 != 0;
  if (retval.49 != 0)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  D.49111 = cudaSetupArgument (&__par7, 8, 48);
  D.49100 = D.49111;
  retval.50 = D.49100 != 0;
  if (retval.50 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __f = gemm_cuda_kernel;
  _GLOBAL__N__39_tmpxft_00004afe_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch<char> (gemm_cuda_kernel);

  <bb 11>:
  return;

}



;; Function void gemm_cuda_kernel(int, int, int, double, double, double*, double*, double*) (_Z16gemm_cuda_kerneliiiddPdS_S_, funcdef_no=3192, decl_uid=48119, cgraph_uid=3053)

void gemm_cuda_kernel(int, int, int, double, double, double*, double*, double*) (int __cuda_0, int __cuda_1, int __cuda_2, double __cuda_3, double __cuda_4, double * __cuda_5, double * __cuda_6, double * __cuda_7)
{
  <bb 2>:
  __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_ (__cuda_0, __cuda_1, __cuda_2, __cuda_3, __cuda_4, __cuda_5, __cuda_6, __cuda_7);
  return;

}



;; Function void gemm_cuda(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024]) (_Z9gemm_cudaiiiddPA1024_dS0_S0_S0_S0_, funcdef_no=3149, decl_uid=48130, cgraph_uid=3011)

void gemm_cuda(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C, double[1024] * C_inputToGpu, double[1024] * C_outputFromGpu)
{
  cudaError D.48940;
  struct dim3 grid;
  struct dim3 block;
  double * C_gpu;
  double * B_gpu;
  double * A_gpu;
  cudaError D.48936;
  unsigned int D.48935;
  long unsigned int D.48934;
  float D.48933;
  float D.48932;
  float D.48931;
  unsigned int D.48930;
  unsigned int D.48929;
  long unsigned int D.48928;
  float D.48927;
  float D.48926;
  float D.48925;
  unsigned int D.48924;
  double * C_gpu.16;
  double * B_gpu.15;
  double * A_gpu.14;
  long unsigned int D.48920;
  struct _IO_FILE * stderr.13;

  <bb 2>:
  stderr.13 = stderr;
  __builtin_fwrite ("Calling function gemm_cuda.\n", 1, 28, stderr.13);

  <bb 3>:
  GPU_argv_init ();

  <bb 4>:
  polybench_timer_start ();

  <bb 5>:
  D.48920 = 8388608;
  cudaMalloc (&A_gpu, D.48920);

  <bb 6>:
  D.48920 = 8388608;
  cudaMalloc (&B_gpu, D.48920);

  <bb 7>:
  D.48920 = 8388608;
  cudaMalloc (&C_gpu, D.48920);

  <bb 8>:
  polybench_timer_stop ();

  <bb 9>:
  __builtin_puts (&"GPU cuda Malloc Time in seconds:"[0]);

  <bb 10>:
  polybench_timer_print ();

  <bb 11>:
  polybench_timer_start ();

  <bb 12>:
  D.48920 = 8388608;
  A_gpu.14 = A_gpu;
  cudaMemcpy (A_gpu.14, A, D.48920, 1);

  <bb 13>:
  D.48920 = 8388608;
  B_gpu.15 = B_gpu;
  cudaMemcpy (B_gpu.15, B, D.48920, 1);

  <bb 14>:
  D.48920 = 8388608;
  C_gpu.16 = C_gpu;
  cudaMemcpy (C_gpu.16, C_inputToGpu, D.48920, 1);

  <bb 15>:
  polybench_timer_stop ();

  <bb 16>:
  __builtin_puts (&"GPU Data Transfers Time in seconds:"[0]);

  <bb 17>:
  polybench_timer_print ();

  <bb 18>:
  dim3::dim3 (&block, 32, 8, 1);
  D.48924 = block.y;
  D.48925 = (float) D.48924;
  D.48926 = 1.024e+3 / D.48925;
  D.48927 = std::ceil (D.48926);
  D.48928 = (long unsigned int) D.48927;
  D.48929 = (unsigned int) D.48928;
  D.48930 = block.x;
  D.48931 = (float) D.48930;
  D.48932 = 1.024e+3 / D.48931;
  D.48933 = std::ceil (D.48932);
  D.48934 = (long unsigned int) D.48933;
  D.48935 = (unsigned int) D.48934;
  dim3::dim3 (&grid, D.48935, D.48929, 1);
  polybench_timer_start ();

  <bb 19>:
  D.48940 = cudaConfigureCall (grid, block, 0, 0B);

  <bb 20>:
  D.48936 = D.48940;
  if (D.48936 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  C_gpu.16 = C_gpu;
  B_gpu.15 = B_gpu;
  A_gpu.14 = A_gpu;
  gemm_cuda_kernel (ni, nj, nk, alpha, beta, A_gpu.14, B_gpu.15, C_gpu.16);

  <bb 22>:
  cudaThreadSynchronize ();

  <bb 23>:
  __builtin_puts (&"GPU kernel Time in seconds:"[0]);

  <bb 24>:
  polybench_timer_stop ();

  <bb 25>:
  polybench_timer_print ();

  <bb 26>:
  polybench_timer_start ();

  <bb 27>:
  D.48920 = 8388608;
  C_gpu.16 = C_gpu;
  cudaMemcpy (C_outputFromGpu, C_gpu.16, D.48920, 2);

  <bb 28>:
  __builtin_puts (&"GPU copy result Time in seconds:"[0]);

  <bb 29>:
  polybench_timer_stop ();

  <bb 30>:
  polybench_timer_print ();

  <bb 31>:
  A_gpu.14 = A_gpu;
  cudaFree (A_gpu.14);

  <bb 32>:
  B_gpu.15 = B_gpu;
  cudaFree (B_gpu.15);

  <bb 33>:
  C_gpu.16 = C_gpu;
  cudaFree (C_gpu.16);

  <bb 34>:
  A_gpu = {CLOBBER};
  B_gpu = {CLOBBER};
  C_gpu = {CLOBBER};
  block = {CLOBBER};
  grid = {CLOBBER};
  return;

<L3>:
  A_gpu = {CLOBBER};
  B_gpu = {CLOBBER};
  C_gpu = {CLOBBER};
  block = {CLOBBER};
  grid = {CLOBBER};
  resx 1

}



;; Function <built-in> (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0, funcdef_no=3196, decl_uid=48877, cgraph_uid=3066)

<built-in> (struct .omp_data_s.10 * .omp_data_i)
{
  double[1024] * C [value-expr: .omp_data_i->C];
  double[1024] * B [value-expr: .omp_data_i->B];
  double[1024] * A [value-expr: .omp_data_i->A];
  double beta [value-expr: .omp_data_i->beta];
  double alpha [value-expr: .omp_data_i->alpha];
  int nk [value-expr: .omp_data_i->nk];
  int nj [value-expr: .omp_data_i->nj];
  int ni [value-expr: .omp_data_i->ni];
  double D.49217;
  double D.49216;
  double D.49215;
  double[1024] * D.49214;
  double[1024] * D.49213;
  long unsigned int D.49212;
  long unsigned int D.49211;
  double D.49210;
  double D.49209;
  double D.49208;
  double[1024] * D.49207;
  double[1024] * D.49206;
  double[1024] * D.49205;
  double[1024] * D.49204;
  int D.49203;
  int k;
  double D.49201;
  double D.49200;
  double D.49199;
  double[1024] * D.49198;
  double[1024] * D.49197;
  double[1024] * D.49196;
  long unsigned int D.49195;
  long unsigned int D.49194;
  bool D.49193;
  int D.49192;
  int j;
  int D.49190;
  long int .iend0.73;
  int i;
  long int .istart0.72;
  bool D.49186;
  long int .iend0.71;
  long int .istart0.70;
  long int D.49183;
  int D.49182;
  long long int q_data_transfer_read.9;
  long unsigned int D.49180;
  long long int q_data_transfer_write.8;
  long unsigned int D.49178;
  long unsigned int D.49177;
  long unsigned int D.49176;
  long int num_threads_defined.7;
  int D.49174;

  <bb 16>:

  <bb 3>:
  current_loop_index = 0;
  D.49174 = omp_get_num_procs ();
  num_threads_defined.7 = (long int) D.49174;
  num_threads_defined = num_threads_defined.7;
  D.49176 = 16;
  D.49177 = D.49176 + 8;
  D.49178 = D.49177 * 1048576;
  q_data_transfer_write.8 = (long long int) D.49178;
  q_data_transfer_write = q_data_transfer_write.8;
  D.49180 = 8388608;
  q_data_transfer_read.9 = (long long int) D.49180;
  q_data_transfer_read = q_data_transfer_read.9;
  D.49182 = .omp_data_i->ni;
  D.49183 = (long int) D.49182;
  D.49186 = __builtin_GOMP_loop_runtime_start (0, D.49183, 1, &.istart0.70, &.iend0.71);
  if (D.49186 != 0)
    goto <bb 14>;
  else
    goto <bb 11>;

  <bb 14>:
  .istart0.72 = .istart0.70;
  i = (int) .istart0.72;
  .iend0.73 = .iend0.71;
  D.49190 = (int) .iend0.73;

  <bb 4>:
  j = 0;

  <bb 9>:
  D.49192 = .omp_data_i->nj;
  if (j < D.49192)
    goto <bb 5>;
  else
    goto <bb 10>;

  <bb 10>:
  i = i + 1;
  if (i < D.49190)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  D.49193 = __builtin_GOMP_loop_runtime_next (&.istart0.70, &.iend0.71);
  if (D.49193 != 0)
    goto <bb 14>;
  else
    goto <bb 11>;

  <bb 5>:
  D.49194 = (long unsigned int) i;
  D.49195 = D.49194 * 8192;
  D.49196 = .omp_data_i->C;
  D.49197 = D.49196 + D.49195;
  D.49194 = (long unsigned int) i;
  D.49195 = D.49194 * 8192;
  D.49198 = .omp_data_i->C;
  D.49197 = D.49198 + D.49195;
  D.49199 = *D.49197[j];
  D.49200 = .omp_data_i->beta;
  D.49201 = D.49199 * D.49200;
  *D.49197[j] = D.49201;
  k = 0;

  <bb 7>:
  D.49203 = .omp_data_i->nk;
  if (k < D.49203)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 8>:
  j = j + 1;
  goto <bb 9>;

  <bb 6>:
  D.49194 = (long unsigned int) i;
  D.49195 = D.49194 * 8192;
  D.49204 = .omp_data_i->C;
  D.49197 = D.49204 + D.49195;
  D.49194 = (long unsigned int) i;
  D.49195 = D.49194 * 8192;
  D.49205 = .omp_data_i->C;
  D.49197 = D.49205 + D.49195;
  D.49199 = *D.49197[j];
  D.49194 = (long unsigned int) i;
  D.49195 = D.49194 * 8192;
  D.49206 = .omp_data_i->A;
  D.49207 = D.49206 + D.49195;
  D.49208 = *D.49207[k];
  D.49209 = .omp_data_i->alpha;
  D.49210 = D.49208 * D.49209;
  D.49211 = (long unsigned int) k;
  D.49212 = D.49211 * 8192;
  D.49213 = .omp_data_i->B;
  D.49214 = D.49213 + D.49212;
  D.49215 = *D.49214[j];
  D.49216 = D.49210 * D.49215;
  D.49217 = D.49199 + D.49216;
  *D.49197[j] = D.49217;
  k = k + 1;
  goto <bb 7>;

  <bb 11>:
  __builtin_GOMP_loop_end_nowait ();

  <bb 12>:
  return;

}


