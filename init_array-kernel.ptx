//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	init_array_kernel
                                        // @init_array_kernel
.visible .entry init_array_kernel(
	.param .u64 init_array_kernel_param_0,
	.param .u64 init_array_kernel_param_1
)
{
	.reg .s32 	%r<18>;
	.reg .s64 	%rd<7>;

// BB#0:                                // %entry
	ld.param.u64 	%rd3, [init_array_kernel_param_1];
	ld.param.u64 	%rd2, [init_array_kernel_param_0];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	mov.u32 	%r3, %tid.z;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ntid.y;
	mov.u32 	%r8, %ntid.z;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r10, %r7, %r6;
	mul.lo.s32 	%r11, %r8, %r10;
	mul.lo.s32 	%r12, %r9, %r11;
	mad.lo.s32 	%r13, %r2, %r6, %r1;
	mad.lo.s32 	%r14, %r3, %r10, %r13;
	mad.lo.s32 	%r15, %r4, %r11, %r14;
	mad.lo.s32 	%r16, %r5, %r12, %r15;
	cvt.s64.s32	%rd1, %r16;
// BB#1:                                // %bb_1
	shl.b64 	%rd4, %rd1, 2;
	add.s64 	%rd5, %rd2, %rd4;
	mov.u32 	%r17, 1056964608;
	st.global.u32 	[%rd5], %r17;
	add.s64 	%rd6, %rd3, %rd4;
	st.global.u32 	[%rd6], %r17;
// BB#2:                                // %return
	ret;
}


