Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
Preparing alternatives functions.
Creating table of target functions.
Allocating the rows.
Allocating the columns.
Allocating the columns is OK.
Declaring function in 0,0.
Calling init_array.
Copying C to C_outputFromOMP.
Copying C to C_outputFromGpu.
Calling Original.
Calling OMP.
Calling compareResults(original, omp).
Calling compareResults(original, cuda).
