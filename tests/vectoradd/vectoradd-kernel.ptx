//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	vectoradd_kernel
                                        // @vectoradd_kernel
.visible .entry vectoradd_kernel(
	.param .u64 vectoradd_kernel_param_0,
	.param .u64 vectoradd_kernel_param_1,
	.param .u64 vectoradd_kernel_param_2
)
{
	.reg .s32 	%r<17>;
	.reg .f64 	%fd<4>;
	.reg .s64 	%rd<19>;

// BB#0:                                // %entry
	ld.param.u64 	%rd4, [vectoradd_kernel_param_2];
	ld.param.u64 	%rd3, [vectoradd_kernel_param_1];
	ld.param.u64 	%rd2, [vectoradd_kernel_param_0];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	mov.u32 	%r3, %tid.z;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ntid.y;
	mov.u32 	%r8, %ntid.z;
	mov.u32 	%r9, %nctaid.x;
	mul.lo.s32 	%r10, %r7, %r6;
	mul.lo.s32 	%r11, %r8, %r10;
	mul.lo.s32 	%r12, %r9, %r11;
	mad.lo.s32 	%r13, %r2, %r6, %r1;
	mad.lo.s32 	%r14, %r3, %r10, %r13;
	mad.lo.s32 	%r15, %r4, %r11, %r14;
	mad.lo.s32 	%r16, %r5, %r12, %r15;
	cvt.s64.s32	%rd1, %r16;
// BB#1:                                // %bb_1
	shl.b64 	%rd5, %rd1, 3;
	add.s64 	%rd6, %rd4, %rd5;
	add.s64 	%rd7, %rd3, %rd5;
	add.s64 	%rd8, %rd2, %rd5;
	ld.global.u32 	%rd9, [%rd8];
	ld.global.u32 	%rd10, [%rd8+4];
	shl.b64 	%rd11, %rd10, 32;
	or.b64  	%rd12, %rd11, %rd9;
	mov.b64 	 %fd1, %rd12;
	ld.global.u32 	%rd13, [%rd7];
	ld.global.u32 	%rd14, [%rd7+4];
	shl.b64 	%rd15, %rd14, 32;
	or.b64  	%rd16, %rd15, %rd13;
	mov.b64 	 %fd2, %rd16;
	add.rn.f64 	%fd3, %fd1, %fd2;
	mov.b64 	 %rd17, %fd3;
	st.global.u32 	[%rd6], %rd17;
	shr.u64 	%rd18, %rd17, 32;
	st.global.u32 	[%rd6+4], %rd18;
// BB#2:                                // %return
	ret;
}


