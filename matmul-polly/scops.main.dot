digraph "Scop Graph for 'main' function" {
	label="Scop Graph for 'main' function";

	Node0x10821d0 [shape=record,label="{%0:\l  %polly.par.userContext = alloca \{\}\l  br label %polly.split_new_and_old\l}"];
	Node0x10821d0 -> Node0x10821f0;
	Node0x10821f0 [shape=record,label="{polly.split_new_and_old:                          \l  br i1 or (i1 icmp ule (float* getelementptr (float* getelementptr inbounds\l... ([1536 x [1536 x float]]* @B, i32 0, i32 0, i32 0), i64 2359296), float*\l... getelementptr inbounds ([1536 x [1536 x float]]* @A, i32 0, i32 0, i32 0)),\l... i1 icmp ule (float* getelementptr (float* getelementptr inbounds ([1536 x\l... [1536 x float]]* @A, i32 0, i32 0, i32 0), i64 2359296), float* getelementptr\l... inbounds ([1536 x [1536 x float]]* @B, i32 0, i32 0, i32 0))), label\l... %polly.start, label %vector.ph\l}"];
	Node0x10821f0 -> Node0x1081aa0;
	Node0x10821f0 -> Node0x1081bb0;
	Node0x1081aa0 [shape=record,label="{polly.start:                                      \l  %44 = bitcast \{\}* %polly.par.userContext to i8*\l  call void @llvm.lifetime.start(i64 0, i8* %44)\l  %polly.par.userContext1 = bitcast \{\}* %polly.par.userContext to i8*\l  call void @GOMP_parallel_loop_runtime_start(void (i8*)* @main.polly.subfn,\l... i8* %polly.par.userContext1, i32 0, i64 0, i64 1536, i64 1)\l  call void @main.polly.subfn(i8* %polly.par.userContext1)\l  call void @GOMP_parallel_end()\l  %45 = bitcast \{\}* %polly.par.userContext to i8*\l  call void @llvm.lifetime.end(i64 8, i8* %45)\l  br label %polly.merge_new_and_old\l}"];
	Node0x1081aa0 -> Node0x1081b00;
	Node0x1081b00 [shape=record,label="{polly.merge_new_and_old:                          \l  br label %.preheader\l}"];
	Node0x1081b00 -> Node0x1081ca0;
	Node0x1081ca0 [shape=record,label="{.preheader:                                       \l  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %init_array.exit ], [ 0,\l... %polly.merge_new_and_old ]\l  br label %20\l}"];
	Node0x1081ca0 -> Node0x1081d00;
	Node0x1081d00 [shape=record,label="{%20:\l\l  %indvars.iv4 = phi i64 [ 0, %.preheader ], [ %indvars.iv.next5, %42 ]\l  %21 = getelementptr inbounds [1536 x [1536 x float]]* @C, i64 0, i64\l... %indvars.iv8, i64 %indvars.iv4\l  store float 0.000000e+00, float* %21, align 4, !tbaa !1\l  br label %22\l}"];
	Node0x1081d00 -> Node0x1081d20;
	Node0x1081d20 [shape=record,label="{%22:\l\l  %indvars.iv = phi i64 [ 0, %20 ], [ %indvars.iv.next.2, %22 ]\l  %23 = phi float [ 0.000000e+00, %20 ], [ %41, %22 ]\l  %24 = getelementptr inbounds [1536 x [1536 x float]]* @A, i64 0, i64\l... %indvars.iv8, i64 %indvars.iv\l  %25 = load float* %24, align 4, !tbaa !1\l  %26 = getelementptr inbounds [1536 x [1536 x float]]* @B, i64 0, i64\l... %indvars.iv, i64 %indvars.iv4\l  %27 = load float* %26, align 4, !tbaa !1\l  %28 = fmul float %25, %27\l  %29 = fadd float %23, %28\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %30 = getelementptr inbounds [1536 x [1536 x float]]* @A, i64 0, i64\l... %indvars.iv8, i64 %indvars.iv.next\l  %31 = load float* %30, align 4, !tbaa !1\l  %32 = getelementptr inbounds [1536 x [1536 x float]]* @B, i64 0, i64\l... %indvars.iv.next, i64 %indvars.iv4\l  %33 = load float* %32, align 4, !tbaa !1\l  %34 = fmul float %31, %33\l  %35 = fadd float %29, %34\l  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.next, 1\l  %36 = getelementptr inbounds [1536 x [1536 x float]]* @A, i64 0, i64\l... %indvars.iv8, i64 %indvars.iv.next.1\l  %37 = load float* %36, align 4, !tbaa !1\l  %38 = getelementptr inbounds [1536 x [1536 x float]]* @B, i64 0, i64\l... %indvars.iv.next.1, i64 %indvars.iv4\l  %39 = load float* %38, align 4, !tbaa !1\l  %40 = fmul float %37, %39\l  %41 = fadd float %35, %40\l  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.next.1, 1\l  %exitcond.2 = icmp eq i64 %indvars.iv.next.2, 1536\l  br i1 %exitcond.2, label %42, label %22\l}"];
	Node0x1081d20 -> Node0x1084750;
	Node0x1081d20 -> Node0x1081d20[constraint=false];
	Node0x1084750 [shape=record,label="{%42:\l\l  %.lcssa = phi float [ %41, %22 ]\l  store float %.lcssa, float* %21, align 4, !tbaa !1\l  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1\l  %exitcond6 = icmp eq i64 %indvars.iv.next5, 1536\l  br i1 %exitcond6, label %init_array.exit, label %20\l}"];
	Node0x1084750 -> Node0x10847b0;
	Node0x1084750 -> Node0x1081d00[constraint=false];
	Node0x10847b0 [shape=record,label="{init_array.exit:                                  \l  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1\l  %exitcond10 = icmp eq i64 %indvars.iv.next9, 1536\l  br i1 %exitcond10, label %43, label %.preheader\l}"];
	Node0x10847b0 -> Node0x1084640;
	Node0x10847b0 -> Node0x1081ca0[constraint=false];
	Node0x1084640 [shape=record,label="{%43:\l\l  ret i32 0\l}"];
	Node0x1081bb0 [shape=record,label="{vector.ph:                                        \l  %indvars.iv3.i = phi i64 [ 0, %polly.split_new_and_old ], [\l... %indvars.iv.next4.i, %middle.block ]\l  br label %vector.body\l}"];
	Node0x1081bb0 -> Node0x10846a0;
	Node0x10846a0 [shape=record,label="{vector.body:                                      \l  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]\l  %induction1112 = or i64 %index, 1\l  %1 = mul nsw i64 %index, %indvars.iv3.i\l  %2 = mul nsw i64 %induction1112, %indvars.iv3.i\l  %3 = trunc i64 %1 to i32\l  %4 = trunc i64 %2 to i32\l  %5 = srem i32 %3, 1024\l  %6 = srem i32 %4, 1024\l  %7 = or i32 %5, 1\l  %8 = add nsw i32 %6, 1\l  %9 = sitofp i32 %7 to double\l  %10 = sitofp i32 %8 to double\l  %11 = fmul double %9, 5.000000e-01\l  %12 = fmul double %10, 5.000000e-01\l  %13 = fptrunc double %11 to float\l  %14 = fptrunc double %12 to float\l  %15 = getelementptr inbounds [1536 x [1536 x float]]* @A, i64 0, i64\l... %indvars.iv3.i, i64 %index\l  %16 = getelementptr inbounds [1536 x [1536 x float]]* @A, i64 0, i64\l... %indvars.iv3.i, i64 %induction1112\l  store float %13, float* %15, align 8, !tbaa !1\l  store float %14, float* %16, align 4, !tbaa !1\l  %17 = getelementptr inbounds [1536 x [1536 x float]]* @B, i64 0, i64\l... %indvars.iv3.i, i64 %index\l  %18 = getelementptr inbounds [1536 x [1536 x float]]* @B, i64 0, i64\l... %indvars.iv3.i, i64 %induction1112\l  store float %13, float* %17, align 8, !tbaa !1\l  store float %14, float* %18, align 4, !tbaa !1\l  %index.next = add i64 %index, 2\l  %19 = icmp eq i64 %index.next, 1536\l  br i1 %19, label %middle.block, label %vector.body, !llvm.loop !5\l}"];
	Node0x10846a0 -> Node0x1084700;
	Node0x10846a0 -> Node0x10846a0[constraint=false];
	Node0x1084700 [shape=record,label="{middle.block:                                     \l  %indvars.iv.next4.i = add nuw nsw i64 %indvars.iv3.i, 1\l  %exitcond5.i = icmp eq i64 %indvars.iv.next4.i, 1536\l  br i1 %exitcond5.i, label %polly.merge_new_and_old, label %vector.ph\l}"];
	Node0x1084700 -> Node0x1081b00;
	Node0x1084700 -> Node0x1081bb0[constraint=false];
	colorscheme = "paired12"
        subgraph cluster_0x10813e0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x10825a0 {
            label = "Call instruction:   call void @llvm.lifetime.start(i64 0, i8* %44)";
            style = solid;
            color = 6
            subgraph cluster_0x1081560 {
              label = "";
              style = filled;
              color = 3              subgraph cluster_0x10814e0 {
                label = "";
                style = solid;
                color = 7
                Node0x10846a0;
              }
              Node0x1081bb0;
              Node0x1084700;
            }
            Node0x10821f0;
            Node0x1081aa0;
          }
          subgraph cluster_0x1081460 {
            label = "SCEV of PHI node refers to SSA names in region:   %23 = phi float [ 0.000000e+00, %20 ], [ %41, %22 ]";
            style = solid;
            color = 6
            subgraph cluster_0x1082150 {
              label = "SCEV of PHI node refers to SSA names in region:   %23 = phi float [ 0.000000e+00, %20 ], [ %41, %22 ]";
              style = solid;
              color = 5
              subgraph cluster_0x10820d0 {
                label = "PHI node in exit BB";
                style = solid;
                color = 7
                Node0x1081d20;
              }
              Node0x1081d00;
              Node0x1084750;
            }
            Node0x1081ca0;
            Node0x10847b0;
          }
          Node0x10821d0;
          Node0x1081b00;
          Node0x1084640;
        }
}
