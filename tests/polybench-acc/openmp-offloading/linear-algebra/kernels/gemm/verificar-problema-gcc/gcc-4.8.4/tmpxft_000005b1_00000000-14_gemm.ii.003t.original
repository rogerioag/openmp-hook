
;; Function void __nv_save_fatbinhandle_for_managed_rt(void**) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__nv_fatbinhandle_for_managed_rt = in) >>>>>;


;; Function void __nv_init_managed_rt() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__nv_inited_managed_rt = (signed char) __nv_inited_managed_rt == 0 ? __nv_init_managed_rt_with_module (__nv_fatbinhandle_for_managed_rt) : __nv_inited_managed_rt) >>>>>;


;; Function dim3::dim3(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->x = vx) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->y = vy) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->z = vz) >>>>>;
}


;; Function dim3::dim3(uint3) (null)
;; enabled by -tree-original

{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->x = v.x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->y = v.y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct dim3 *) this)->z = v.z) >>>>>;
}


;; Function dim3::operator uint3() (null)
;; enabled by -tree-original

{
  struct uint3 t;

    struct uint3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = ((struct dim3 *) this)->x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = ((struct dim3 *) this)->y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = ((struct dim3 *) this)->z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3034, t>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDescHalf() (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3805, cudaCreateChannelDesc (e, 0, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDescHalf1() (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3824, cudaCreateChannelDesc (e, 0, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDescHalf2() (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3828, cudaCreateChannelDesc (e, e, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDescHalf4() (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3832, cudaCreateChannelDesc (e, e, e, e, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = char] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3837, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = signed char] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3842, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = unsigned char] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3847, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = char1] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3852, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uchar1] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3857, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = char2] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3862, cudaCreateChannelDesc (e, e, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uchar2] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3867, cudaCreateChannelDesc (e, e, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = char4] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3872, cudaCreateChannelDesc (e, e, e, e, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uchar4] (null)
;; enabled by -tree-original

{
  int e = (int) 1 * 8;

    int e = (int) 1 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3877, cudaCreateChannelDesc (e, e, e, e, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = short int] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3882, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3887, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = short1] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3892, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = ushort1] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3897, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = short2] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3902, cudaCreateChannelDesc (e, e, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = ushort2] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3907, cudaCreateChannelDesc (e, e, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = short4] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3912, cudaCreateChannelDesc (e, e, e, e, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = ushort4] (null)
;; enabled by -tree-original

{
  int e = (int) 2 * 8;

    int e = (int) 2 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3917, cudaCreateChannelDesc (e, e, e, e, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = int] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3922, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = unsigned int] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3927, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = int1] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3932, cudaCreateChannelDesc (e, 0, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uint1] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3937, cudaCreateChannelDesc (e, 0, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = int2] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3942, cudaCreateChannelDesc (e, e, 0, 0, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uint2] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3947, cudaCreateChannelDesc (e, e, 0, 0, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = int4] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3952, cudaCreateChannelDesc (e, e, e, e, 0)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = uint4] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3957, cudaCreateChannelDesc (e, e, e, e, 1)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = float] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3962, cudaCreateChannelDesc (e, 0, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = float1] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3967, cudaCreateChannelDesc (e, 0, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = float2] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3972, cudaCreateChannelDesc (e, e, 0, 0, 2)>>>;
}


;; Function cudaChannelFormatDesc cudaCreateChannelDesc() [with T = float4] (null)
;; enabled by -tree-original

{
  int e = (int) 4 * 8;

    int e = (int) 4 * 8;
  <<cleanup_point return <retval> = TARGET_EXPR <D.3977, cudaCreateChannelDesc (e, e, e, e, 2)>>>;
}


;; Function cudaPitchedPtr make_cudaPitchedPtr(void*, size_t, size_t, size_t) (null)
;; enabled by -tree-original

{
  struct cudaPitchedPtr s [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.ptr = d) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.pitch = p) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.xsize = xsz) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.ysize = ysz) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function cudaPos make_cudaPos(size_t, size_t, size_t) (null)
;; enabled by -tree-original

{
  struct cudaPos p [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function cudaExtent make_cudaExtent(size_t, size_t, size_t) (null)
;; enabled by -tree-original

{
  struct cudaExtent e [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.width = w) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.height = h) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.depth = d) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function char1 make_char1(signed char) (null)
;; enabled by -tree-original

{
  struct char1 t;

    struct char1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4232, t>>>;
}


;; Function uchar1 make_uchar1(unsigned char) (null)
;; enabled by -tree-original

{
  struct uchar1 t;

    struct uchar1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4252, t>>>;
}


;; Function char2 make_char2(signed char, signed char) (null)
;; enabled by -tree-original

{
  struct char2 t;

    struct char2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4273, t>>>;
}


;; Function uchar2 make_uchar2(unsigned char, unsigned char) (null)
;; enabled by -tree-original

{
  struct uchar2 t;

    struct uchar2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4294, t>>>;
}


;; Function char3 make_char3(signed char, signed char, signed char) (null)
;; enabled by -tree-original

{
  struct char3 t;

    struct char3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4316, t>>>;
}


;; Function uchar3 make_uchar3(unsigned char, unsigned char, unsigned char) (null)
;; enabled by -tree-original

{
  struct uchar3 t;

    struct uchar3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4338, t>>>;
}


;; Function char4 make_char4(signed char, signed char, signed char, signed char) (null)
;; enabled by -tree-original

{
  struct char4 t;

    struct char4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4361, t>>>;
}


;; Function uchar4 make_uchar4(unsigned char, unsigned char, unsigned char, unsigned char) (null)
;; enabled by -tree-original

{
  struct uchar4 t;

    struct uchar4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4384, t>>>;
}


;; Function short1 make_short1(short int) (null)
;; enabled by -tree-original

{
  struct short1 t;

    struct short1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4404, t>>>;
}


;; Function ushort1 make_ushort1(short unsigned int) (null)
;; enabled by -tree-original

{
  struct ushort1 t;

    struct ushort1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4424, t>>>;
}


;; Function short2 make_short2(short int, short int) (null)
;; enabled by -tree-original

{
  struct short2 t;

    struct short2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4445, t>>>;
}


;; Function ushort2 make_ushort2(short unsigned int, short unsigned int) (null)
;; enabled by -tree-original

{
  struct ushort2 t;

    struct ushort2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4466, t>>>;
}


;; Function short3 make_short3(short int, short int, short int) (null)
;; enabled by -tree-original

{
  struct short3 t;

    struct short3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4488, t>>>;
}


;; Function ushort3 make_ushort3(short unsigned int, short unsigned int, short unsigned int) (null)
;; enabled by -tree-original

{
  struct ushort3 t;

    struct ushort3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4510, t>>>;
}


;; Function short4 make_short4(short int, short int, short int, short int) (null)
;; enabled by -tree-original

{
  struct short4 t;

    struct short4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4533, t>>>;
}


;; Function ushort4 make_ushort4(short unsigned int, short unsigned int, short unsigned int, short unsigned int) (null)
;; enabled by -tree-original

{
  struct ushort4 t;

    struct ushort4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4556, t>>>;
}


;; Function int1 make_int1(int) (null)
;; enabled by -tree-original

{
  struct int1 t;

    struct int1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4576, t>>>;
}


;; Function uint1 make_uint1(unsigned int) (null)
;; enabled by -tree-original

{
  struct uint1 t;

    struct uint1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4596, t>>>;
}


;; Function int2 make_int2(int, int) (null)
;; enabled by -tree-original

{
  struct int2 t;

    struct int2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4617, t>>>;
}


;; Function uint2 make_uint2(unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  struct uint2 t;

    struct uint2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4638, t>>>;
}


;; Function int3 make_int3(int, int, int) (null)
;; enabled by -tree-original

{
  struct int3 t;

    struct int3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4660, t>>>;
}


;; Function uint3 make_uint3(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  struct uint3 t;

    struct uint3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4667, t>>>;
}


;; Function int4 make_int4(int, int, int, int) (null)
;; enabled by -tree-original

{
  struct int4 t;

    struct int4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4690, t>>>;
}


;; Function uint4 make_uint4(unsigned int, unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  struct uint4 t;

    struct uint4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4713, t>>>;
}


;; Function long1 make_long1(long int) (null)
;; enabled by -tree-original

{
  struct long1 t;

    struct long1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4733, t>>>;
}


;; Function ulong1 make_ulong1(long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulong1 t;

    struct ulong1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4753, t>>>;
}


;; Function long2 make_long2(long int, long int) (null)
;; enabled by -tree-original

{
  struct long2 t;

    struct long2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4774, t>>>;
}


;; Function ulong2 make_ulong2(long unsigned int, long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulong2 t;

    struct ulong2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4795, t>>>;
}


;; Function long3 make_long3(long int, long int, long int) (null)
;; enabled by -tree-original

{
  struct long3 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function ulong3 make_ulong3(long unsigned int, long unsigned int, long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulong3 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function long4 make_long4(long int, long int, long int, long int) (null)
;; enabled by -tree-original

{
  struct long4 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.w = w) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function ulong4 make_ulong4(long unsigned int, long unsigned int, long unsigned int, long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulong4 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.w = w) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function float1 make_float1(float) (null)
;; enabled by -tree-original

{
  struct float1 t;

    struct float1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4905, t>>>;
}


;; Function float2 make_float2(float, float) (null)
;; enabled by -tree-original

{
  struct float2 t;

    struct float2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4926, t>>>;
}


;; Function float3 make_float3(float, float, float) (null)
;; enabled by -tree-original

{
  struct float3 t;

    struct float3 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4948, t>>>;
}


;; Function float4 make_float4(float, float, float, float) (null)
;; enabled by -tree-original

{
  struct float4 t;

    struct float4 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.w = w) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4971, t>>>;
}


;; Function longlong1 make_longlong1(long long int) (null)
;; enabled by -tree-original

{
  struct longlong1 t;

    struct longlong1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.4991, t>>>;
}


;; Function ulonglong1 make_ulonglong1(long long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulonglong1 t;

    struct ulonglong1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.5011, t>>>;
}


;; Function longlong2 make_longlong2(long long int, long long int) (null)
;; enabled by -tree-original

{
  struct longlong2 t;

    struct longlong2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.5032, t>>>;
}


;; Function ulonglong2 make_ulonglong2(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulonglong2 t;

    struct ulonglong2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.5053, t>>>;
}


;; Function longlong3 make_longlong3(long long int, long long int, long long int) (null)
;; enabled by -tree-original

{
  struct longlong3 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function ulonglong3 make_ulonglong3(long long unsigned int, long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulonglong3 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function longlong4 make_longlong4(long long int, long long int, long long int, long long int) (null)
;; enabled by -tree-original

{
  struct longlong4 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.w = w) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function ulonglong4 make_ulonglong4(long long unsigned int, long long unsigned int, long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

{
  struct ulonglong4 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.w = w) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function double1 make_double1(double) (null)
;; enabled by -tree-original

{
  struct double1 t;

    struct double1 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.5163, t>>>;
}


;; Function double2 make_double2(double, double) (null)
;; enabled by -tree-original

{
  struct double2 t;

    struct double2 t;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t.y = y) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.5184, t>>>;
}


;; Function double3 make_double3(double, double, double) (null)
;; enabled by -tree-original

{
  struct double3 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function double4 make_double4(double, double, double, double) (null)
;; enabled by -tree-original

{
  struct double4 t [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.x = x) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.y = y) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.z = z) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.w = w) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function void* memchr(void*, int, size_t) (*memchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_memchr ((const void *) __s, __c, __n)
   >>>;


;; Function const void* memchr(const void*, int, size_t) (*memchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const void *) __builtin_memchr (__s, __c, __n)
   >>>;


;; Function char* strchr(char*, int) (*strchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_strchr ((const char *) __s, __c)
   >>>;


;; Function const char* strchr(const char*, int) (*strchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_strchr (__s, __c)
   >>>;


;; Function char* strrchr(char*, int) (*strrchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_strrchr ((const char *) __s, __c)
   >>>;


;; Function const char* strrchr(const char*, int) (*strrchr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_strrchr (__s, __c)
   >>>;


;; Function char* strpbrk(char*, const char*) (*strpbrk)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_strpbrk ((const char *) __s, __accept)
   >>>;


;; Function const char* strpbrk(const char*, const char*) (*strpbrk)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_strpbrk (__s, __accept)
   >>>;


;; Function char* strstr(char*, const char*) (*strstr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_strstr ((const char *) __haystack, __needle)
   >>>;


;; Function const char* strstr(const char*, const char*) (*strstr)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_strstr (__haystack, __needle)
   >>>;


;; Function char* index(char*, int) (*index)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_index ((const char *) __s, __c)
   >>>;


;; Function const char* index(const char*, int) (*index)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_index (__s, __c)
   >>>;


;; Function char* rindex(char*, int) (*rindex)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __builtin_rindex ((const char *) __s, __c)
   >>>;


;; Function const char* rindex(const char*, int) (*rindex)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (const char *) __builtin_rindex (__s, __c)
   >>>;


;; Function int __signbitf(float) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  {
    int __m;

        int __m;
    <<cleanup_point __asm__("pmovmskb %1, %0":"=r" __m:"x" __x)>>;
    return <retval> = (__m & 8) != 0;
  }
   >>>;


;; Function int __signbit(double) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  {
    int __m;

        int __m;
    <<cleanup_point __asm__("pmovmskb %1, %0":"=r" __m:"x" __x)>>;
    return <retval> = (__m & 128) != 0;
  }
   >>>;


;; Function int __signbitl(long double) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  {
    typedef union ._8 ._8;
    union ._8 __u;

        union ._8 __u;
    <<cleanup_point <<< Unknown tree: expr_stmt
  __u.__l = __x >>>>>;
    return <retval> = (__u.__i[2] & 32768) != 0;
  }
   >>>;


;; Function unsigned int __bswap_32(unsigned int) (null)
;; enabled by -tree-original

return <retval> = __builtin_bswap32 (__bsx);


;; Function __uint64_t __bswap_64(__uint64_t) (null)
;; enabled by -tree-original

return <retval> = __builtin_bswap64 (__bsx);


;; Function int atoi(const char*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = (int) strtol (__nptr, 0B, 10)>>
   >>>;


;; Function long int atol(const char*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtol (__nptr, 0B, 10)>>
   >>>;


;; Function long long int atoll(const char*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtoll (__nptr, 0B, 10)>>
   >>>;


;; Function unsigned int gnu_dev_major(long long unsigned int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (unsigned int) (__dev >> 8) & 4095 | (unsigned int) (__dev >> 32) & 4294963200
   >>>;


;; Function unsigned int gnu_dev_minor(long long unsigned int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (unsigned int) __dev & 255 | (unsigned int) (__dev >> 12) & 4294967040
   >>>;


;; Function long long unsigned int gnu_dev_makedev(unsigned int, unsigned int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = ((long long unsigned int) (__minor & 255 | (__major & 4095) << 8) | ((long long unsigned int) __minor & 4294967040) << 12) | ((long long unsigned int) __major & 4294963200) << 32
   >>>;


;; Function void* bsearch(const void*, const void*, size_t, size_t, __compar_fn_t) (null)
;; enabled by -tree-original

{
  size_t __l;
  size_t __u;
  size_t __idx;
  const void * __p;
  int __comparison;

    size_t __l;
    size_t __u;
    size_t __idx;
    const void * __p;
    int __comparison;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__l = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__u = __nmemb) >>>>>;
  goto <D.7840>;
  <D.7841>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__idx = (__l + __u) / 2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__p = __base + (sizetype) (__idx * __size)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__comparison = __compar (__key, __p)) >>>>>;
  if (__comparison < 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__u = __idx) >>>>>;
    }
  else
    {
      if (__comparison > 0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__l = __idx + 1) >>>>>;
        }
      else
        {
          return <retval> = (void *) __p;
        }
    }
  <D.7840>:;
  if (__l < __u) goto <D.7841>; else goto <D.7839>;
  <D.7839>:;
  return <retval> = 0B;
}


;; Function double atof(const char*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = strtod (__nptr, 0B)>>
   >>>;


;; Function double std::abs(double) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function float std::abs(float) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function long double std::abs(long double) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function float std::acos(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_acosf (__x)>>;


;; Function long double std::acos(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_acosl (__x)>>;


;; Function float std::asin(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_asinf (__x)>>;


;; Function long double std::asin(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_asinl (__x)>>;


;; Function float std::atan(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_atanf (__x);


;; Function long double std::atan(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_atanl (__x);


;; Function float std::atan2(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_atan2f (__y, __x)>>;


;; Function long double std::atan2(long double, long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_atan2l (__y, __x)>>;


;; Function float std::ceil(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_ceilf (__x);


;; Function long double std::ceil(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_ceill (__x);


;; Function float std::cos(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_cosf (__x);


;; Function long double std::cos(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_cosl (__x);


;; Function float std::cosh(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_coshf (__x)>>;


;; Function long double std::cosh(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_coshl (__x)>>;


;; Function float std::exp(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expf (__x)>>;


;; Function long double std::exp(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expl (__x)>>;


;; Function float std::fabs(float) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function long double std::fabs(long double) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function float std::floor(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_floorf (__x);


;; Function long double std::floor(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_floorl (__x);


;; Function float std::fmod(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_fmodf (__x, __y)>>;


;; Function long double std::fmod(long double, long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_fmodl (__x, __y)>>;


;; Function float std::frexp(float, int*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_frexpf (__x, __exp)>>;


;; Function long double std::frexp(long double, int*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_frexpl (__x, __exp)>>;


;; Function float std::ldexp(float, int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_ldexpf (__x, __exp)>>;


;; Function long double std::ldexp(long double, int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_ldexpl (__x, __exp)>>;


;; Function float std::log(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_logf (__x)>>;


;; Function long double std::log(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_logl (__x)>>;


;; Function float std::log10(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_log10f (__x)>>;


;; Function long double std::log10(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_log10l (__x)>>;


;; Function float std::modf(float, float*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_modff (__x, __iptr)>>;


;; Function long double std::modf(long double, long double*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_modfl (__x, __iptr)>>;


;; Function float std::pow(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_powf (__x, __y)>>;


;; Function long double std::pow(long double, long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_powl (__x, __y)>>;


;; Function double std::pow(double, int) (null)
;; enabled by -tree-original

return <retval> = __builtin_powi (__x, __i);


;; Function float std::pow(float, int) (null)
;; enabled by -tree-original

return <retval> = __builtin_powif (__x, __n);


;; Function long double std::pow(long double, int) (null)
;; enabled by -tree-original

return <retval> = __builtin_powil (__x, __n);


;; Function float std::sin(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_sinf (__x);


;; Function long double std::sin(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_sinl (__x);


;; Function float std::sinh(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_sinhf (__x)>>;


;; Function long double std::sinh(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_sinhl (__x)>>;


;; Function float std::sqrt(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_sqrtf (__x)>>;


;; Function long double std::sqrt(long double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_sqrtl (__x)>>;


;; Function float std::tan(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_tanf (__x);


;; Function long double std::tan(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_tanl (__x);


;; Function float std::tanh(float) (null)
;; enabled by -tree-original

return <retval> = __builtin_tanhf (__x);


;; Function long double std::tanh(long double) (null)
;; enabled by -tree-original

return <retval> = __builtin_tanhl (__x);


;; Function long int std::abs(long int) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__i>;


;; Function ldiv_t std::div(long int, long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = TARGET_EXPR <D.8928, ldiv (__i, __j)>>>;


;; Function long long int std::abs(long long int) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function __int128 std::abs(__int128) (null)
;; enabled by -tree-original

return <retval> = ABS_EXPR <__x>;


;; Function lldiv_t __gnu_cxx::div(long long int, long long int) (null)
;; enabled by -tree-original

{
  struct lldiv_t __q;

    struct lldiv_t __q;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__q.quot = __n / __d) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__q.rem = __n % __d) >>>>>;
  <<cleanup_point return <retval> = TARGET_EXPR <D.8973, __q>>>;
}


;; Function int signbit(float) (null)
;; enabled by -tree-original

return <retval> = __signbitf (x);


;; Function int signbit(double) (null)
;; enabled by -tree-original

return <retval> = __signbit (x);


;; Function int signbit(long double) (null)
;; enabled by -tree-original

return <retval> = __signbitl (x);


;; Function int isfinite(float) (null)
;; enabled by -tree-original

return <retval> = __finitef (x);


;; Function int isfinite(double) (null)
;; enabled by -tree-original

return <retval> = __finite (x);


;; Function int isfinite(long double) (null)
;; enabled by -tree-original

return <retval> = __finitel (x);


;; Function int isnan(float) (null)
;; enabled by -tree-original

return <retval> = __isnanf (x);


;; Function int isnan(double) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __isnan (x)
   >>>;


;; Function int isnan(long double) (null)
;; enabled by -tree-original

return <retval> = __isnanl (x);


;; Function int isinf(float) (null)
;; enabled by -tree-original

return <retval> = __isinff (x);


;; Function int isinf(double) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = __isinf (x)
   >>>;


;; Function int isinf(long double) (null)
;; enabled by -tree-original

return <retval> = __isinfl (x);


;; Function float logb(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = logbf (a)>>;


;; Function int ilogb(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ilogbf (a)>>;


;; Function float scalbn(float, int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = scalbnf (a, b)>>;


;; Function float scalbln(float, long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = scalblnf (a, b)>>;


;; Function float exp2(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = exp2f (a)>>;


;; Function float expm1(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = expm1f (a)>>;


;; Function float log2(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = log2f (a)>>;


;; Function float log1p(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = log1pf (a)>>;


;; Function float acosh(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = acoshf (a)>>;


;; Function float asinh(float) (null)
;; enabled by -tree-original

return <retval> = asinhf (a);


;; Function float atanh(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = atanhf (a)>>;


;; Function float hypot(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = hypotf (a, b)>>;


;; Function float norm3d(float, float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = norm3df (a, b, c)>>;


;; Function float norm4d(float, float, float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = norm4df (a, b, c, d)>>;


;; Function float cbrt(float) (null)
;; enabled by -tree-original

return <retval> = cbrtf (a);


;; Function float erf(float) (null)
;; enabled by -tree-original

return <retval> = erff (a);


;; Function float erfc(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = erfcf (a)>>;


;; Function float lgamma(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = lgammaf (a)>>;


;; Function float tgamma(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = tgammaf (a)>>;


;; Function float copysign(float, float) (null)
;; enabled by -tree-original

return <retval> = copysignf (a, b);


;; Function float nextafter(float, float) (null)
;; enabled by -tree-original

return <retval> = nextafterf (a, b);


;; Function float remainder(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = remainderf (a, b)>>;


;; Function float remquo(float, float, int*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = remquof (a, b, quo)>>;


;; Function float round(float) (null)
;; enabled by -tree-original

return <retval> = roundf (a);


;; Function long int lround(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = lroundf (a)>>;


;; Function long long int llround(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (long long int) __builtin_lroundf (a)>>;


;; Function float trunc(float) (null)
;; enabled by -tree-original

return <retval> = truncf (a);


;; Function float rint(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = rintf (a)>>;


;; Function long int lrint(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = lrintf (a)>>;


;; Function long long int llrint(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (long long int) __builtin_lrintf (a)>>;


;; Function float nearbyint(float) (null)
;; enabled by -tree-original

return <retval> = nearbyintf (a);


;; Function float fdim(float, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = fdimf (a, b)>>;


;; Function float fma(float, float, float) (null)
;; enabled by -tree-original

return <retval> = fmaf (a, b, c);


;; Function float fmax(float, float) (null)
;; enabled by -tree-original

return <retval> = fmaxf (a, b);


;; Function float fmin(float, float) (null)
;; enabled by -tree-original

return <retval> = fminf (a, b);


;; Function float exp10(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = exp10f (a)>>;


;; Function float rsqrt(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = rsqrtf (a)>>;


;; Function float rcbrt(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = rcbrtf (a)>>;


;; Function float sinpi(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = sinpif (a)>>;


;; Function float cospi(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cospif (a)>>;


;; Function void sincospi(float, float*, float*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  sincospif (a, sptr, cptr) >>>>>;


;; Function void sincos(float, float*, float*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (*sptr = IMAGPART_EXPR <SAVE_EXPR <__builtin_cexpif (a)>>;, *cptr = REALPART_EXPR <SAVE_EXPR <__builtin_cexpif (a)>>;) >>>>>;


;; Function float j0(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = j0f (a)>>;


;; Function float j1(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = j1f (a)>>;


;; Function float jn(int, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = jnf (n, a)>>;


;; Function float y0(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = y0f (a)>>;


;; Function float y1(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = y1f (a)>>;


;; Function float yn(int, float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ynf (n, a)>>;


;; Function float cyl_bessel_i0(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cyl_bessel_i0f (a)>>;


;; Function float cyl_bessel_i1(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cyl_bessel_i1f (a)>>;


;; Function float erfinv(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = erfinvf (a)>>;


;; Function float erfcinv(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = erfcinvf (a)>>;


;; Function float normcdfinv(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = normcdfinvf (a)>>;


;; Function float normcdf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = normcdff (a)>>;


;; Function float erfcx(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = erfcxf (a)>>;


;; Function double copysign(double, float) (null)
;; enabled by -tree-original

return <retval> = copysign (a, (double) b);


;; Function float copysign(float, double) (null)
;; enabled by -tree-original

return <retval> = copysignf (a, (float) b);


;; Function unsigned int min(unsigned int, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umin (a, b)>>;


;; Function unsigned int min(int, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umin ((unsigned int) a, b)>>;


;; Function unsigned int min(unsigned int, int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umin (a, (unsigned int) b)>>;


;; Function long int min(long int, long int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long int) min ((int) a, (int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long int) llmin ((long long int) a, (long long int) b)>>;
  }


;; Function long unsigned int min(long unsigned int, long unsigned int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umin ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmin ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long unsigned int min(long int, long unsigned int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umin ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmin ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long unsigned int min(long unsigned int, long int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umin ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmin ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long long int min(long long int, long long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = llmin (a, b)>>;


;; Function long long unsigned int min(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmin (a, b)>>;


;; Function long long unsigned int min(long long int, long long unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmin ((long long unsigned int) a, b)>>;


;; Function long long unsigned int min(long long unsigned int, long long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmin (a, (long long unsigned int) b)>>;


;; Function float min(float, float) (null)
;; enabled by -tree-original

return <retval> = fminf (a, b);


;; Function double min(double, double) (null)
;; enabled by -tree-original

return <retval> = fmin (a, b);


;; Function double min(float, double) (null)
;; enabled by -tree-original

return <retval> = fmin ((double) a, b);


;; Function double min(double, float) (null)
;; enabled by -tree-original

return <retval> = fmin (a, (double) b);


;; Function unsigned int max(unsigned int, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umax (a, b)>>;


;; Function unsigned int max(int, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umax ((unsigned int) a, b)>>;


;; Function unsigned int max(unsigned int, int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = umax (a, (unsigned int) b)>>;


;; Function long int max(long int, long int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long int) max ((int) a, (int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long int) llmax ((long long int) a, (long long int) b)>>;
  }


;; Function long unsigned int max(long unsigned int, long unsigned int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umax ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmax ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long unsigned int max(long int, long unsigned int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umax ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmax ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long unsigned int max(long unsigned int, long int) (null)
;; enabled by -tree-original

if (8 == 4)
  {
    <<cleanup_point return <retval> = (long unsigned int) umax ((unsigned int) a, (unsigned int) b)>>;
  }
else
  {
    <<cleanup_point return <retval> = (long unsigned int) ullmax ((long long unsigned int) a, (long long unsigned int) b)>>;
  }


;; Function long long int max(long long int, long long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = llmax (a, b)>>;


;; Function long long unsigned int max(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmax (a, b)>>;


;; Function long long unsigned int max(long long int, long long unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmax ((long long unsigned int) a, b)>>;


;; Function long long unsigned int max(long long unsigned int, long long int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = ullmax (a, (long long unsigned int) b)>>;


;; Function float max(float, float) (null)
;; enabled by -tree-original

return <retval> = fmaxf (a, b);


;; Function double max(double, double) (null)
;; enabled by -tree-original

return <retval> = fmax (a, b);


;; Function double max(float, double) (null)
;; enabled by -tree-original

return <retval> = fmax ((double) a, b);


;; Function double max(double, float) (null)
;; enabled by -tree-original

return <retval> = fmax (a, (double) b);


;; Function int min(int, int) (null)
;; enabled by -tree-original

return <retval> = a < b ? a : b;


;; Function unsigned int umin(unsigned int, unsigned int) (null)
;; enabled by -tree-original

return <retval> = a < b ? a : b;


;; Function long long int llmin(long long int, long long int) (null)
;; enabled by -tree-original

return <retval> = a < b ? a : b;


;; Function long long unsigned int ullmin(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

return <retval> = a < b ? a : b;


;; Function int max(int, int) (null)
;; enabled by -tree-original

return <retval> = a > b ? a : b;


;; Function unsigned int umax(unsigned int, unsigned int) (null)
;; enabled by -tree-original

return <retval> = a > b ? a : b;


;; Function long long int llmax(long long int, long long int) (null)
;; enabled by -tree-original

return <retval> = a > b ? a : b;


;; Function long long unsigned int ullmax(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

return <retval> = a > b ? a : b;


;; Function int mulhi(int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int mulhi(unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int mulhi(int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int mulhi(unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int mul64hi(long long int, long long int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int mul64hi(long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int mul64hi(long long int, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int mul64hi(long long unsigned int, long long int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int float_as_int(float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float int_as_float(int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int float_as_uint(float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float uint_as_float(unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float saturate(float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int mul24(int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int umul24(unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void trap() (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void brkpt(int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void syncthreads() (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void prof_trigger(int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void threadfence(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int float2int(float, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int float2uint(float, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float int2float(int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float uint2float(unsigned int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicAdd(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicAdd(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicSub(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicSub(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicExch(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicExch(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float atomicExch(float*, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicMin(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicMin(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicMax(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicMax(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicInc(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicDec(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicAnd(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicAnd(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicOr(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicOr(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicXor(int*, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicXor(unsigned int*, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int atomicCAS(int*, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int atomicCAS(unsigned int*, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicAdd(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicExch(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicCAS(long long unsigned int*, long long unsigned int, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function bool any(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function bool all(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double fma(double, double, double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double dmul(double, double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double dadd(double, double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double dsub(double, double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int double2int(double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int double2uint(double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int double2ll(double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int double2ull(double, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double ll2double(long long int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double ull2double(long long unsigned int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double int2double(int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double uint2double(unsigned int, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double float2double(float, cudaRoundMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float atomicAdd(float*, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int atomicMin(long long int*, long long int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int atomicMax(long long int*, long long int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicMin(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicMax(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicAnd(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicOr(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int atomicXor(long long unsigned int*, long long unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int ballot(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int syncthreads_count(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function bool syncthreads_and(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function bool syncthreads_or(bool) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __isGlobal(const void*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int __shfl(int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __shfl(unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int __shfl_up(int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __shfl_up(unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int __shfl_down(int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __shfl_down(unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int __shfl_xor(int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __shfl_xor(unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float __shfl(float, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float __shfl_up(float, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float __shfl_down(float, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float __shfl_xor(float, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int __shfl(long long int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int __shfl(long long unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int __shfl_up(long long int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int __shfl_up(long long unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int __shfl_down(long long int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int __shfl_down(long long unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int __shfl_xor(long long int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int __shfl_xor(long long unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double __shfl(double, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double __shfl_up(double, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double __shfl_down(double, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double __shfl_xor(double, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long int __shfl(long int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long unsigned int __shfl(long unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long int __shfl_up(long int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long unsigned int __shfl_up(long unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long int __shfl_down(long int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long unsigned int __shfl_down(long unsigned int, unsigned int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long int __shfl_xor(long int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long unsigned int __shfl_xor(long unsigned int, int, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long int __ldg(const long int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long unsigned int __ldg(const long unsigned int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char __ldg(const char*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char __ldg(const signed char*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int __ldg(const short int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int __ldg(const int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long int __ldg(const long long int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 __ldg(const char2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 __ldg(const char4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 __ldg(const short2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 __ldg(const short4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 __ldg(const int2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 __ldg(const int4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function longlong2 __ldg(const longlong2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char __ldg(const unsigned char*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int __ldg(const short unsigned int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __ldg(const unsigned int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function long long unsigned int __ldg(const long long unsigned int*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 __ldg(const uchar2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 __ldg(const uchar4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 __ldg(const ushort2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 __ldg(const ushort4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 __ldg(const uint2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 __ldg(const uint4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ulonglong2 __ldg(const ulonglong2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float __ldg(const float*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double __ldg(const double*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 __ldg(const float2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 __ldg(const float4*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function double2 __ldg(const double2*) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __funnelshift_l(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __funnelshift_lc(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __funnelshift_r(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int __funnelshift_rc(unsigned int, unsigned int, unsigned int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1Dread(surface<void, 1>, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2Dread(surface<void, 2>, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf3Dread(surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf1DLayeredread(surface<void, 241>, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surf2DLayeredread(surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapread(surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = signed char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned char] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = char1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = char2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = char4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uchar4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = short int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = short unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = short1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = short2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = short4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = ushort4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = int1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = int2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = int4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = uint4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = long long unsigned int] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = longlong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = ulonglong2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = float] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = float1] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = float2] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function T surfCubemapLayeredread(surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) [with T = float4] (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(signed char, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(unsigned char, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short unsigned int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(unsigned int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(long long int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(long long unsigned int, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(longlong1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ulonglong1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(longlong2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ulonglong2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float1, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float2, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float4, surface<void, 1>, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(signed char, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(unsigned char, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short unsigned int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(unsigned int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(long long int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(long long unsigned int, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(longlong1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ulonglong1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(longlong2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ulonglong2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float1, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float2, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float4, surface<void, 2>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(signed char, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(unsigned char, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short unsigned int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(unsigned int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(long long int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(long long unsigned int, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(longlong1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ulonglong1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(longlong2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ulonglong2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float1, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float2, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float4, surface<void, 3>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(signed char, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(unsigned char, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short unsigned int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(unsigned int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(long long int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(long long unsigned int, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(longlong1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ulonglong1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(longlong2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ulonglong2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float1, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float2, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float4, surface<void, 241>, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(signed char, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(unsigned char, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short unsigned int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(unsigned int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(long long int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(long long unsigned int, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(longlong1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ulonglong1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(longlong2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ulonglong2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float1, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float2, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float4, surface<void, 242>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(signed char, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(unsigned char, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short unsigned int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(unsigned int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(long long int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(long long unsigned int, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(longlong1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ulonglong1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(longlong2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ulonglong2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float1, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float2, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float4, surface<void, 12>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(signed char, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(unsigned char, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short unsigned int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(unsigned int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(long long int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(long long unsigned int, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(longlong1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ulonglong1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(longlong2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ulonglong2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float1, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float2, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float4, surface<void, 252>, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1Dfetch(texture<char, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1Dfetch(texture<signed char, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1Dfetch(texture<unsigned char, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1Dfetch(texture<char1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1Dfetch(texture<uchar1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1Dfetch(texture<char2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1Dfetch(texture<uchar2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1Dfetch(texture<char4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1Dfetch(texture<uchar4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1Dfetch(texture<short int, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1Dfetch(texture<short unsigned int, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1Dfetch(texture<short1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1Dfetch(texture<ushort1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1Dfetch(texture<short2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1Dfetch(texture<ushort2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1Dfetch(texture<short4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1Dfetch(texture<ushort4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1Dfetch(texture<int, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1Dfetch(texture<unsigned int, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1Dfetch(texture<int1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1Dfetch(texture<uint1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1Dfetch(texture<int2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1Dfetch(texture<uint2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1Dfetch(texture<int4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1Dfetch(texture<uint4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<float, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1Dfetch(texture<float1, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1Dfetch(texture<float2, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1Dfetch(texture<float4, 1, (cudaTextureReadMode)0u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<char, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<signed char, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<unsigned char, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1Dfetch(texture<char1, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1Dfetch(texture<uchar1, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1Dfetch(texture<char2, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1Dfetch(texture<uchar2, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1Dfetch(texture<char4, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1Dfetch(texture<uchar4, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<short int, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1Dfetch(texture<short unsigned int, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1Dfetch(texture<short1, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1Dfetch(texture<ushort1, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1Dfetch(texture<short2, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1Dfetch(texture<ushort2, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1Dfetch(texture<short4, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1Dfetch(texture<ushort4, 1, (cudaTextureReadMode)1u>, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1D(texture<char, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1D(texture<signed char, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1D(texture<unsigned char, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1D(texture<char1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1D(texture<uchar1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1D(texture<char2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1D(texture<uchar2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1D(texture<char4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1D(texture<uchar4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1D(texture<short int, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1D(texture<short unsigned int, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1D(texture<short1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1D(texture<ushort1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1D(texture<short2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1D(texture<ushort2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1D(texture<short4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1D(texture<ushort4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1D(texture<int, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1D(texture<unsigned int, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1D(texture<int1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1D(texture<uint1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1D(texture<int2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1D(texture<uint2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1D(texture<int4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1D(texture<uint4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<float, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1D(texture<float1, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1D(texture<float2, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1D(texture<float4, 1, (cudaTextureReadMode)0u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<char, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<signed char, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<unsigned char, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1D(texture<char1, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1D(texture<uchar1, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1D(texture<char2, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1D(texture<uchar2, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1D(texture<char4, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1D(texture<uchar4, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<short int, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1D(texture<short unsigned int, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1D(texture<short1, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1D(texture<ushort1, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1D(texture<short2, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1D(texture<ushort2, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1D(texture<short4, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1D(texture<ushort4, 1, (cudaTextureReadMode)1u>, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2D(texture<char, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2D(texture<signed char, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2D(texture<unsigned char, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2D(texture<char1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2D(texture<uchar1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2D(texture<char2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2D(texture<uchar2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2D(texture<char4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2D(texture<uchar4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2D(texture<short int, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2D(texture<short unsigned int, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2D(texture<short1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2D(texture<ushort1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2D(texture<short2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2D(texture<ushort2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2D(texture<short4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2D(texture<ushort4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2D(texture<int, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2D(texture<unsigned int, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2D(texture<int1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2D(texture<uint1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2D(texture<int2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2D(texture<uint2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2D(texture<int4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2D(texture<uint4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<float, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2D(texture<float1, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2D(texture<float2, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2D(texture<float4, 2, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<char, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<signed char, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<unsigned char, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2D(texture<char1, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2D(texture<uchar1, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2D(texture<char2, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2D(texture<uchar2, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2D(texture<char4, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2D(texture<uchar4, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<short int, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2D(texture<short unsigned int, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2D(texture<short1, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2D(texture<ushort1, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2D(texture<short2, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2D(texture<ushort2, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2D(texture<short4, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2D(texture<ushort4, 2, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1DLayered(texture<char, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1DLayered(texture<signed char, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1DLayered(texture<unsigned char, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1DLayered(texture<char1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1DLayered(texture<uchar1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1DLayered(texture<char2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1DLayered(texture<uchar2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1DLayered(texture<char4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1DLayered(texture<uchar4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1DLayered(texture<short int, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1DLayered(texture<short unsigned int, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1DLayered(texture<short1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1DLayered(texture<ushort1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1DLayered(texture<short2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1DLayered(texture<ushort2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1DLayered(texture<short4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1DLayered(texture<ushort4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1DLayered(texture<int, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1DLayered(texture<unsigned int, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1DLayered(texture<int1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1DLayered(texture<uint1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1DLayered(texture<int2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1DLayered(texture<uint2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1DLayered(texture<int4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1DLayered(texture<uint4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<float, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayered(texture<float1, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayered(texture<float2, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayered(texture<float4, 241, (cudaTextureReadMode)0u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<char, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<signed char, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<unsigned char, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayered(texture<char1, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayered(texture<uchar1, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayered(texture<char2, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayered(texture<uchar2, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayered(texture<char4, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayered(texture<uchar4, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<short int, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayered(texture<short unsigned int, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayered(texture<short1, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayered(texture<ushort1, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayered(texture<short2, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayered(texture<ushort2, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayered(texture<short4, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayered(texture<ushort4, 241, (cudaTextureReadMode)1u>, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2DLayered(texture<char, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2DLayered(texture<signed char, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2DLayered(texture<unsigned char, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2DLayered(texture<char1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2DLayered(texture<uchar1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2DLayered(texture<char2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2DLayered(texture<uchar2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2DLayered(texture<char4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2DLayered(texture<uchar4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2DLayered(texture<short int, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2DLayered(texture<short unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2DLayered(texture<short1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2DLayered(texture<ushort1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2DLayered(texture<short2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2DLayered(texture<ushort2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2DLayered(texture<short4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2DLayered(texture<ushort4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2DLayered(texture<int, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2DLayered(texture<unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2DLayered(texture<int1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2DLayered(texture<uint1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2DLayered(texture<int2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2DLayered(texture<uint2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2DLayered(texture<int4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2DLayered(texture<uint4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<float, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayered(texture<float1, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayered(texture<float2, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayered(texture<float4, 242, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<char, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<signed char, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<unsigned char, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayered(texture<char1, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayered(texture<uchar1, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayered(texture<char2, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayered(texture<uchar2, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayered(texture<char4, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayered(texture<uchar4, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<short int, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayered(texture<short unsigned int, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayered(texture<short1, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayered(texture<ushort1, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayered(texture<short2, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayered(texture<ushort2, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayered(texture<short4, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayered(texture<ushort4, 242, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex3D(texture<char, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex3D(texture<signed char, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex3D(texture<unsigned char, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex3D(texture<char1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex3D(texture<uchar1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex3D(texture<char2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex3D(texture<uchar2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex3D(texture<char4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex3D(texture<uchar4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex3D(texture<short int, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex3D(texture<short unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex3D(texture<short1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex3D(texture<ushort1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex3D(texture<short2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex3D(texture<ushort2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex3D(texture<short4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex3D(texture<ushort4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex3D(texture<int, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex3D(texture<unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex3D(texture<int1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex3D(texture<uint1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex3D(texture<int2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex3D(texture<uint2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex3D(texture<int4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex3D(texture<uint4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<float, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3D(texture<float1, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3D(texture<float2, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3D(texture<float4, 3, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<char, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<signed char, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<unsigned char, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3D(texture<char1, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3D(texture<uchar1, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3D(texture<char2, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3D(texture<uchar2, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3D(texture<char4, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3D(texture<uchar4, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<short int, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3D(texture<short unsigned int, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3D(texture<short1, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3D(texture<ushort1, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3D(texture<short2, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3D(texture<ushort2, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3D(texture<short4, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3D(texture<ushort4, 3, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char texCubemap(texture<char, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char texCubemap(texture<signed char, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char texCubemap(texture<unsigned char, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 texCubemap(texture<char1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 texCubemap(texture<uchar1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 texCubemap(texture<char2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 texCubemap(texture<uchar2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 texCubemap(texture<char4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 texCubemap(texture<uchar4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int texCubemap(texture<short int, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int texCubemap(texture<short unsigned int, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 texCubemap(texture<short1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 texCubemap(texture<ushort1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 texCubemap(texture<short2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 texCubemap(texture<ushort2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 texCubemap(texture<short4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 texCubemap(texture<ushort4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int texCubemap(texture<int, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int texCubemap(texture<unsigned int, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 texCubemap(texture<int1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 texCubemap(texture<uint1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 texCubemap(texture<int2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 texCubemap(texture<uint2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 texCubemap(texture<int4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 texCubemap(texture<uint4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<float, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemap(texture<float1, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemap(texture<float2, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemap(texture<float4, 12, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<char, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<signed char, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<unsigned char, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemap(texture<char1, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemap(texture<uchar1, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemap(texture<char2, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemap(texture<uchar2, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemap(texture<char4, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemap(texture<uchar4, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<short int, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemap(texture<short unsigned int, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemap(texture<short1, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemap(texture<ushort1, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemap(texture<short2, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemap(texture<ushort2, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemap(texture<short4, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemap(texture<ushort4, 12, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char texCubemapLayered(texture<char, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char texCubemapLayered(texture<signed char, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char texCubemapLayered(texture<unsigned char, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 texCubemapLayered(texture<char1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 texCubemapLayered(texture<uchar1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 texCubemapLayered(texture<char2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 texCubemapLayered(texture<uchar2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 texCubemapLayered(texture<char4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 texCubemapLayered(texture<uchar4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int texCubemapLayered(texture<short int, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int texCubemapLayered(texture<short unsigned int, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 texCubemapLayered(texture<short1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 texCubemapLayered(texture<ushort1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 texCubemapLayered(texture<short2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 texCubemapLayered(texture<ushort2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 texCubemapLayered(texture<short4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 texCubemapLayered(texture<ushort4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int texCubemapLayered(texture<int, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int texCubemapLayered(texture<unsigned int, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 texCubemapLayered(texture<int1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 texCubemapLayered(texture<uint1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 texCubemapLayered(texture<int2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 texCubemapLayered(texture<uint2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 texCubemapLayered(texture<int4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 texCubemapLayered(texture<uint4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<float, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayered(texture<float1, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayered(texture<float2, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayered(texture<float4, 252, (cudaTextureReadMode)0u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<char, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<signed char, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<unsigned char, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayered(texture<char1, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayered(texture<uchar1, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayered(texture<char2, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayered(texture<uchar2, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayered(texture<char4, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayered(texture<uchar4, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<short int, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayered(texture<short unsigned int, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayered(texture<short1, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayered(texture<ushort1, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayered(texture<short2, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayered(texture<ushort2, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayered(texture<short4, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayered(texture<ushort4, 252, (cudaTextureReadMode)1u>, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<char, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<signed char, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2Dgather(texture<unsigned char, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<char1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2Dgather(texture<uchar1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<char2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2Dgather(texture<uchar2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<char3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2Dgather(texture<uchar3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2Dgather(texture<char4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2Dgather(texture<uchar4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2Dgather(texture<short int, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2Dgather(texture<short unsigned int, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2Dgather(texture<short1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2Dgather(texture<ushort1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2Dgather(texture<short2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2Dgather(texture<ushort2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2Dgather(texture<short3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2Dgather(texture<ushort3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2Dgather(texture<short4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2Dgather(texture<ushort4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2Dgather(texture<int, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2Dgather(texture<unsigned int, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2Dgather(texture<int1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2Dgather(texture<uint1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2Dgather(texture<int2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2Dgather(texture<uint2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2Dgather(texture<int3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2Dgather(texture<uint3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2Dgather(texture<int4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2Dgather(texture<uint4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<float, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<float1, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<float2, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<float3, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<float4, 2, (cudaTextureReadMode)0u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<char, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<signed char, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<unsigned char, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<char1, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<uchar1, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<char2, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<uchar2, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<char3, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<uchar3, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<char4, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<uchar4, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short int, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short unsigned int, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short1, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<ushort1, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short2, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<ushort2, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short3, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<ushort3, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<short4, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2Dgather(texture<ushort4, 2, (cudaTextureReadMode)1u>, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1DLod(texture<char, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1DLod(texture<signed char, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1DLod(texture<unsigned char, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1DLod(texture<char1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1DLod(texture<uchar1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1DLod(texture<char2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1DLod(texture<uchar2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1DLod(texture<char4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1DLod(texture<uchar4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1DLod(texture<short int, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1DLod(texture<short unsigned int, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1DLod(texture<short1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1DLod(texture<ushort1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1DLod(texture<short2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1DLod(texture<ushort2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1DLod(texture<short4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1DLod(texture<ushort4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1DLod(texture<int, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1DLod(texture<unsigned int, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1DLod(texture<int1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1DLod(texture<uint1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1DLod(texture<int2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1DLod(texture<uint2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1DLod(texture<int4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1DLod(texture<uint4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<float, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLod(texture<float1, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLod(texture<float2, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLod(texture<float4, 1, (cudaTextureReadMode)0u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<char, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<signed char, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<unsigned char, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLod(texture<char1, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLod(texture<uchar1, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLod(texture<char2, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLod(texture<uchar2, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLod(texture<char4, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLod(texture<uchar4, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<short int, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLod(texture<short unsigned int, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLod(texture<short1, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLod(texture<ushort1, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLod(texture<short2, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLod(texture<ushort2, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLod(texture<short4, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLod(texture<ushort4, 1, (cudaTextureReadMode)1u>, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2DLod(texture<char, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2DLod(texture<signed char, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2DLod(texture<unsigned char, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2DLod(texture<char1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2DLod(texture<uchar1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2DLod(texture<char2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2DLod(texture<uchar2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2DLod(texture<char4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2DLod(texture<uchar4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2DLod(texture<short int, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2DLod(texture<short unsigned int, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2DLod(texture<short1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2DLod(texture<ushort1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2DLod(texture<short2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2DLod(texture<ushort2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2DLod(texture<short4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2DLod(texture<ushort4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2DLod(texture<int, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2DLod(texture<unsigned int, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2DLod(texture<int1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2DLod(texture<uint1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2DLod(texture<int2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2DLod(texture<uint2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2DLod(texture<int4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2DLod(texture<uint4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<float, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLod(texture<float1, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLod(texture<float2, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLod(texture<float4, 2, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<char, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<signed char, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<unsigned char, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLod(texture<char1, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLod(texture<uchar1, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLod(texture<char2, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLod(texture<uchar2, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLod(texture<char4, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLod(texture<uchar4, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<short int, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLod(texture<short unsigned int, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLod(texture<short1, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLod(texture<ushort1, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLod(texture<short2, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLod(texture<ushort2, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLod(texture<short4, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLod(texture<ushort4, 2, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1DLayeredLod(texture<char, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1DLayeredLod(texture<signed char, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1DLayeredLod(texture<unsigned char, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1DLayeredLod(texture<char1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1DLayeredLod(texture<uchar1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1DLayeredLod(texture<char2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1DLayeredLod(texture<uchar2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1DLayeredLod(texture<char4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1DLayeredLod(texture<uchar4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1DLayeredLod(texture<short int, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1DLayeredLod(texture<short unsigned int, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1DLayeredLod(texture<short1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1DLayeredLod(texture<ushort1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1DLayeredLod(texture<short2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1DLayeredLod(texture<ushort2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1DLayeredLod(texture<short4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1DLayeredLod(texture<ushort4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1DLayeredLod(texture<int, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1DLayeredLod(texture<unsigned int, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1DLayeredLod(texture<int1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1DLayeredLod(texture<uint1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1DLayeredLod(texture<int2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1DLayeredLod(texture<uint2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1DLayeredLod(texture<int4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1DLayeredLod(texture<uint4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<float, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredLod(texture<float1, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredLod(texture<float2, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredLod(texture<float4, 241, (cudaTextureReadMode)0u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<char, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<signed char, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<unsigned char, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredLod(texture<char1, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredLod(texture<uchar1, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredLod(texture<char2, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredLod(texture<uchar2, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredLod(texture<char4, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredLod(texture<uchar4, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<short int, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredLod(texture<short unsigned int, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredLod(texture<short1, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredLod(texture<ushort1, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredLod(texture<short2, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredLod(texture<ushort2, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredLod(texture<short4, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredLod(texture<ushort4, 241, (cudaTextureReadMode)1u>, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2DLayeredLod(texture<char, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2DLayeredLod(texture<signed char, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2DLayeredLod(texture<unsigned char, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2DLayeredLod(texture<char1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2DLayeredLod(texture<uchar1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2DLayeredLod(texture<char2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2DLayeredLod(texture<uchar2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2DLayeredLod(texture<char4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2DLayeredLod(texture<uchar4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2DLayeredLod(texture<short int, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2DLayeredLod(texture<short unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2DLayeredLod(texture<short1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2DLayeredLod(texture<ushort1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2DLayeredLod(texture<short2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2DLayeredLod(texture<ushort2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2DLayeredLod(texture<short4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2DLayeredLod(texture<ushort4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2DLayeredLod(texture<int, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2DLayeredLod(texture<unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2DLayeredLod(texture<int1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2DLayeredLod(texture<uint1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2DLayeredLod(texture<int2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2DLayeredLod(texture<uint2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2DLayeredLod(texture<int4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2DLayeredLod(texture<uint4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<float, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredLod(texture<float1, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredLod(texture<float2, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredLod(texture<float4, 242, (cudaTextureReadMode)0u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<char, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<signed char, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<unsigned char, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredLod(texture<char1, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredLod(texture<uchar1, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredLod(texture<char2, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredLod(texture<uchar2, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredLod(texture<char4, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredLod(texture<uchar4, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<short int, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredLod(texture<short unsigned int, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredLod(texture<short1, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredLod(texture<ushort1, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredLod(texture<short2, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredLod(texture<ushort2, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredLod(texture<short4, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredLod(texture<ushort4, 242, (cudaTextureReadMode)1u>, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex3DLod(texture<char, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex3DLod(texture<signed char, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex3DLod(texture<unsigned char, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex3DLod(texture<char1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex3DLod(texture<uchar1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex3DLod(texture<char2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex3DLod(texture<uchar2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex3DLod(texture<char4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex3DLod(texture<uchar4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex3DLod(texture<short int, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex3DLod(texture<short unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex3DLod(texture<short1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex3DLod(texture<ushort1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex3DLod(texture<short2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex3DLod(texture<ushort2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex3DLod(texture<short4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex3DLod(texture<ushort4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex3DLod(texture<int, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex3DLod(texture<unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex3DLod(texture<int1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex3DLod(texture<uint1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex3DLod(texture<int2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex3DLod(texture<uint2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex3DLod(texture<int4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex3DLod(texture<uint4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<float, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DLod(texture<float1, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DLod(texture<float2, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DLod(texture<float4, 3, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<char, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<signed char, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<unsigned char, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DLod(texture<char1, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DLod(texture<uchar1, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DLod(texture<char2, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DLod(texture<uchar2, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DLod(texture<char4, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DLod(texture<uchar4, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<short int, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DLod(texture<short unsigned int, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DLod(texture<short1, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DLod(texture<ushort1, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DLod(texture<short2, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DLod(texture<ushort2, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DLod(texture<short4, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DLod(texture<ushort4, 3, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char texCubemapLod(texture<char, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char texCubemapLod(texture<signed char, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char texCubemapLod(texture<unsigned char, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 texCubemapLod(texture<char1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 texCubemapLod(texture<uchar1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 texCubemapLod(texture<char2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 texCubemapLod(texture<uchar2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 texCubemapLod(texture<char4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 texCubemapLod(texture<uchar4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int texCubemapLod(texture<short int, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int texCubemapLod(texture<short unsigned int, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 texCubemapLod(texture<short1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 texCubemapLod(texture<ushort1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 texCubemapLod(texture<short2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 texCubemapLod(texture<ushort2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 texCubemapLod(texture<short4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 texCubemapLod(texture<ushort4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int texCubemapLod(texture<int, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int texCubemapLod(texture<unsigned int, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 texCubemapLod(texture<int1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 texCubemapLod(texture<uint1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 texCubemapLod(texture<int2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 texCubemapLod(texture<uint2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 texCubemapLod(texture<int4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 texCubemapLod(texture<uint4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<float, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLod(texture<float1, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLod(texture<float2, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLod(texture<float4, 12, (cudaTextureReadMode)0u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<char, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<signed char, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<unsigned char, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLod(texture<char1, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLod(texture<uchar1, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLod(texture<char2, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLod(texture<uchar2, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLod(texture<char4, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLod(texture<uchar4, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<short int, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLod(texture<short unsigned int, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLod(texture<short1, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLod(texture<ushort1, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLod(texture<short2, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLod(texture<ushort2, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLod(texture<short4, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLod(texture<ushort4, 12, (cudaTextureReadMode)1u>, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char texCubemapLayeredLod(texture<char, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char texCubemapLayeredLod(texture<signed char, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char texCubemapLayeredLod(texture<unsigned char, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 texCubemapLayeredLod(texture<char1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 texCubemapLayeredLod(texture<uchar1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 texCubemapLayeredLod(texture<char2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 texCubemapLayeredLod(texture<uchar2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 texCubemapLayeredLod(texture<char4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 texCubemapLayeredLod(texture<uchar4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int texCubemapLayeredLod(texture<short int, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int texCubemapLayeredLod(texture<short unsigned int, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 texCubemapLayeredLod(texture<short1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 texCubemapLayeredLod(texture<ushort1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 texCubemapLayeredLod(texture<short2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 texCubemapLayeredLod(texture<ushort2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 texCubemapLayeredLod(texture<short4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 texCubemapLayeredLod(texture<ushort4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int texCubemapLayeredLod(texture<int, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int texCubemapLayeredLod(texture<unsigned int, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 texCubemapLayeredLod(texture<int1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 texCubemapLayeredLod(texture<uint1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 texCubemapLayeredLod(texture<int2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 texCubemapLayeredLod(texture<uint2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 texCubemapLayeredLod(texture<int4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 texCubemapLayeredLod(texture<uint4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<float, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayeredLod(texture<float1, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayeredLod(texture<float2, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayeredLod(texture<float4, 252, (cudaTextureReadMode)0u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<char, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<signed char, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<unsigned char, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayeredLod(texture<char1, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayeredLod(texture<uchar1, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayeredLod(texture<char2, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayeredLod(texture<uchar2, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayeredLod(texture<char4, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayeredLod(texture<uchar4, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<short int, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float texCubemapLayeredLod(texture<short unsigned int, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayeredLod(texture<short1, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 texCubemapLayeredLod(texture<ushort1, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayeredLod(texture<short2, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 texCubemapLayeredLod(texture<ushort2, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayeredLod(texture<short4, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 texCubemapLayeredLod(texture<ushort4, 252, (cudaTextureReadMode)1u>, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1DGrad(texture<char, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1DGrad(texture<signed char, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1DGrad(texture<unsigned char, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1DGrad(texture<char1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1DGrad(texture<uchar1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1DGrad(texture<char2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1DGrad(texture<uchar2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1DGrad(texture<char4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1DGrad(texture<uchar4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1DGrad(texture<short int, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1DGrad(texture<short unsigned int, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1DGrad(texture<short1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1DGrad(texture<ushort1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1DGrad(texture<short2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1DGrad(texture<ushort2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1DGrad(texture<short4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1DGrad(texture<ushort4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1DGrad(texture<int, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1DGrad(texture<unsigned int, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1DGrad(texture<int1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1DGrad(texture<uint1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1DGrad(texture<int2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1DGrad(texture<uint2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1DGrad(texture<int4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1DGrad(texture<uint4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<float, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DGrad(texture<float1, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DGrad(texture<float2, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DGrad(texture<float4, 1, (cudaTextureReadMode)0u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<char, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<signed char, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<unsigned char, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DGrad(texture<char1, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DGrad(texture<uchar1, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DGrad(texture<char2, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DGrad(texture<uchar2, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DGrad(texture<char4, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DGrad(texture<uchar4, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<short int, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DGrad(texture<short unsigned int, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DGrad(texture<short1, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DGrad(texture<ushort1, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DGrad(texture<short2, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DGrad(texture<ushort2, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DGrad(texture<short4, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DGrad(texture<ushort4, 1, (cudaTextureReadMode)1u>, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2DGrad(texture<char, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2DGrad(texture<signed char, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2DGrad(texture<unsigned char, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2DGrad(texture<char1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2DGrad(texture<uchar1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2DGrad(texture<char2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2DGrad(texture<uchar2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2DGrad(texture<char4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2DGrad(texture<uchar4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2DGrad(texture<short int, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2DGrad(texture<short unsigned int, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2DGrad(texture<short1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2DGrad(texture<ushort1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2DGrad(texture<short2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2DGrad(texture<ushort2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2DGrad(texture<short4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2DGrad(texture<ushort4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2DGrad(texture<int, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2DGrad(texture<unsigned int, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2DGrad(texture<int1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2DGrad(texture<uint1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2DGrad(texture<int2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2DGrad(texture<uint2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2DGrad(texture<int4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2DGrad(texture<uint4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<float, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DGrad(texture<float1, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DGrad(texture<float2, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DGrad(texture<float4, 2, (cudaTextureReadMode)0u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<char, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<signed char, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<unsigned char, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DGrad(texture<char1, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DGrad(texture<uchar1, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DGrad(texture<char2, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DGrad(texture<uchar2, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DGrad(texture<char4, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DGrad(texture<uchar4, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<short int, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DGrad(texture<short unsigned int, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DGrad(texture<short1, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DGrad(texture<ushort1, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DGrad(texture<short2, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DGrad(texture<ushort2, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DGrad(texture<short4, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DGrad(texture<ushort4, 2, (cudaTextureReadMode)1u>, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex1DLayeredGrad(texture<char, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex1DLayeredGrad(texture<signed char, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex1DLayeredGrad(texture<unsigned char, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex1DLayeredGrad(texture<char1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex1DLayeredGrad(texture<uchar1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex1DLayeredGrad(texture<char2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex1DLayeredGrad(texture<uchar2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex1DLayeredGrad(texture<char4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex1DLayeredGrad(texture<uchar4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex1DLayeredGrad(texture<short int, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex1DLayeredGrad(texture<short unsigned int, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex1DLayeredGrad(texture<short1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex1DLayeredGrad(texture<ushort1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex1DLayeredGrad(texture<short2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex1DLayeredGrad(texture<ushort2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex1DLayeredGrad(texture<short4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex1DLayeredGrad(texture<ushort4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex1DLayeredGrad(texture<int, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex1DLayeredGrad(texture<unsigned int, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex1DLayeredGrad(texture<int1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex1DLayeredGrad(texture<uint1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex1DLayeredGrad(texture<int2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex1DLayeredGrad(texture<uint2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex1DLayeredGrad(texture<int4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex1DLayeredGrad(texture<uint4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<float, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredGrad(texture<float1, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredGrad(texture<float2, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredGrad(texture<float4, 241, (cudaTextureReadMode)0u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<char, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<signed char, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<unsigned char, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredGrad(texture<char1, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredGrad(texture<uchar1, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredGrad(texture<char2, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredGrad(texture<uchar2, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredGrad(texture<char4, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredGrad(texture<uchar4, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<short int, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex1DLayeredGrad(texture<short unsigned int, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredGrad(texture<short1, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex1DLayeredGrad(texture<ushort1, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredGrad(texture<short2, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex1DLayeredGrad(texture<ushort2, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredGrad(texture<short4, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex1DLayeredGrad(texture<ushort4, 241, (cudaTextureReadMode)1u>, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex2DLayeredGrad(texture<char, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex2DLayeredGrad(texture<signed char, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex2DLayeredGrad(texture<unsigned char, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex2DLayeredGrad(texture<char1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex2DLayeredGrad(texture<uchar1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex2DLayeredGrad(texture<char2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex2DLayeredGrad(texture<uchar2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex2DLayeredGrad(texture<char4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex2DLayeredGrad(texture<uchar4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex2DLayeredGrad(texture<short int, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex2DLayeredGrad(texture<short unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex2DLayeredGrad(texture<short1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex2DLayeredGrad(texture<ushort1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex2DLayeredGrad(texture<short2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex2DLayeredGrad(texture<ushort2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex2DLayeredGrad(texture<short4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex2DLayeredGrad(texture<ushort4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex2DLayeredGrad(texture<int, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex2DLayeredGrad(texture<unsigned int, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex2DLayeredGrad(texture<int1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex2DLayeredGrad(texture<uint1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex2DLayeredGrad(texture<int2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex2DLayeredGrad(texture<uint2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex2DLayeredGrad(texture<int4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex2DLayeredGrad(texture<uint4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<float, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredGrad(texture<float1, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredGrad(texture<float2, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredGrad(texture<float4, 242, (cudaTextureReadMode)0u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<char, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<signed char, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<unsigned char, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredGrad(texture<char1, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredGrad(texture<uchar1, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredGrad(texture<char2, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredGrad(texture<uchar2, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredGrad(texture<char4, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredGrad(texture<uchar4, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<short int, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex2DLayeredGrad(texture<short unsigned int, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredGrad(texture<short1, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex2DLayeredGrad(texture<ushort1, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredGrad(texture<short2, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex2DLayeredGrad(texture<ushort2, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredGrad(texture<short4, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex2DLayeredGrad(texture<ushort4, 242, (cudaTextureReadMode)1u>, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char tex3DGrad(texture<char, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function signed char tex3DGrad(texture<signed char, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned char tex3DGrad(texture<unsigned char, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char1 tex3DGrad(texture<char1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar1 tex3DGrad(texture<uchar1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char2 tex3DGrad(texture<char2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar2 tex3DGrad(texture<uchar2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function char4 tex3DGrad(texture<char4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uchar4 tex3DGrad(texture<uchar4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short int tex3DGrad(texture<short int, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short unsigned int tex3DGrad(texture<short unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short1 tex3DGrad(texture<short1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort1 tex3DGrad(texture<ushort1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short2 tex3DGrad(texture<short2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort2 tex3DGrad(texture<ushort2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function short4 tex3DGrad(texture<short4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function ushort4 tex3DGrad(texture<ushort4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int tex3DGrad(texture<int, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function unsigned int tex3DGrad(texture<unsigned int, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int1 tex3DGrad(texture<int1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint1 tex3DGrad(texture<uint1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int2 tex3DGrad(texture<int2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint2 tex3DGrad(texture<uint2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function int4 tex3DGrad(texture<int4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function uint4 tex3DGrad(texture<uint4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<float, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DGrad(texture<float1, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DGrad(texture<float2, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DGrad(texture<float4, 3, (cudaTextureReadMode)0u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<char, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<signed char, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<unsigned char, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DGrad(texture<char1, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DGrad(texture<uchar1, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DGrad(texture<char2, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DGrad(texture<uchar2, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DGrad(texture<char4, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DGrad(texture<uchar4, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<short int, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float tex3DGrad(texture<short unsigned int, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DGrad(texture<short1, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float1 tex3DGrad(texture<ushort1, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DGrad(texture<short2, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float2 tex3DGrad(texture<ushort2, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DGrad(texture<short4, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function float4 tex3DGrad(texture<ushort4, 3, (cudaTextureReadMode)1u>, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(char*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(signed char*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(char1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(char2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(char4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(unsigned char*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uchar1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uchar2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uchar4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(short int*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(short1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(short2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(short4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(short unsigned int*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(ushort1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(ushort2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(ushort4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(int*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(int1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(int2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(int4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(unsigned int*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uint1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uint2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(uint4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(float*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(float1*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(float2*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1Dfetch(float4*, cudaTextureObject_t, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(char*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(signed char*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(char1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(char2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(char4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(unsigned char*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uchar1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uchar2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uchar4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(short int*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(short1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(short2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(short4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(short unsigned int*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(ushort1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(ushort2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(ushort4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(int*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(int1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(int2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(int4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(unsigned int*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uint1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uint2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(uint4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(float*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(float1*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(float2*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1D(float4*, cudaTextureObject_t, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(signed char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(char1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(char2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(char4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(unsigned char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uchar1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uchar2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uchar4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(short int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(short1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(short2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(short4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(short unsigned int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(ushort1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(ushort2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(ushort4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(int1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(int2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(int4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(unsigned int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uint1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uint2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(uint4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(float*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(float1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(float2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2D(float4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(signed char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(char1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(char2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(char4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(unsigned char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uchar1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uchar2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uchar4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(short int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(short1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(short2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(short4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(short unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(ushort1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(ushort2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(ushort4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(int1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(int2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(int4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uint1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uint2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(uint4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(float*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(float1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(float2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3D(float4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(char*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(signed char*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(char1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(char2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(char4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(unsigned char*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uchar1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uchar2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uchar4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(short int*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(short1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(short2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(short4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(short unsigned int*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(ushort1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(ushort2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(ushort4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(int*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(int1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(int2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(int4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(unsigned int*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uint1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uint2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(uint4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(float*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(float1*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(float2*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayered(float4*, cudaTextureObject_t, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(signed char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(char1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(char2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(char4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(unsigned char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uchar1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uchar2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uchar4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(short int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(short1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(short2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(short4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(short unsigned int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(ushort1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(ushort2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(ushort4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(int1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(int2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(int4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(unsigned int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uint1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uint2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(uint4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(float*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(float1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(float2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayered(float4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(signed char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(char1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(char2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(char4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(unsigned char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uchar1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uchar2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uchar4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(short int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(short1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(short2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(short4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(short unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(ushort1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(ushort2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(ushort4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(int1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(int2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(int4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uint1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uint2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(uint4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(float*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(float1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(float2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemap(float4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(char*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(signed char*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(char1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(char2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(char4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(unsigned char*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uchar1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uchar2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uchar4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(short int*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(short1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(short2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(short4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(short unsigned int*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(ushort1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(ushort2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(ushort4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(int*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(int1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(int2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(int4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(unsigned int*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uint1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uint2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(uint4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(float*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(float1*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(float2*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayered(float4*, cudaTextureObject_t, float, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(signed char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(char1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(char2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(char4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(unsigned char*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uchar1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uchar2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uchar4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(short int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(short1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(short2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(short4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(short unsigned int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ushort1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ushort2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ushort4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(int1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(int2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(int4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(unsigned int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uint1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uint2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(uint4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(long int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(long1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(long2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(long4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(long unsigned int*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ulong1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ulong2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(ulong4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(float*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(float1*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(float2*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2Dgather(float4*, cudaTextureObject_t, float, float, int) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(signed char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(char1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(char2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(char4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(unsigned char*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uchar1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uchar2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uchar4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(short int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(short1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(short2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(short4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(short unsigned int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(ushort1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(ushort2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(ushort4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(int1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(int2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(int4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(unsigned int*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uint1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uint2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(uint4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(float*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(float1*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(float2*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLod(float4*, cudaTextureObject_t, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(signed char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(char1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(char2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(char4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(unsigned char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uchar1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uchar2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uchar4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(short int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(short1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(short2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(short4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(short unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(ushort1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(ushort2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(ushort4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(int1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(int2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(int4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uint1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uint2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(uint4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(float*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(float1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(float2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLod(float4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(signed char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(char1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(char2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(char4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(unsigned char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uchar1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uchar2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uchar4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(short int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(short1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(short2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(short4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(short unsigned int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(ushort1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(ushort2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(ushort4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(int1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(int2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(int4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(unsigned int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uint1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uint2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(uint4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(float*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(float1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(float2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DLod(float4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(char*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(signed char*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(char1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(char2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(char4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(unsigned char*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uchar1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uchar2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uchar4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(short int*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(short1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(short2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(short4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(short unsigned int*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(ushort1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(ushort2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(ushort4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(int*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(int1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(int2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(int4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(unsigned int*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uint1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uint2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(uint4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(float*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(float1*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(float2*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredLod(float4*, cudaTextureObject_t, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(char*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(signed char*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(char1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(char2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(char4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(unsigned char*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uchar1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uchar2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uchar4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(short int*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(short1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(short2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(short4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(short unsigned int*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(ushort1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(ushort2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(ushort4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(int*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(int1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(int2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(int4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(unsigned int*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uint1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uint2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(uint4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(float*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(float1*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(float2*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredLod(float4*, cudaTextureObject_t, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(signed char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(char1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(char2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(char4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(unsigned char*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uchar1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uchar2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uchar4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(short int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(short1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(short2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(short4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(short unsigned int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(ushort1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(ushort2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(ushort4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(int1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(int2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(int4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(unsigned int*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uint1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uint2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(uint4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(float*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(float1*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(float2*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLod(float4*, cudaTextureObject_t, float, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(char*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(signed char*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(char1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(char2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(char4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(unsigned char*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uchar1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uchar2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uchar4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(short int*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(short1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(short2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(short4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(short unsigned int*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(ushort1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(ushort2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(ushort4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(int*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(int1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(int2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(int4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(unsigned int*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uint1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uint2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(uint4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(float*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(float1*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(float2*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void texCubemapLayeredLod(float4*, cudaTextureObject_t, float, float, float, int, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(signed char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(char1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(char2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(char4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(unsigned char*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uchar1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uchar2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uchar4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(short int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(short1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(short2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(short4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(short unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(ushort1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(ushort2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(ushort4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(int1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(int2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(int4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(unsigned int*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uint1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uint2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(uint4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(float*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(float1*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(float2*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DGrad(float4*, cudaTextureObject_t, float, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(char*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(signed char*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(char1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(char2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(char4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(unsigned char*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uchar1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uchar2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uchar4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(short int*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(short1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(short2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(short4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(short unsigned int*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(ushort1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(ushort2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(ushort4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(int*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(int1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(int2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(int4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(unsigned int*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uint1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uint2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(uint4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(float*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(float1*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(float2*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DGrad(float4*, cudaTextureObject_t, float, float, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(char*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(signed char*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(char1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(char2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(char4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(unsigned char*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uchar1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uchar2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uchar4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(short int*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(short1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(short2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(short4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(short unsigned int*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(ushort1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(ushort2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(ushort4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(int*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(int1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(int2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(int4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(unsigned int*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uint1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uint2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(uint4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(float*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(float1*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(float2*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex3DGrad(float4*, cudaTextureObject_t, float, float, float, float4, float4) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(char*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(signed char*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(char1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(char2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(char4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(unsigned char*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uchar1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uchar2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uchar4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(short int*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(short1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(short2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(short4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(short unsigned int*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(ushort1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(ushort2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(ushort4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(int*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(int1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(int2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(int4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(unsigned int*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uint1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uint2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(uint4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(float*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(float1*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(float2*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex1DLayeredGrad(float4*, cudaTextureObject_t, float, int, float, float) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(char*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(signed char*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(char1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(char2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(char4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(unsigned char*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uchar1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uchar2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uchar4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(short int*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(short1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(short2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(short4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(short unsigned int*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(ushort1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(ushort2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(ushort4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(int*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(int1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(int2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(int4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(unsigned int*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uint1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uint2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(uint4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(float*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(float1*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(float2*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void tex2DLayeredGrad(float4*, cudaTextureObject_t, float, float, int, float2, float2) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(char*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(signed char*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(char1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(unsigned char*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uchar1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(short int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(short1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(short unsigned int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(ushort1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(int1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(unsigned int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uint1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(long long int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(longlong1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(long long unsigned int*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(ulonglong1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(float*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(float1*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(char2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uchar2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(short2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(ushort2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(int2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uint2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(longlong2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(ulonglong2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(float2*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(char4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uchar4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(short4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(ushort4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(int4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(uint4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dread(float4*, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(signed char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(char1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(unsigned char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uchar1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(short int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(short1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(short unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(ushort1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(int1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uint1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(long long int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(longlong1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(long long unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(ulonglong1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(float*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(float1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(char2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uchar2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(short2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(ushort2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(int2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uint2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(longlong2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(ulonglong2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(float2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(char4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uchar4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(short4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(ushort4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(int4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(uint4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dread(float4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(signed char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(char1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(unsigned char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uchar1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(short int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(short1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(short unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(ushort1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(int1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uint1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(long long int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(longlong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(long long unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(ulonglong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(float*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(float1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(char2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uchar2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(short2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(ushort2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(int2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uint2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(longlong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(ulonglong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(float2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(char4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uchar4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(short4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(ushort4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(int4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(uint4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dread(float4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(signed char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(char1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(unsigned char*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uchar1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(short int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(short1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(short unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(ushort1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(int1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uint1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(long long int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(longlong1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(long long unsigned int*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(ulonglong1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(float*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(float1*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(char2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uchar2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(short2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(ushort2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(int2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uint2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(longlong2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(ulonglong2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(float2*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(char4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uchar4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(short4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(ushort4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(int4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(uint4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredread(float4*, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(signed char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(char1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(unsigned char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uchar1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(short int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(short1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(short unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(ushort1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(int1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uint1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(long long int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(longlong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(long long unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(ulonglong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(float*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(float1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(char2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uchar2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(short2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(ushort2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(int2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uint2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(longlong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(ulonglong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(float2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(char4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uchar4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(short4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(ushort4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(int4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(uint4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredread(float4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(signed char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(char1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(unsigned char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uchar1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(short int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(short1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(short unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(ushort1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(int1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uint1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(long long int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(longlong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(long long unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(ulonglong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(float*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(float1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(char2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uchar2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(short2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(ushort2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(int2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uint2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(longlong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(ulonglong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(float2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(char4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uchar4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(short4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(ushort4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(int4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(uint4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapread(float4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(signed char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(char1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(unsigned char*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uchar1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(short int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(short1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(short unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(ushort1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(int1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uint1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(long long int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(longlong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(long long unsigned int*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(ulonglong1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(float*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(float1*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(char2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uchar2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(short2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(ushort2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(int2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uint2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(longlong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(ulonglong2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(float2*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(char4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uchar4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(short4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(ushort4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(int4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(uint4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredread(float4*, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(signed char, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(unsigned char, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short unsigned int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(unsigned int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(long long int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(longlong1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(long long unsigned int, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ulonglong1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float1, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(longlong2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ulonglong2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float2, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(char4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uchar4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(short4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(ushort4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(int4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(uint4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1Dwrite(float4, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(signed char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(unsigned char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(long long int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(longlong1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(long long unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ulonglong1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(longlong2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ulonglong2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(char4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uchar4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(short4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(ushort4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(int4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(uint4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2Dwrite(float4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(signed char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(unsigned char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(long long int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(longlong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(long long unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ulonglong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(longlong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ulonglong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(char4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uchar4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(short4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(ushort4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(int4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(uint4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf3Dwrite(float4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(signed char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(unsigned char, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(long long int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(longlong1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(long long unsigned int, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ulonglong1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float1, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(longlong2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ulonglong2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float2, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(char4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uchar4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(short4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(ushort4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(int4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(uint4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf1DLayeredwrite(float4, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(signed char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(unsigned char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(long long int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(longlong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(long long unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ulonglong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(longlong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ulonglong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(char4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uchar4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(short4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(ushort4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(int4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(uint4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surf2DLayeredwrite(float4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(signed char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(unsigned char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(long long int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(longlong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(long long unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ulonglong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(longlong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ulonglong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(char4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uchar4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(short4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(ushort4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(int4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(uint4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapwrite(float4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(signed char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(unsigned char, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(long long int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(longlong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(long long unsigned int, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ulonglong1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float1, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(longlong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ulonglong2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float2, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(char4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uchar4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(short4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(ushort4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(int4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(uint4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function void surfCubemapLayeredwrite(float4, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode) (null)
;; enabled by -tree-original

{
  volatile int ___ = 1;

  <<cleanup_point   volatile int ___ = 1;>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<< Unknown tree: expr_stmt
  0 >>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  exit ((int) ___) >>>>>;
}


;; Function cudaError_t cudaEventCreate(CUevent_st**, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cudaEventCreateWithFlags (event, flags)>>;


;; Function cudaError_t cudaMallocHost(void**, size_t, unsigned int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cudaHostAlloc (ptr, size, flags)>>;


;; Function __cudaOccupancyB2DHelper::__cudaOccupancyB2DHelper(size_t) (null)
;; enabled by -tree-original

{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct __cudaOccupancyB2DHelper *) this)->n = n_) >>>>>;
}


;; Function size_t __cudaOccupancyB2DHelper::operator()(int) (null)
;; enabled by -tree-original

return <retval> = ((struct __cudaOccupancyB2DHelper *) this)->n;


;; Function int vprintf(const char*, __va_list_tag*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = vfprintf (stdout, __fmt, __arg)>>;


;; Function int getchar() (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = _IO_getc (stdin)>>;


;; Function int fgetc_unlocked(FILE*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ >>;


;; Function int getc_unlocked(FILE*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ >>;


;; Function int getchar_unlocked() (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ >>;


;; Function int putchar(int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = _IO_putc (__c, stdout)>>;


;; Function int fputc_unlocked(int, FILE*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c)>>;


;; Function int putc_unlocked(int, FILE*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c)>>;


;; Function int putchar_unlocked(int) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c)>>;


;; Function __ssize_t getline(char**, size_t*, FILE*) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __getdelim (__lineptr, __n, 10, __stream)>>;


;; Function int feof_unlocked(FILE*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (__stream->_flags & 16) != 0
   >>>;


;; Function int ferror_unlocked(FILE*) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  return <retval> = (__stream->_flags & 32) != 0
   >>>;


;; Function float absVal(float) (null)
;; enabled by -tree-original

if (a < 0.0)
  {
    return <retval> = -a;
  }
else
  {
    return <retval> = a;
  }


;; Function float percentDiff(double, double) (null)
;; enabled by -tree-original

if (<<cleanup_point (double) absVal ((float) val1) < 1.00000000000000002081668171172168513294309377670288085938e-2 && (double) absVal ((float) val2) < 1.00000000000000002081668171172168513294309377670288085938e-2>>)
  {
    return <retval> = 0.0;
  }
else
  {
    <<cleanup_point return <retval> = absVal (absVal ((float) (val1 - val2)) / absVal ((float) (val1 + 9.99999993922529029077850282192230224609375e-9))) * 1.0e+2>>;
  }


;; Function intmax_t strtoimax(const char*, char**, int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __strtol_internal (nptr, endptr, base, 0)>>
   >>>;


;; Function uintmax_t strtoumax(const char*, char**, int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __strtoul_internal (nptr, endptr, base, 0)>>
   >>>;


;; Function intmax_t wcstoimax(const wchar_t*, wchar_t**, int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __wcstol_internal (nptr, endptr, base, 0)>>
   >>>;


;; Function uintmax_t wcstoumax(const wchar_t*, wchar_t**, int) (null)
;; enabled by -tree-original

<<< Unknown tree: eh_spec_block
  <<cleanup_point return <retval> = __wcstoul_internal (nptr, endptr, base, 0)>>
   >>>;


;; Function uint64_t get_time() (null)
;; enabled by -tree-original

{
  struct timespec spec;

    struct timespec spec;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) clock_gettime (1, &spec) >>>>>;
  return <retval> = (long unsigned int) spec.tv_sec * 1000000000 + (long unsigned int) spec.tv_nsec;
}


;; Function void hookomp_timing_start(uint64_t*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*_start = get_time ()) >>>>>;


;; Function void hookomp_timing_stop(uint64_t*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*_stop = get_time ()) >>>>>;


;; Function void hookomp_timing_print(uint64_t, uint64_t) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "%llu", tstop - tstart) >>>>>;


;; Function void hookomp_timing_print_without_dev() (null)
;; enabled by -tree-original

{
  uint64_t total_time = omp_stop - omp_start;
  uint64_t dev_time = ((dev_kernel1_stop - dev_kernel1_start) + (dev_kernel2_stop - dev_kernel2_start)) + (dev_kernel3_stop - dev_kernel3_start);
  uint64_t dt_time = (data_transfer_h2d_stop - data_transfer_h2d_start) + (data_transfer_d2h_stop - data_transfer_d2h_start);

    uint64_t total_time = omp_stop - omp_start;
    uint64_t dev_time = ((dev_kernel1_stop - dev_kernel1_start) + (dev_kernel2_stop - dev_kernel2_start)) + (dev_kernel3_stop - dev_kernel3_start);
    uint64_t dt_time = (data_transfer_h2d_stop - data_transfer_h2d_start) + (data_transfer_d2h_stop - data_transfer_d2h_start);
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "%llu", total_time != 0 ? (total_time - dev_time) - dt_time : total_time) >>>>>;
}


;; Function void hookomp_print_time_results() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "ORIG = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (seq_start, seq_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "OMP_OFF = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (omp_start, omp_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "OMP = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print_without_dev () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "CUDA_KERNEL1 = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (dev_kernel1_start, dev_kernel1_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "CUDA_KERNEL2 = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (dev_kernel2_start, dev_kernel2_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "CUDA_KERNEL3 = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (dev_kernel3_start, dev_kernel3_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "DT_H2D = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (data_transfer_h2d_start, data_transfer_h2d_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "DT_D2H = ") >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_print (data_transfer_d2h_start, data_transfer_d2h_stop) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", WORK_FINISHED_BEFORE_OFFLOAD_DECISION = %d", !reach_offload_decision_point ? 1 : 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", REACH_OFFLOAD_DECISION_POINT = %d", (int) reach_offload_decision_point) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", DECIDED_BY_OFFLOADING = %d", (int) decided_by_offloading) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) ", MADE_THE_OFFLOADING = %d", (int) made_the_offloading) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "\n") >>>>>;


;; Function bool create_target_functions_table(Func****, int, int) (null)
;; enabled by -tree-original

{
  struct Func * * * table;
  bool result = 1;
  int i;
  int j;

    struct Func * * * table;
  <<cleanup_point   bool result = 1;>>;
    int i;
    int j;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Allocating the rows.\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (table = (struct Func * * *) malloc ((long unsigned int) nrows * 8)) >>>>>;
  if (table != 0B)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Allocating the columns.\n") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
      goto <D.66033>;
      <D.66032>:;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(table + (sizetype) ((long unsigned int) i * 8)) = (struct Func * *) malloc ((long unsigned int) ncolumns * 8)) >>>>>;
      if (*(table + (sizetype) ((long unsigned int) i * 8)) != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
          goto <D.66031>;
          <D.66030>:;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(*(table + (sizetype) ((long unsigned int) i * 8)) + (sizetype) ((long unsigned int) j * 8)) = (struct Func *) malloc (48)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(*(table + (sizetype) ((long unsigned int) i * 8)) + (sizetype) ((long unsigned int) j * 8)))->f = 0B) >>>>>;
          <<cleanup_point (void) j++ >>;
          <D.66031>:;
          if (j < ncolumns) goto <D.66030>; else goto <D.66028>;
          <D.66028>:;
        }
      else
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Error in table of target functions allocation (columns).\n") >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = 0) >>>>>;
        }
      <<cleanup_point (void) i++ >>;
      <D.66033>:;
      if (i < nrows) goto <D.66032>; else goto <D.66026>;
      <D.66026>:;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Error in table of target functions allocation (rows).\n") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (result = 0) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Allocating the columns is OK.\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*table_ = table) >>>>>;
  return <retval> = result;
}


;; Function void call_function_ffi_call(Func*) (null)
;; enabled by -tree-original

{
  struct ffi_cif cif;

  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) " In call_function_ffi_call.\n") >>>>>;
    struct ffi_cif cif;
  if (<<cleanup_point ffi_prep_cif (&cif, 2, (unsigned int) ff->nargs, ff->ret_type, ff->arg_types) != 0>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Error ffi_prep_cif.\n") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  exit (1) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  ffi_call (&cif, (void (*<T1993>) (void)) ff->f, ff->ret_value, ff->arg_values) >>>>>;
}


;; Function void init_array(int, int, int, double*, double*, double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;

    int i;
    int j;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*alpha = 3.2412e+4) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*beta = 2.123e+3) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66057>;
  <D.66056>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66055>;
  <D.66054>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(A + (sizetype) ((long unsigned int) i * 32768)))[j] = ((double) i * (double) j) * 2.44140625e-4) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.66055>:;
  if (j < nk) goto <D.66054>; else goto <D.66052>;
  <D.66052>:;
  <<cleanup_point (void) i++ >>;
  <D.66057>:;
  if (i < ni) goto <D.66056>; else goto <D.66050>;
  <D.66050>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66065>;
  <D.66064>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66063>;
  <D.66062>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(B + (sizetype) ((long unsigned int) i * 32768)))[j] = ((double) i * (double) j) * 2.44140625e-4) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.66063>:;
  if (j < nj) goto <D.66062>; else goto <D.66060>;
  <D.66060>:;
  <<cleanup_point (void) i++ >>;
  <D.66065>:;
  if (i < nk) goto <D.66064>; else goto <D.66058>;
  <D.66058>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66073>;
  <D.66072>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66071>;
  <D.66070>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j] = ((double) i * (double) j) * 2.44140625e-4) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.66071>:;
  if (j < nj) goto <D.66070>; else goto <D.66068>;
  <D.66068>:;
  <<cleanup_point (void) i++ >>;
  <D.66073>:;
  if (i < ni) goto <D.66072>; else goto <D.66066>;
  <D.66066>:;
}


;; Function void copy_array(int, int, double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;

    int i;
    int j;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66089>;
  <D.66088>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66087>;
  <D.66086>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C_dest + (sizetype) ((long unsigned int) i * 32768)))[j] = (*(C_source + (sizetype) ((long unsigned int) i * 32768)))[j]) >>>>>;
  <<cleanup_point (void) j++ >>;
  <D.66087>:;
  if (j < nj) goto <D.66086>; else goto <D.66084>;
  <D.66084>:;
  <<cleanup_point (void) i++ >>;
  <D.66089>:;
  if (i < ni) goto <D.66088>; else goto <D.66082>;
  <D.66082>:;
}


;; Function void compareResults(int, int, double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;
  int fail;

    int i;
    int j;
    int fail;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (fail = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66106>;
  <D.66105>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66104>;
  <D.66103>:;
  if (<<cleanup_point (double) percentDiff ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j], (*(C_output + (sizetype) ((long unsigned int) i * 32768)))[j]) > 5.000000000000000277555756156289135105907917022705078125e-2>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fail++  >>>>>;
    }
  <<cleanup_point (void) j++ >>;
  <D.66104>:;
  if (j < nj) goto <D.66103>; else goto <D.66101>;
  <D.66101>:;
  <<cleanup_point (void) i++ >>;
  <D.66106>:;
  if (i < ni) goto <D.66105>; else goto <D.66099>;
  <D.66099>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\n", 5.000000000000000277555756156289135105907917022705078125e-2, fail) >>>>>;
}


;; Function void print_array(int, int, double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;

    int i;
    int j;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66121>;
  <D.66120>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66119>;
  <D.66118>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "%0.2lf ", (*(C + (sizetype) ((long unsigned int) i * 32768)))[j]) >>>>>;
  if ((i * ni + j) % 20 == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "\n") >>>>>;
    }
  <<cleanup_point (void) j++ >>;
  <D.66119>:;
  if (j < nj) goto <D.66118>; else goto <D.66116>;
  <D.66116>:;
  <<cleanup_point (void) i++ >>;
  <D.66121>:;
  if (i < ni) goto <D.66120>; else goto <D.66114>;
  <D.66114>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "\n") >>>>>;
}


;; Function void gemm(int, int, int, double, double, double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;
  int k;

    int i;
    int j;
    int k;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66146>;
  <D.66145>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
  goto <D.66144>;
  <D.66143>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j] = (*(C + (sizetype) ((long unsigned int) i * 32768)))[j] * beta) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (k = 0) >>>>>;
  goto <D.66142>;
  <D.66141>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j] = (*(C + (sizetype) ((long unsigned int) i * 32768)))[j] + ((*(A + (sizetype) ((long unsigned int) i * 32768)))[k] * alpha) * (*(B + (sizetype) ((long unsigned int) k * 32768)))[j]) >>>>>;
  <<cleanup_point (void)  ++k>>;
  <D.66142>:;
  if (k < nk) goto <D.66141>; else goto <D.66139>;
  <D.66139>:;
  <<cleanup_point (void) j++ >>;
  <D.66144>:;
  if (j < nj) goto <D.66143>; else goto <D.66137>;
  <D.66137>:;
  <<cleanup_point (void) i++ >>;
  <D.66146>:;
  if (i < ni) goto <D.66145>; else goto <D.66135>;
  <D.66135>:;
}


;; Function void gemm_original(int, int, int, double, double, double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_start (&seq_start) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gemm (ni, nj, nk, alpha, beta, A, B, C) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_stop (&seq_stop) >>>>>;


;; Function void gemm_omp_kernel(int, int, int, double, double, double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  int i;
  int j;
  int k;

    int i;
    int j;
    int k;
  #pragma omp parallel num_threads(8)
    {
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (current_loop_index = 0) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (num_threads_defined = 8) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q_data_transfer_write = (long long int) (((8 + 8) + 8) * 16777216)) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q_data_transfer_read = (long long int) (8 * 16777216)) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (type_of_data_allocation = 1) >>>>>;
        #pragma omp for schedule(dynamic,64) private(k) private(j)
          {
            
            for (i = 0; i < ni; i++ )
              {
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (j = 0) >>>>>;
                goto <D.66178>;
                <D.66177>:;
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j] = (*(C + (sizetype) ((long unsigned int) i * 32768)))[j] * beta) >>>>>;
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (k = 0) >>>>>;
                goto <D.66176>;
                <D.66175>:;
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) ((*(C + (sizetype) ((long unsigned int) i * 32768)))[j] = (*(C + (sizetype) ((long unsigned int) i * 32768)))[j] + ((*(A + (sizetype) ((long unsigned int) i * 32768)))[k] * alpha) * (*(B + (sizetype) ((long unsigned int) k * 32768)))[j]) >>>>>;
                <<cleanup_point (void)  ++k>>;
                <D.66176>:;
                if (k < nk) goto <D.66175>; else goto <D.66173>;
                <D.66173>:;
                <<cleanup_point (void) j++ >>;
                <D.66178>:;
                if (j < nj) goto <D.66177>; else goto <D.66171>;
                <D.66171>:;
              }
          }
      }
    }
}


;; Function void gemm_omp(int, int, int, double, double, double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_start (&omp_start) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gemm_omp_kernel (ni, nj, nk, alpha, beta, A, B, C_outputFromOMP) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_stop (&omp_stop) >>>>>;


;; Function void GPU_argv_init() (null)
;; enabled by -tree-original

{
  struct cudaDeviceProp deviceProp;

    struct cudaDeviceProp deviceProp;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "GPU init.\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaGetDeviceProperties (&deviceProp, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "setting device %d with name %s\n", 0, (char *) &deviceProp.name) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaSetDevice (0) >>>>>;
}


;; Function void gemm_cuda(int, int, int, double, double, double (*)[4096], double (*)[4096], double (*)[4096], double (*)[4096], double (*)[4096]) (null)
;; enabled by -tree-original

{
  double * A_gpu;
  double * B_gpu;
  double * C_gpu;
  struct dim3 block;
  struct dim3 grid;

  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Calling function gemm_cuda.\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  GPU_argv_init () >>>>>;
    double * A_gpu;
    double * B_gpu;
    double * C_gpu;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMalloc ((void * *) &A_gpu, 8 * 16777216) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMalloc ((void * *) &B_gpu, 8 * 16777216) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMalloc ((void * *) &C_gpu, 8 * 16777216) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_start (&data_transfer_h2d_start) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMemcpy ((void *) A_gpu, (const void *) A, 8 * 16777216, 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMemcpy ((void *) B_gpu, (const void *) B, 8 * 16777216, 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMemcpy ((void *) C_gpu, (const void *) C_inputToGpu, 8 * 16777216, 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_stop (&data_transfer_h2d_stop) >>>>>;
    struct dim3 block;
  <<cleanup_point <<< Unknown tree: expr_stmt
  dim3::dim3 (&block, 32, 8, 1) >>>>>;
    struct dim3 grid;
  <<cleanup_point <<< Unknown tree: expr_stmt
  dim3::dim3 (&grid, (unsigned int) (size_t) std::ceil (4.096e+3 / (float) block.x), (unsigned int) (size_t) std::ceil (4.096e+3 / (float) block.y), 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_start (&dev_kernel1_start) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  if (cudaConfigureCall (TARGET_EXPR <D.66230, grid>, TARGET_EXPR <D.66231, block>, 0, 0B) == 0)
    {
      gemm_cuda_kernel (ni, nj, nk, alpha, beta, A_gpu, B_gpu, C_gpu);
    }
  else
    {
      0
    } >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaThreadSynchronize () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_stop (&dev_kernel1_stop) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_start (&data_transfer_d2h_start) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaMemcpy ((void *) C_outputFromGpu, (const void *) C_gpu, 8 * 16777216, 2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_timing_stop (&data_transfer_d2h_stop) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaFree ((void *) A_gpu) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaFree ((void *) B_gpu) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaFree ((void *) C_gpu) >>>>>;
}


;; Function int main(int, char**) (null)
;; enabled by -tree-original

<<cleanup_point static const char __PRETTY_FUNCTION__[22] = "int main(int, char**)";>>;
{
  int ni = 4096;
  int nj = 4096;
  int nk = 4096;
  double alpha;
  double beta;
  double[4096][4096] * A;
  double[4096][4096] * B;
  double[4096][4096] * C;
  double[4096][4096] * C_outputFromOMP;
  double[4096][4096] * C_inputToGpu;
  double[4096][4096] * C_outputFromGpu;
  int n_params = 10;
  struct Func * ff_0;
  int nloops = 1;
  int ndevices = 2;
  static const char __PRETTY_FUNCTION__[22] = "int main(int, char**)";

  <<cleanup_point   int ni = 4096;>>;
  <<cleanup_point   int nj = 4096;>>;
  <<cleanup_point   int nk = 4096;>>;
    double alpha;
    double beta;
    double[4096][4096] * A;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (A = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
    double[4096][4096] * B;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (B = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
    double[4096][4096] * C;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (C = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
    double[4096][4096] * C_outputFromOMP;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (C_outputFromOMP = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
    double[4096][4096] * C_inputToGpu;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (C_inputToGpu = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
    double[4096][4096] * C_outputFromGpu;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (C_outputFromGpu = (double[4096][4096] *) polybench_alloc_data (16777216, 8)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Preparing alternatives functions.\n") >>>>>;
  <<cleanup_point   int n_params = 10;>>;
    struct Func * ff_0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0 = (struct Func *) malloc (48)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0->arg_types = (struct ffi_type * *) malloc ((long unsigned int) (n_params + 1) * 8)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0->arg_values = (void * *) malloc ((long unsigned int) (n_params + 1) * 8)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0->f = (void *) gemm_cuda) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset ((void *) &ff_0->ret_value, 0, 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0->ret_type = &ffi_type_void) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ff_0->nargs = n_params) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <ff_0->arg_values> = (void *) &ni) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 8) = (void *) &nj) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 16) = (void *) &nk) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 24) = (void *) &alpha) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 32) = (void *) &beta) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 40) = (void *) &A) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 48) = (void *) &B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 56) = (void *) &C) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 64) = (void *) &C_inputToGpu) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 72) = (void *) &C_outputFromGpu) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_values + 80) = 0B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <ff_0->arg_types> = &ffi_type_sint32) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 8) = &ffi_type_sint32) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 16) = &ffi_type_sint32) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 24) = &ffi_type_double) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 32) = &ffi_type_double) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 40) = &ffi_type_pointer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 48) = &ffi_type_pointer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 56) = &ffi_type_pointer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 64) = &ffi_type_pointer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 72) = &ffi_type_pointer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(ff_0->arg_types + 80) = 0B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Creating table of target functions.\n") >>>>>;
  <<cleanup_point   int nloops = 1;>>;
  <<cleanup_point   int ndevices = 2;>>;
  if (<<cleanup_point create_target_functions_table (&table, nloops, ndevices)>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  if (table == 0B)
    {
      __assert_fail ((const char *) "table != __null", (const char *) "gemm.cu", 402, (const char *) &__PRETTY_FUNCTION__);
    }
  else
    {
      0
    } >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Declaring function in 0,1.\n") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <*(*NON_LVALUE_EXPR <table> + 8)> = *(const struct Func &) (const struct Func *) NON_LVALUE_EXPR <ff_0>) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (TablePointerFunctions = table) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  if (TablePointerFunctions == 0B)
    {
      __assert_fail ((const char *) "TablePointerFunctions != __null", (const char *) "gemm.cu", 408, (const char *) &__PRETTY_FUNCTION__);
    }
  else
    {
      0
    } >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Calling init_array.\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  init_array (ni, nj, nk, &alpha, &beta, (double[4096] *) A, (double[4096] *) B, (double[4096] *) C) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  copy_array (ni, nj, (double[4096] *) C, (double[4096] *) C_outputFromOMP) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  copy_array (ni, nj, (double[4096] *) C, (double[4096] *) C_outputFromGpu) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Calling gemm_omp:\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gemm_omp (ni, nj, nk, alpha, beta, (double[4096] *) A, (double[4096] *) B, (double[4096] *) C_outputFromOMP) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stdout, (const char *) "version = OMP+OFF, num_threads = %d, NI = %d, NJ = %d, NK = %d, ", 8, 4096, 4096, 4096) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  hookomp_print_time_results () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Calling compareResults(original, omp).\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  compareResults (ni, nj, (double[4096] *) C, (double[4096] *) C_outputFromOMP) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "Calling compareResults(original, cuda).\n") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  compareResults (ni, nj, (double[4096] *) C, (double[4096] *) C_outputFromGpu) >>>>>;
  if (argc > 42 && (unsigned char) *(const unsigned char * {ref-all}) *NON_LVALUE_EXPR <argv> == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  print_array (ni, nj, (double[4096] *) C_outputFromGpu) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) A) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) B) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) C) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) C_outputFromOMP) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) C_outputFromGpu) >>>>>;
  return <retval> = 0;
}
return <retval> = 0;


;; Function double rtclock() (null)
;; enabled by -tree-original

{
  struct timeval Tp;
  int stat;

    struct timeval Tp;
    int stat;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (stat = gettimeofday (&Tp, 0B)) >>>>>;
  if (stat != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "Error return from gettimeofday: %d", stat) >>>>>;
    }
  return <retval> = (double) Tp.tv_sec + (double) Tp.tv_usec * 9.99999999999999954748111825886258685613938723690807819366e-7;
}


;; Function void polybench_flush_cache() (null)
;; enabled by -tree-original

{
  int cs = (int) (33556480 / 8);
  double * flush;
  int i;
  double tmp = 0.0;
  static const char __PRETTY_FUNCTION__[29] = "void polybench_flush_cache()";

  <<cleanup_point   static const char __PRETTY_FUNCTION__[29] = "void polybench_flush_cache()";>>;
    int cs = (int) (33556480 / 8);
    double * flush;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (flush = (double *) calloc ((size_t) cs, 8)) >>>>>;
    int i;
  <<cleanup_point   double tmp = 0.0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  goto <D.66480>;
  <D.66479>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmp = *(flush + (sizetype) ((long unsigned int) i * 8)) + tmp) >>>>>;
  <<cleanup_point (void) i++ >>;
  <D.66480>:;
  if (i < cs) goto <D.66479>; else goto <D.66477>;
  <D.66477>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  if (tmp <= 1.0e+1)
    {
      0
    }
  else
    {
      __assert_fail ((const char *) "tmp <= 10.0", (const char *) "../../../utilities/polybench.c", 96, (const char *) &__PRETTY_FUNCTION__);
    } >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  free ((void *) flush) >>>>>;
}


;; Function void polybench_prepare_instruments() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  polybench_flush_cache () >>>>>;


;; Function void polybench_timer_start() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  polybench_prepare_instruments () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (polybench_t_start = rtclock ()) >>>>>;


;; Function void polybench_timer_stop() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (polybench_t_end = rtclock ()) >>>>>;


;; Function void polybench_timer_print() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "%0.6f\n", polybench_t_end - polybench_t_start) >>>>>;


;; Function void* xmalloc(size_t) (null)
;; enabled by -tree-original

{
  void * newA = 0B;
  int ret;

  <<cleanup_point   void * newA = 0B;>>;
    int ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = posix_memalign (&newA, 32, num)) >>>>>;
  if (newA == 0B || ret != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (stderr, (const char *) "[PolyBench] posix_memalign: cannot allocate memory") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  exit (1) >>>>>;
    }
  return <retval> = newA;
}


;; Function void* polybench_alloc_data(long long unsigned int, int) (null)
;; enabled by -tree-original

{
  size_t val = (size_t) n;
  void * ret;

    size_t val = (size_t) n;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (val = (size_t) elt_size * val) >>>>>;
    void * ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = xmalloc (val)) >>>>>;
  return <retval> = ret;
}


;; Function void ____nv_dummy_param_ref(void*) (null)
;; enabled by -tree-original

{
  static volatile void * * __ref;

    static volatile void * * __ref;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ref = (volatile void * *) param) >>>>>;
}


;; Function void __cudaUnregisterBinaryUtil() (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  ____nv_dummy_param_ref ((void *) &__cudaFatCubinHandle) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __cudaUnregisterFatBinary (__cudaFatCubinHandle) >>>>>;


;; Function char __nv_init_managed_rt_with_module(void**) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = __cudaInitModule (handle)>>;


;; Function double rsqrt(double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = 1.0e+0 / sqrt (a)>>;


;; Function double rcbrt(double) (null)
;; enabled by -tree-original

{
  double s;
  double t;

    double s;
    double t;
  if (__isnan (a) != 0)
    {
      return <retval> = a * 2.0e+0;
    }
  if (a == 0.0 || __isinf (a) != 0)
    {
      return <retval> = 1.0e+0 / a;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (s = ABS_EXPR <a>) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = exp2 (log2 (s) * -3.33333333333333314829616256247390992939472198486328125e-1)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = ((t * t) * (-NON_LVALUE_EXPR <s> * t) + 1.0e+0) * (t * 3.33333333333333314829616256247390992939472198486328125e-1) + t) >>>>>;
  if (__signbit (a) != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = -NON_LVALUE_EXPR <t>) >>>>>;
    }
  return <retval> = t;
}


;; Function double sinpi(double) (null)
;; enabled by -tree-original

{
  int n;

    int n;
  if (__isnan (a) != 0)
    {
      return <retval> = a * 2.0e+0;
    }
  if (a == 0.0 || __isinf (a) != 0)
    {
      return <retval> = sin (a);
    }
  if (floor (a) == a)
    {
      return <retval> = ((a / 1.00000000000000001097906362944045541740492309677311846337e+308) / 1.00000000000000001097906362944045541740492309677311846337e+308) / 1.00000000000000001097906362944045541740492309677311846337e+308;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = remquo (a, 5.0e-1, &n)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = a * 3.141592653589793115997963468544185161590576171875e+0) >>>>>;
  if ((n & 1) != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = cos (a)) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = sin (a)) >>>>>;
    }
  if ((n & 2) != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = -NON_LVALUE_EXPR <a>) >>>>>;
    }
  return <retval> = a;
}


;; Function double cospi(double) (null)
;; enabled by -tree-original

{
  int n;

    int n;
  if (__isnan (a) != 0)
    {
      return <retval> = a * 2.0e+0;
    }
  if (__isinf (a) != 0)
    {
      return <retval> = cos (a);
    }
  if (ABS_EXPR <a> > 9.007199254740992e+15)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = 0.0) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = remquo (a, 5.0e-1, &n)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = a * 3.141592653589793115997963468544185161590576171875e+0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) n++  >>>>>;
  if ((n & 1) != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = cos (a)) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = sin (a)) >>>>>;
    }
  if ((n & 2) != 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = -NON_LVALUE_EXPR <a>) >>>>>;
    }
  if (a == 0.0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = ABS_EXPR <a>) >>>>>;
    }
  return <retval> = a;
}


;; Function void sincospi(double, double*, double*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*sptr = sinpi (a)) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*cptr = cospi (a)) >>>>>;


;; Function double erfinv(double) (null)
;; enabled by -tree-original

{
  double p;
  double q;
  double t;
  double fa;
  typedef union ._105 ._105;
  volatile union ._105 cvt;

    double p;
    double q;
    double t;
    double fa;
    volatile union ._105 cvt;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (fa = ABS_EXPR <a>) >>>>>;
  if (fa >= 1.0e+0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cvt.l = 18444492273895866368) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = (double) cvt.d) >>>>>;
      if (fa == 1.0e+0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = exp (1.0e+3) * a) >>>>>;
        }
    }
  else
    {
      if (fa >= 9.375e-1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = log1p (-NON_LVALUE_EXPR <fa>)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = 1.0e+0 / sqrt (-NON_LVALUE_EXPR <t>)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = 2.78340103537470014843924204228642338421195745468139648438e-3) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 8.603009752628025808007805608212947845458984375e-1) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 2.137121499726551743236768743372522294521331787109375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.15985196011320912390374360256828367710113525390625e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.57804025690859983654945608577691018581390380859375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.5335297523989890322582141379825770854949951171875e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.4839207139657524248121944765443913638591766357421875e-1) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 5.3644861147153645453133918863386497832834720611572265625e-2) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.38367098771260971928898086957815394271165132522583007812e-3) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.38585181134967175666308780712654424860375002026557922363e-4) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.17383525099916669116764493530080670780080254189670085907e-6) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = t + 2.285998127242290678395875147543847560882568359375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.3859045256449551430932842777110636234283447265625e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.663296034873663842290625325404107570648193359375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 3.98466081846717568026861044927500188350677490234375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.6068377709719017243372718439786694943904876708984375e+0) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 3.560908730590026660678404368809424340724945068359375e-1) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 5.3963550303200817637172548302260111086070537567138671875e-2) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.38734240227069312301200199044615146704018115997314453125e-3) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.38587621655322454101294527006871248886454850435256958008e-4) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.17383138723977779418789109400211856382156838662922382355e-6) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = p / (q * t)) >>>>>;
          if (a < 0.0)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = -NON_LVALUE_EXPR <t>) >>>>>;
            }
        }
      else
        {
          if (fa >= 7.5e-1)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = a * a - 8.7890625e-1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = 2.148918500730706282464410605825833044946193695068359375e-1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 6.420007150720945077182477689348161220550537109375e+0) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 2.9631331505876307375046962988562881946563720703125e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 4.7644367129787184467204497195780277252197265625e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.48100577493574974141665734350681304931640625e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 1.29541989806467707779802367440424859523773193359375e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 2.534938922071489297849211652646772563457489013671875e+0) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 2.475824236282335444325752860095235519111156463623046875e-1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 9.4897362808681086365769630219801911152899265289306640625e-3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = t - 1.28313838339532271248799588647671043872833251953125e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.14099917784288891198229975998401641845703125e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 5.371537344886214526695766835473477840423583984375e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 3.388017677959513918040101998485624790191650390625e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 1.13153606242380551094584006932564079761505126953125e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 2.03692950472163492037225296371616423130035400390625e+0) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 1.861165062737217823496393975801765918731689453125e-1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 6.7544512778850950007747400150037719868123531341552734375e-3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p / q) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = a * p) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = a * a - 5.625e-1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = -2.38862401043087544394438737072050571441650390625e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.5560204272689128401907510124146938323974609375e+2) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 2.29774671766071469392045401036739349365234375e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.6631433533434328637667931616306304931640625e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 4.3799652308386930599226616322994232177734375e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.900715359052813482776400633156299591064453125e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t - 3.0786872642313693404503283090889453887939453125e+2) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = t - 8.32883279019365687645404250361025333404541015625e+1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 9.27413191609353134481352753937244415283203125e+2) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 3.50889763838772660164977423846721649169921875e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 5.9039348134843667139648459851741790771484375e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 4.8481635430048872876795940101146697998046875e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.899776918645305840982473455369472503662109375e+3) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t - 2.8386514725366623679292388260364532470703125e+2) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p / q) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = a * p) >>>>>;
            }
        }
    }
  return <retval> = t;
}


;; Function double erfcinv(double) (null)
;; enabled by -tree-original

{
  double t;
  typedef union ._106 ._106;
  volatile union ._106 cvt;

    double t;
    volatile union ._106 cvt;
  if (__isnan (a) != 0)
    {
      return <retval> = a * 2.0e+0;
    }
  {
    if (a <= 0.0)
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cvt.l = 18444492273895866368) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = (double) cvt.d) >>>>>;
        if (a == 0.0)
          {
            <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = (1.0e+0 - a) * exp (1.0e+3)) >>>>>;
          }
      }
    else
      {
        {
          {
            if (a >= 6.25e-2)
              {
                <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = erfinv (1.0e+0 - a)) >>>>>;
              }
            else
              {
                {
                  {
                    if (a >= 1.00000000000000001999189980260288361964776078853415942018e-100)
                      {
                        {
                          double p;
                          double q;

                                                    double p;
                                                    double q;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = log (a)) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = 1.0e+0 / sqrt (-NON_LVALUE_EXPR <t>)) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = 2.78340103537470014843924204228642338421195745468139648438e-3) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 8.603009752628025808007805608212947845458984375e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 2.137121499726551743236768743372522294521331787109375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.15985196011320912390374360256828367710113525390625e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.57804025690859983654945608577691018581390380859375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.5335297523989890322582141379825770854949951171875e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 3.4839207139657524248121944765443913638591766357421875e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 5.3644861147153645453133918863386497832834720611572265625e-2) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.38367098771260971928898086957815394271165132522583007812e-3) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.38585181134967175666308780712654424860375002026557922363e-4) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.17383525099916669116764493530080670780080254189670085907e-6) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = t + 2.285998127242290678395875147543847560882568359375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.3859045256449551430932842777110636234283447265625e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.663296034873663842290625325404107570648193359375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 3.98466081846717568026861044927500188350677490234375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.6068377709719017243372718439786694943904876708984375e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 3.560908730590026660678404368809424340724945068359375e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 5.3963550303200817637172548302260111086070537567138671875e-2) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.38734240227069312301200199044615146704018115997314453125e-3) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.38587621655322454101294527006871248886454850435256958008e-4) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.17383138723977779418789109400211856382156838662922382355e-6) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = p / (q * t)) >>>>>;
                        }
                      }
                    else
                      {
                        {
                          double p;
                          double q;

                                                    double p;
                                                    double q;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = log (a)) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = 1.0e+0 / sqrt (-NON_LVALUE_EXPR <t>)) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = 6.995299060705815197280799111467786133289337158203125e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.950762028758056931820874524419195950031280517578125e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 8.2810030904462694767431685249903239309787750244140625e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.1279046353630280130619922829282586462795734405517578125e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 6.05379147391621897505986638066133309621363878250122070312e-3) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.37143295696651298844898070328213179891463369131088256836e-4) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 1.2964481560643198437544855103342733571025746641680598259e-6) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.61560063213453313854474610090396213823993321057059802115e-9) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (p = p * t + 4.53446895632094019597631349682075410124915126885980498628e-12) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = t + 1.5771922386662040604932144560734741389751434326171875e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 2.123824208745499486639118913444690406322479248046875e+0) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 8.4001814918178041580176795832812786102294921875e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.131188933435578192199244540461222641170024871826171875e-1) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 6.057483055009714456584646313785924576222896575927734375e-3) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.37158919883502043246883972393845851911464706063270568848e-4) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 1.2964671850944982456295189940376211268358019879087805748e-6) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.61560176009335896185491711287036953326179400391993112862e-9) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (q = q * t + 4.53446873770882053610608839685854509933549127964624858578e-12) >>>>>;
                          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t = p / (q * t)) >>>>>;
                        }
                      }
                  }
                }
              }
          }
        }
      }
  }
  return <retval> = t;
}


;; Function double normcdfinv(double) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = erfcinv (a * 2.0e+0) * -1.4142135623730951454746218587388284504413604736328125e+0>>;


;; Function double normcdf(double) (null)
;; enabled by -tree-original

{
  double ah;
  double al;
  double t1;
  double t2;
  double u1;
  double u2;
  double v1;
  double v2;
  double z;

    double ah;
    double al;
    double t1;
    double t2;
    double u1;
    double u2;
    double v1;
    double v2;
    double z;
  if (ABS_EXPR <a> > 3.85e+1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (a = copysign (3.85e+1, a)) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ah = a * 1.34217729e+8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (u1 = (a - ah) + ah) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (u2 = a - u1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (v1 = -7.0710678398609161376953125e-1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (v2 = 2.79954404103222032063058577477931976318359375e-9) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = a * -7.0710678118654757273731092936941422522068023681640625e-1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = a * 4.83364665672645672552734986488347382506490835271488470948e-17 + t2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ah = t1 + t2) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (z = erfc (ah)) >>>>>;
  if (a < -1.0e+0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (al = (t1 - ah) + t2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = (ah * -2.0e+0) * z) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (z = t1 * al + z) >>>>>;
    }
  return <retval> = z * 5.0e-1;
}


;; Function double erfcx(double) (null)
;; enabled by -tree-original

{
  double x;
  double t1;
  double t2;
  double t3;

    double x;
    double t1;
    double t2;
    double t3;
  if (__isnan (a) != 0)
    {
      return <retval> = a * 2.0e+0;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (x = ABS_EXPR <a>) >>>>>;
  if (x < 3.2e+1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = x - 4.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = x + 4.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = t1 / t2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = -3.56026948268174002918514718129031591808963952416888787411e-10) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 9.72391225914472741792489484183303893871652689995244145393e-9) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 8.93502248516491192910982447033391151691716913774143904448e-9) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 1.04044309216254841268750423993044718073974763683509081602e-7) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 5.88066985853412593724221337550955857054191255883779376745e-8) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 8.21474149291169083368473191608671868380042724311351776123e-7) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 3.09564098533062414146324473410154531904936447972431778908e-7) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 5.70878718443256487374186727845604139019997091963887214661e-6) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 1.12317874376000845530396143878704151575220748782157897949e-5) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 2.43995588572001897466334785491426373482681810855865478516e-5) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 1.50625571695717881074566557586535964219365268945693969727e-4) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 1.99256376847861541631162785037645335250999778509140014648e-4) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 7.57774291827858332247502826106710926978848874568939208984e-4) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 5.0319698792599572290118459250152227468788623809814453125e-3) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 1.61977338959532167483867937107788748107850551605224609375e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 3.7167515553018733165391296324742143042385578155517578125e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 6.6330365827532433709023962364881299436092376708984375e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 9.3732834997115543895773726035258732736110687255859375e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 1.010390660355567626904615963212563656270503997802734375e-1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 6.80970542547351398443566949936212040483951568603515625e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 1.53796521026054282266226636011197115294635295867919921875e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 - 1.396211168405629143851598428227589465677738189697265625e-1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2 + 1.2329951186255525552581957526854239404201507568359375e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = x * 2.0e+0 + 1.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 / t2) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = 1.0e+0 / x) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t3 = t2 * t2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = -2.953125e+1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t3 + 6.5625e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t3 - 1.875e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t3 + 7.5e-1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t3 - 5.0e-1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t3 + 1.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = t2 * 5.6418958354775627928034964497783221304416656494140625e-1) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t1 * t2) >>>>>;
    }
  if (a < 0.0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t2 = (double) (int) (x * 1.6e+1) * 6.25e-2) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t3 = (x - t2) * (x + t2)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t3 = exp (t2 * t2) * exp (t3)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t3 = t3 * 2.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (t1 = t3 - t1) >>>>>;
    }
  return <retval> = t1;
}


;; Function float rsqrtf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) rsqrt ((double) a)>>;


;; Function float rcbrtf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) rcbrt ((double) a)>>;


;; Function float sinpif(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) sinpi ((double) a)>>;


;; Function float cospif(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) cospi ((double) a)>>;


;; Function void sincospif(float, float*, float*) (null)
;; enabled by -tree-original

{
  double s;
  double c;

    double s;
    double c;
  <<cleanup_point <<< Unknown tree: expr_stmt
  sincospi ((double) a, &s, &c) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*sptr = (float) s) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*cptr = (float) c) >>>>>;
}


;; Function float erfinvf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) erfinv ((double) a)>>;


;; Function float erfcinvf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) erfcinv ((double) a)>>;


;; Function float normcdfinvf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) normcdfinv ((double) a)>>;


;; Function float normcdff(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) normcdf ((double) a)>>;


;; Function float erfcxf(float) (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = (float) erfcx ((double) a)>>;


;; Function void __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_(int, int, int, double, double, double*, double*, double*) (null)
;; enabled by -tree-original

{
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par0, 4, 0) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par1, 4, 4) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par2, 4, 8) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par3, 8, 16) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par4, 8, 24) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par5, 8, 32) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par6, 8, 40) != 0>>)
    {
      return;
    }
  if (<<cleanup_point cudaSetupArgument ((const void *) &__par7, 8, 48) != 0>>)
    {
      return;
    }
  {
    static volatile char * __f;

        static volatile char * __f;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__f = (volatile char *) gemm_cuda_kernel) >>>>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) cudaLaunch<char> ((char *) gemm_cuda_kernel) >>>>>;
  }
}


;; Function void gemm_cuda_kernel(int, int, int, double, double, double*, double*, double*) (null)
;; enabled by -tree-original

<<cleanup_point <<< Unknown tree: expr_stmt
  __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_ (__cuda_0, __cuda_1, __cuda_2, __cuda_3, __cuda_4, __cuda_5, __cuda_6, __cuda_7) >>>>>;


;; Function void __nv_cudaEntityRegisterCallback(void**) (null)
;; enabled by -tree-original

{
  {
    static volatile void * * __ref;

        static volatile void * * __ref;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ref = (volatile void * *) __T26) >>>>>;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  __nv_save_fatbinhandle_for_managed_rt (__T26) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __cudaRegisterFunction (__T26, (const char *) gemm_cuda_kernel, (char *) (const char *) "_Z16gemm_cuda_kerneliiiddPdS_S_", (const char *) "_Z16gemm_cuda_kerneliiiddPdS_S_", -1, 0B, 0B, 0B, 0B, 0B) >>>>>;
}


;; Function void __sti____cudaRegisterAll_39_tmpxft_000005b1_00000000_7_gemm_cpp1_ii_132e4611() (null)
;; enabled by -tree-original

{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__cudaFatCubinHandle = __cudaRegisterFatBinary ((void *) &__fatDeviceText)) >>>>>;
  {
    void (*<T73ba>) (void * *) callback_fp = __nv_cudaEntityRegisterCallback;

    <<cleanup_point     void (*<T73ba>) (void * *) callback_fp = __nv_cudaEntityRegisterCallback;>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  callback_fp (__cudaFatCubinHandle) >>>>>;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) atexit (__cudaUnregisterBinaryUtil) >>>>>;
}


;; Function cudaError_t cudaLaunch(T*) [with T = char; cudaError_t = cudaError] (null)
;; enabled by -tree-original

<<cleanup_point return <retval> = cudaLaunch ((const void *) func)>>;

