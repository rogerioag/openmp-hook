
;; Function void __nv_save_fatbinhandle_for_managed_rt(void**) (_ZL37__nv_save_fatbinhandle_for_managed_rtPPv, funcdef_no=0, decl_uid=2204, cgraph_uid=0)

void __nv_save_fatbinhandle_for_managed_rt(void**) (void * * in)
{
  <bb 2>:
  __nv_fatbinhandle_for_managed_rt = in;
  return;

}



;; Function void ____nv_dummy_param_ref(void*) (_ZL22____nv_dummy_param_refPv, funcdef_no=3160, decl_uid=48427, cgraph_uid=3021)

void ____nv_dummy_param_ref(void*) (void * param)
{
  static volatile void * * __ref;

  <bb 2>:
  __ref = param;
  return;

}



;; Function void print_array(int, int, double (*)[1024]) (_ZL11print_arrayiiPA1024_d, funcdef_no=3143, decl_uid=48028, cgraph_uid=3005)

void print_array(int, int, double (*)[1024]) (int ni, int nj, double[1024] * C)
{
  int j;
  int i;
  int D.49021;
  int D.49020;
  int D.49019;
  struct _IO_FILE * stderr.34;
  double D.49017;
  double[1024] * D.49016;
  long unsigned int D.49015;
  long unsigned int D.49014;

  <bb 2>:
  i = 0;
  goto <bb 9>;

  <bb 3>:
  j = 0;
  goto <bb 7>;

  <bb 4>:
  D.49014 = (long unsigned int) i;
  D.49015 = D.49014 * 8192;
  D.49016 = C + D.49015;
  D.49017 = *D.49016[j];
  stderr.34 = stderr;
  fprintf (stderr.34, "%0.2lf ", D.49017);
  D.49019 = i * ni;
  D.49020 = D.49019 + j;
  D.49021 = D.49020 % 20;
  if (D.49021 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  stderr.34 = stderr;
  __builtin_fputc (10, stderr.34);

  <bb 6>:
  j = j + 1;

  <bb 7>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 8>:
  i = i + 1;

  <bb 9>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  stderr.34 = stderr;
  __builtin_fputc (10, stderr.34);
  return;

}



;; Function double rtclock() (_ZL7rtclockv, funcdef_no=3151, decl_uid=48387, cgraph_uid=3013)

double rtclock() ()
{
  int stat;
  struct timeval Tp;
  double D.49044;
  double D.49043;
  long int D.49042;
  double D.49041;
  long int D.49040;
  double D.49039;

  <bb 2>:
  stat = gettimeofday (&Tp, 0B);
  if (stat != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  printf ("Error return from gettimeofday: %d", stat);

  <bb 4>:
  D.49040 = Tp.tv_sec;
  D.49041 = (double) D.49040;
  D.49042 = Tp.tv_usec;
  D.49043 = (double) D.49042;
  D.49044 = D.49043 * 9.99999999999999954748111825886258685613938723690807819366e-7;
  D.49039 = D.49041 + D.49044;
  Tp = {CLOBBER};
  return D.49039;

<L5>:
  Tp = {CLOBBER};
  resx 1

}



;; Function void* xmalloc(size_t) (_ZL7xmallocm, funcdef_no=3157, decl_uid=48411, cgraph_uid=3019)

void* xmalloc(size_t) (size_t num)
{
  int ret;
  void * newA;
  void * D.49062;
  struct _IO_FILE * stderr.40;
  void * newA.39;

  <bb 2>:
  newA = 0B;
  ret = posix_memalign (&newA, 32, num);
  newA.39 = newA;
  if (newA.39 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  if (ret != 0)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  stderr.40 = stderr;
  __builtin_fwrite ("[PolyBench] posix_memalign: cannot allocate memory", 1, 50, stderr.40);

  <bb 5>:
  exit (1);

  <bb 6>:
  D.49062 = newA;
  newA = {CLOBBER};
  return D.49062;

<L5>:
  newA = {CLOBBER};
  resx 1

}



;; Function void __cudaUnregisterBinaryUtil() (_ZL26__cudaUnregisterBinaryUtilv, funcdef_no=3161, decl_uid=48491, cgraph_uid=3022)

void __cudaUnregisterBinaryUtil() ()
{
  void * * __cudaFatCubinHandle.51;

  <bb 2>:
  ____nv_dummy_param_ref (&__cudaFatCubinHandle);
  __cudaFatCubinHandle.51 = __cudaFatCubinHandle;
  __cudaUnregisterFatBinary (__cudaFatCubinHandle.51);
  return;

}



;; Function void __nv_cudaEntityRegisterCallback(void**) (_ZL31__nv_cudaEntityRegisterCallbackPPv, funcdef_no=3193, decl_uid=48690, cgraph_uid=3054)

void __nv_cudaEntityRegisterCallback(void**) (void * * __T26)
{
  static volatile void * * __ref;

  <bb 2>:
  __ref = __T26;
  __nv_save_fatbinhandle_for_managed_rt (__T26);
  __cudaRegisterFunction (__T26, gemm_cuda_kernel, "_Z16gemm_cuda_kerneliiiddPdS_S_", "_Z16gemm_cuda_kerneliiiddPdS_S_", -1, 0B, 0B, 0B, 0B, 0B);
  return;

}



;; Function dim3::dim3(unsigned int, unsigned int, unsigned int) (_ZN4dim3C2Ejjj, funcdef_no=3, decl_uid=3003, cgraph_uid=3)

dim3::dim3(unsigned int, unsigned int, unsigned int) (struct dim3 * const this, unsigned int vx, unsigned int vy, unsigned int vz)
{
  <bb 2>:
  this->x = vx;
  this->y = vy;
  this->z = vz;
  return;

}



;; Function float std::ceil(float) (_ZSt4ceilf, funcdef_no=139, decl_uid=8260, cgraph_uid=131)

float std::ceil(float) (float __x)
{
  float D.48937;

  <bb 2>:
  D.48937 = __builtin_ceilf (__x);
  return D.48937;

}



;; Function float absVal(float) (_Z6absValf, funcdef_no=3133, decl_uid=47325, cgraph_uid=2995)

float absVal(float) (float a)
{
  float D.48752;

  <bb 2>:
  if (a < 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  D.48752 = -a;
  goto <bb 5>;

  <bb 4>:
  D.48752 = a;

  <bb 5>:
  return D.48752;

}



;; Function float percentDiff(double, double) (_Z11percentDiffdd, funcdef_no=3134, decl_uid=47329, cgraph_uid=2996)

float percentDiff(double, double) (double val1, double val2)
{
  float D.48776;
  float D.48775;
  float D.48774;
  float D.48773;
  double D.48772;
  float D.48771;
  float D.48770;
  double D.48769;
  float D.48768;
  double D.48764;
  float D.48763;
  float D.48762;
  double D.48760;
  float D.48759;
  float D.48758;
  bool iftmp.1;
  bool retval.0;

  <bb 2>:
  D.48758 = (float) val1;
  D.48759 = absVal (D.48758);
  D.48760 = (double) D.48759;
  if (D.48760 < 1.00000000000000002081668171172168513294309377670288085938e-2)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  D.48762 = (float) val2;
  D.48763 = absVal (D.48762);
  D.48764 = (double) D.48763;
  if (D.48764 < 1.00000000000000002081668171172168513294309377670288085938e-2)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.1 = 1;
  goto <bb 6>;

  <bb 5>:
  iftmp.1 = 0;

  <bb 6>:
  retval.0 = iftmp.1;
  if (retval.0 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  D.48768 = 0.0;
  goto <bb 9>;

  <bb 8>:
  D.48769 = val1 - val2;
  D.48770 = (float) D.48769;
  D.48771 = absVal (D.48770);
  D.48772 = val1 + 9.99999993922529029077850282192230224609375e-9;
  D.48773 = (float) D.48772;
  D.48774 = absVal (D.48773);
  D.48775 = D.48771 / D.48774;
  D.48776 = absVal (D.48775);
  D.48768 = D.48776 * 1.0e+2;

  <bb 9>:
  return D.48768;

}



;; Function bool create_target_functions_table(Func****, int, int) (_Z29create_target_functions_tablePPPP4Funcii, funcdef_no=3139, decl_uid=47954, cgraph_uid=3001)

bool create_target_functions_table(Func****, int, int) (struct Func * * * * table_, int nrows, int ncolumns)
{
  int j;
  int i;
  bool result;
  struct Func * * * table;
  bool D.48798;
  void * D.48795;
  struct Func * * D.48794;
  long unsigned int D.48793;
  long unsigned int D.48792;
  struct Func * * D.48789;
  void * D.48788;
  long unsigned int D.48787;
  long unsigned int D.48786;
  struct Func * * * D.48785;
  long unsigned int D.48784;
  long unsigned int D.48783;
  long unsigned int D.48780;
  long unsigned int D.48779;
  struct _IO_FILE * stderr.2;

  <bb 2>:
  result = 1;
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the rows.\n", 1, 21, stderr.2);
  D.48779 = (long unsigned int) nrows;
  D.48780 = D.48779 * 8;
  table = malloc (D.48780);
  if (table != 0B)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 3>:
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the columns.\n", 1, 24, stderr.2);
  i = 0;
  goto <bb 10>;

  <bb 4>:
  D.48783 = (long unsigned int) i;
  D.48784 = D.48783 * 8;
  D.48785 = table + D.48784;
  D.48786 = (long unsigned int) ncolumns;
  D.48787 = D.48786 * 8;
  D.48788 = malloc (D.48787);
  *D.48785 = D.48788;
  D.48783 = (long unsigned int) i;
  D.48784 = D.48783 * 8;
  D.48785 = table + D.48784;
  D.48789 = *D.48785;
  if (D.48789 != 0B)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  j = 0;
  goto <bb 7>;

  <bb 6>:
  D.48783 = (long unsigned int) i;
  D.48784 = D.48783 * 8;
  D.48785 = table + D.48784;
  D.48789 = *D.48785;
  D.48792 = (long unsigned int) j;
  D.48793 = D.48792 * 8;
  D.48794 = D.48789 + D.48793;
  D.48795 = malloc (48);
  *D.48794 = D.48795;
  j = j + 1;

  <bb 7>:
  if (j < ncolumns)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 8>:
  stderr.2 = stderr;
  __builtin_fwrite ("Error in table of target functions allocation (columns).\n", 1, 57, stderr.2);
  result = 0;

  <bb 9>:
  i = i + 1;

  <bb 10>:
  if (i < nrows)
    goto <bb 4>;
  else
    goto <bb 12>;

  <bb 11>:
  stderr.2 = stderr;
  __builtin_fwrite ("Error in table of target functions allocation (rows).\n", 1, 54, stderr.2);
  result = 0;

  <bb 12>:
  stderr.2 = stderr;
  __builtin_fwrite ("Allocating the columns is OK.\n", 1, 30, stderr.2);
  *table_ = table;
  D.48798 = result;
  return D.48798;

}



;; Function void call_function_ffi_call(Func*) (_Z22call_function_ffi_callP4Func, funcdef_no=3140, decl_uid=47969, cgraph_uid=3002)

void call_function_ffi_call(Func*) (struct Func * ff)
{
  ffi_status D.48813;
  struct ffi_cif cif;
  void (*<T18c2>) (void) D.48812;
  void * D.48811;
  void * D.48810;
  void * * D.48809;
  ffi_status D.48806;
  unsigned int D.48805;
  int D.48804;
  struct ffi_type * D.48803;
  struct ffi_type * * D.48802;
  bool retval.4;
  struct _IO_FILE * stderr.3;

  <bb 2>:
  stderr.3 = stderr;
  __builtin_fwrite (" In call_function_ffi_call.\n", 1, 28, stderr.3);

  <bb 3>:
  D.48802 = ff->arg_types;
  D.48803 = ff->ret_type;
  D.48804 = ff->nargs;
  D.48805 = (unsigned int) D.48804;
  D.48813 = ffi_prep_cif (&cif, 2, D.48805, D.48803, D.48802);

  <bb 4>:
  D.48806 = D.48813;
  retval.4 = D.48806 != 0;
  if (retval.4 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  stderr.3 = stderr;
  __builtin_fwrite ("Error ffi_prep_cif.\n", 1, 20, stderr.3);

  <bb 6>:
  exit (1);

  <bb 7>:
  D.48809 = ff->arg_values;
  D.48810 = ff->ret_value;
  D.48811 = ff->f;
  D.48812 = (void (*<T18c2>) (void)) D.48811;
  ffi_call (&cif, D.48812, D.48810, D.48809);

  <bb 8>:
  cif = {CLOBBER};
  return;

<L2>:
  cif = {CLOBBER};
  resx 1

}



;; Function void init_array(int, int, int, double*, double*, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z10init_arrayiiiPdS_PA1024_dS1_S1_, funcdef_no=3141, decl_uid=47980, cgraph_uid=3003)

void init_array(int, int, int, double*, double*, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double * alpha, double * beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  int j;
  int i;
  double[1024] * D.48824;
  double[1024] * D.48823;
  double D.48822;
  double D.48821;
  double D.48820;
  double D.48819;
  double[1024] * D.48818;
  long unsigned int D.48817;
  long unsigned int D.48816;

  <bb 2>:
  *alpha = 3.2412e+4;
  *beta = 2.123e+3;
  i = 0;
  goto <bb 7>;

  <bb 3>:
  j = 0;
  goto <bb 5>;

  <bb 4>:
  D.48816 = (long unsigned int) i;
  D.48817 = D.48816 * 8192;
  D.48818 = A + D.48817;
  D.48819 = (double) i;
  D.48820 = (double) j;
  D.48821 = D.48819 * D.48820;
  D.48822 = D.48821 * 9.765625e-4;
  *D.48818[j] = D.48822;
  j = j + 1;

  <bb 5>:
  if (j < nk)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 6>:
  i = i + 1;

  <bb 7>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 8>:
  i = 0;
  goto <bb 13>;

  <bb 9>:
  j = 0;
  goto <bb 11>;

  <bb 10>:
  D.48816 = (long unsigned int) i;
  D.48817 = D.48816 * 8192;
  D.48823 = B + D.48817;
  D.48819 = (double) i;
  D.48820 = (double) j;
  D.48821 = D.48819 * D.48820;
  D.48822 = D.48821 * 9.765625e-4;
  *D.48823[j] = D.48822;
  j = j + 1;

  <bb 11>:
  if (j < nj)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 12>:
  i = i + 1;

  <bb 13>:
  if (i < nk)
    goto <bb 9>;
  else
    goto <bb 14>;

  <bb 14>:
  i = 0;
  goto <bb 19>;

  <bb 15>:
  j = 0;
  goto <bb 17>;

  <bb 16>:
  D.48816 = (long unsigned int) i;
  D.48817 = D.48816 * 8192;
  D.48824 = C + D.48817;
  D.48819 = (double) i;
  D.48820 = (double) j;
  D.48821 = D.48819 * D.48820;
  D.48822 = D.48821 * 9.765625e-4;
  *D.48824[j] = D.48822;
  j = j + 1;

  <bb 17>:
  if (j < nj)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 18>:
  i = i + 1;

  <bb 19>:
  if (i < ni)
    goto <bb 15>;
  else
    goto <bb 20>;

  <bb 20>:
  return;

}



;; Function void compareResults(int, int, double (*)[1024], double (*)[1024]) (_Z14compareResultsiiPA1024_dS0_, funcdef_no=3142, decl_uid=48012, cgraph_uid=3004)

void compareResults(int, int, double (*)[1024], double (*)[1024]) (int ni, int nj, double[1024] * C, double[1024] * C_output)
{
  int fail;
  int j;
  int i;
  double D.48833;
  float D.48832;
  double D.48831;
  double[1024] * D.48830;
  double D.48829;
  double[1024] * D.48828;
  long unsigned int D.48827;
  long unsigned int D.48826;
  bool retval.5;

  <bb 2>:
  fail = 0;
  i = 0;
  goto <bb 9>;

  <bb 3>:
  j = 0;
  goto <bb 7>;

  <bb 4>:
  D.48826 = (long unsigned int) i;
  D.48827 = D.48826 * 8192;
  D.48828 = C_output + D.48827;
  D.48829 = *D.48828[j];
  D.48826 = (long unsigned int) i;
  D.48827 = D.48826 * 8192;
  D.48830 = C + D.48827;
  D.48831 = *D.48830[j];
  D.48832 = percentDiff (D.48831, D.48829);
  D.48833 = (double) D.48832;
  retval.5 = D.48833 > 5.000000000000000277555756156289135105907917022705078125e-2;
  if (retval.5 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  fail = fail + 1;

  <bb 6>:
  j = j + 1;

  <bb 7>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 8>:
  i = i + 1;

  <bb 9>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 10>;

  <bb 10>:
  printf ("Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\n", 5.000000000000000277555756156289135105907917022705078125e-2, fail);
  return;

}



;; Function void gemm(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z4gemmiiiddPA1024_dS0_S0_, funcdef_no=3144, decl_uid=48048, cgraph_uid=3006)

void gemm(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  int k;
  int j;
  int i;
  double D.48850;
  double D.48849;
  double D.48848;
  double[1024] * D.48847;
  long unsigned int D.48846;
  long unsigned int D.48845;
  double D.48844;
  double D.48843;
  double[1024] * D.48842;
  double D.48841;
  double D.48840;
  double[1024] * D.48839;
  long unsigned int D.48838;
  long unsigned int D.48837;

  <bb 2>:
  i = 0;
  goto <bb 10>;

  <bb 3>:
  j = 0;
  goto <bb 8>;

  <bb 4>:
  D.48837 = (long unsigned int) i;
  D.48838 = D.48837 * 8192;
  D.48839 = C + D.48838;
  D.48837 = (long unsigned int) i;
  D.48838 = D.48837 * 8192;
  D.48839 = C + D.48838;
  D.48840 = *D.48839[j];
  D.48841 = D.48840 * beta;
  *D.48839[j] = D.48841;
  k = 0;
  goto <bb 6>;

  <bb 5>:
  D.48837 = (long unsigned int) i;
  D.48838 = D.48837 * 8192;
  D.48839 = C + D.48838;
  D.48837 = (long unsigned int) i;
  D.48838 = D.48837 * 8192;
  D.48839 = C + D.48838;
  D.48840 = *D.48839[j];
  D.48837 = (long unsigned int) i;
  D.48838 = D.48837 * 8192;
  D.48842 = A + D.48838;
  D.48843 = *D.48842[k];
  D.48844 = D.48843 * alpha;
  D.48845 = (long unsigned int) k;
  D.48846 = D.48845 * 8192;
  D.48847 = B + D.48846;
  D.48848 = *D.48847[j];
  D.48849 = D.48844 * D.48848;
  D.48850 = D.48840 + D.48849;
  *D.48839[j] = D.48850;
  k = k + 1;

  <bb 6>:
  if (k < nk)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 7>:
  j = j + 1;

  <bb 8>:
  if (j < nj)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 9>:
  i = i + 1;

  <bb 10>:
  if (i < ni)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 11>:
  return;

}



;; Function void gemm_omp_kernel(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_, funcdef_no=3146, decl_uid=48083, cgraph_uid=3008)


OMP region tree

bb 2: gimple_omp_parallel
    bb 3: gimple_omp_for
    bb 10: GIMPLE_OMP_CONTINUE
    bb 11: GIMPLE_OMP_RETURN
bb 12: GIMPLE_OMP_RETURN

Merging blocks 2 and 17
Merging blocks 2 and 13
void gemm_omp_kernel(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  bool D.49168;
  long int .iend0.71;
  int D.49167;
  long int .istart0.70;
  long int D.49163;
  bool D.49164;
  long int .iend0.69;
  long int .istart0.68;
  int k;
  int j;
  int i;
  int D.48910;
  int k;
  int j;
  int i;
  long long int q_data_transfer_read.7;
  long unsigned int D.48855;
  long long int q_data_transfer_write.6;
  long unsigned int D.48853;
  long unsigned int D.48852;
  long unsigned int D.48851;
  struct .omp_data_s.8 .omp_data_o.9;
  int D.48909;
  int D.48908;
  double[1024] * D.48907;
  double D.48906;
  double[1024] * D.48905;
  double[1024] * D.48904;
  double[1024] * D.48903;
  double D.48902;
  double[1024] * D.48901;
  double[1024] * D.48900;

  <bb 2>:
  current_loop_index = 0;
  D.48851 = 16;
  D.48852 = D.48851 + 8;
  D.48853 = D.48852 * 1048576;
  q_data_transfer_write.6 = (long long int) D.48853;
  q_data_transfer_write = q_data_transfer_write.6;
  D.48855 = 8388608;
  q_data_transfer_read.7 = (long long int) D.48855;
  q_data_transfer_read = q_data_transfer_read.7;
  .omp_data_o.9.alpha = alpha;
  .omp_data_o.9.beta = beta;
  .omp_data_o.9.A = A;
  .omp_data_o.9.B = B;
  .omp_data_o.9.C = C;
  .omp_data_o.9.ni = ni;
  .omp_data_o.9.nj = nj;
  .omp_data_o.9.nk = nk;
  __builtin_GOMP_parallel_start (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0, &.omp_data_o.9, 24);
  _Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0 (&.omp_data_o.9);
  __builtin_GOMP_parallel_end ();
  alpha = .omp_data_o.9.alpha;
  beta = .omp_data_o.9.beta;
  A = .omp_data_o.9.A;
  B = .omp_data_o.9.B;
  C = .omp_data_o.9.C;
  ni = .omp_data_o.9.ni;
  nj = .omp_data_o.9.nj;
  nk = .omp_data_o.9.nk;
  return;

}



;; Function void GPU_argv_init() (_Z13GPU_argv_initv, funcdef_no=3148, decl_uid=48107, cgraph_uid=3010)

void GPU_argv_init() ()
{
  struct cudaDeviceProp deviceProp;
  struct _IO_FILE * stderr.10;

  <bb 2>:
  stderr.10 = stderr;
  __builtin_fwrite ("GPU init.\n", 1, 10, stderr.10);

  <bb 3>:
  cudaGetDeviceProperties (&deviceProp, 0);

  <bb 4>:
  printf ("setting device %d with name %s\n", 0, &deviceProp.name);

  <bb 5>:
  cudaSetDevice (0);

  <bb 6>:
  deviceProp = {CLOBBER};
  return;

<L0>:
  deviceProp = {CLOBBER};
  resx 1

}



;; Function void polybench_flush_cache() (_Z21polybench_flush_cachev, funcdef_no=3152, decl_uid=48391, cgraph_uid=3014)

void polybench_flush_cache() ()
{
  static const char __PRETTY_FUNCTION__[29] = "void polybench_flush_cache()";
  double tmp;
  int i;
  double * flush;
  int cs;
  double D.49030;
  double * D.49029;
  long unsigned int D.49028;
  long unsigned int D.49027;
  long unsigned int D.49026;
  long unsigned int D.49025;

  <bb 2>:
  D.49025 = 4194560;
  cs = (int) D.49025;
  D.49026 = (long unsigned int) cs;
  flush = calloc (D.49026, 8);
  tmp = 0.0;
  i = 0;
  goto <bb 4>;

  <bb 3>:
  D.49027 = (long unsigned int) i;
  D.49028 = D.49027 * 8;
  D.49029 = flush + D.49028;
  D.49030 = *D.49029;
  tmp = D.49030 + tmp;
  i = i + 1;

  <bb 4>:
  if (i < cs)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 5>:
  if (tmp <= 1.0e+1)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  __assert_fail ("tmp <= 10.0", "../../../utilities/polybench.c", 96, &__PRETTY_FUNCTION__);

  <bb 7>:
  free (flush);
  return;

}



;; Function void polybench_prepare_instruments() (_Z29polybench_prepare_instrumentsv, funcdef_no=3153, decl_uid=48402, cgraph_uid=3015)

void polybench_prepare_instruments() ()
{
  <bb 2>:
  polybench_flush_cache ();
  return;

}



;; Function void polybench_timer_start() (_Z21polybench_timer_startv, funcdef_no=3154, decl_uid=47315, cgraph_uid=3016)

void polybench_timer_start() ()
{
  double D.49035;
  double polybench_t_start.35;

  <bb 2>:
  polybench_prepare_instruments ();
  D.49035 = rtclock ();
  polybench_t_start.35 = D.49035;
  polybench_t_start = polybench_t_start.35;
  return;

}



;; Function void polybench_timer_stop() (_Z20polybench_timer_stopv, funcdef_no=3155, decl_uid=47316, cgraph_uid=3017)

void polybench_timer_stop() ()
{
  double D.49049;
  double polybench_t_end.36;

  <bb 2>:
  D.49049 = rtclock ();
  polybench_t_end.36 = D.49049;
  polybench_t_end = polybench_t_end.36;
  return;

}



;; Function void polybench_timer_print() (_Z21polybench_timer_printv, funcdef_no=3156, decl_uid=47317, cgraph_uid=3018)

void polybench_timer_print() ()
{
  double D.49052;
  double polybench_t_start.38;
  double polybench_t_end.37;

  <bb 2>:
  polybench_t_end.37 = polybench_t_end;
  polybench_t_start.38 = polybench_t_start;
  D.49052 = polybench_t_end.37 - polybench_t_start.38;
  printf ("%0.6f\n", D.49052);
  return;

}



;; Function void gemm_original(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z13gemm_originaliiiddPA1024_dS0_S0_, funcdef_no=3145, decl_uid=48073, cgraph_uid=3007)

void gemm_original(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C)
{
  <bb 2>:
  polybench_timer_start ();
  gemm (ni, nj, nk, alpha, beta, A, B, C);
  __builtin_puts (&"Original CPU Time in seconds:"[0]);
  polybench_timer_stop ();
  polybench_timer_print ();
  return;

}



;; Function void gemm_omp(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (_Z8gemm_ompiiiddPA1024_dS0_S0_, funcdef_no=3147, decl_uid=48105, cgraph_uid=3009)

void gemm_omp(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C_outputFromOMP)
{
  <bb 2>:
  polybench_timer_start ();
  gemm_omp_kernel (ni, nj, nk, alpha, beta, A, B, C_outputFromOMP);
  __builtin_puts (&"OpenMP Time in seconds:"[0]);
  polybench_timer_stop ();
  polybench_timer_print ();
  return;

}



;; Function void* polybench_alloc_data(long long unsigned int, int) (_Z20polybench_alloc_datayi, funcdef_no=3158, decl_uid=47323, cgraph_uid=3020)

void* polybench_alloc_data(long long unsigned int, int) (long long unsigned int n, int elt_size)
{
  void * D.49056;
  void * ret;
  size_t val;
  void * D.49054;
  long unsigned int D.49053;

  <bb 2>:
  val = n;
  D.49053 = (long unsigned int) elt_size;
  val = D.49053 * val;
  D.49056 = xmalloc (val);
  ret = D.49056;
  D.49054 = ret;
  return D.49054;

}



;; Function int main(int, char**) (main, funcdef_no=3150, decl_uid=48155, cgraph_uid=3012)

int main(int, char**) (int argc, char * * argv)
{
  bool D.49011;
  void * D.49010;
  void * D.49009;
  double[1024][1024] * D.49008;
  void * D.49007;
  void * D.49006;
  void * D.49005;
  static const char __PRETTY_FUNCTION__[22] = "int main(int, char**)";
  int ndevices;
  int nloops;
  struct Func * ff_1;
  int n_params;
  double[1024][1024] * C_outputFromGpu;
  double[1024][1024] * C_inputToGpu;
  double[1024][1024] * C_outputFromOMP;
  double[1024][1024] * C;
  double[1024][1024] * B;
  double[1024][1024] * A;
  double beta;
  double alpha;
  int nk;
  int nj;
  int ni;
  int D.49003;
  unsigned char D.48999;
  char * D.48998;
  double[1024][1024] * C_outputFromGpu.33;
  double alpha.32;
  double beta.31;
  double[1024][1024] * C_inputToGpu.30;
  int ni.29;
  int nj.28;
  int nk.27;
  double[1024][1024] * A.26;
  double[1024][1024] * B.25;
  double[1024][1024] * C.24;
  struct Func * * * TablePointerFunctions.23;
  struct Func * D.48981;
  struct Func * * D.48980;
  struct Func * * D.48979;
  struct Func * * * table.22;
  bool retval.21;
  struct ffi_type * * D.48972;
  struct ffi_type * * D.48971;
  struct ffi_type * * D.48970;
  struct ffi_type * * D.48969;
  struct ffi_type * * D.48968;
  struct ffi_type * * D.48967;
  struct ffi_type * * D.48966;
  struct ffi_type * * D.48965;
  struct ffi_type * * D.48964;
  struct ffi_type * * D.48963;
  struct ffi_type * * D.48962;
  void * * D.48961;
  void * * D.48960;
  void * * D.48959;
  void * * D.48958;
  void * * D.48957;
  void * * D.48956;
  void * * D.48955;
  void * * D.48954;
  void * * D.48953;
  void * * D.48952;
  void * * D.48951;
  void * * D.48950;
  void * D.48949;
  void * D.48948;
  long unsigned int D.48947;
  long unsigned int D.48946;
  int D.48945;
  struct _IO_FILE * stderr.20;
  void * C_outputFromGpu.19;
  void * C_inputToGpu.18;
  void * C.17;
  void * B.16;
  void * A.15;

  <bb 2>:
  ni = 1024;
  nj = 1024;
  nk = 1024;
  D.49005 = polybench_alloc_data (1048576, 8);

  <bb 3>:
  A.15 = D.49005;
  A = A.15;
  D.49006 = polybench_alloc_data (1048576, 8);

  <bb 4>:
  B.16 = D.49006;
  B = B.16;
  D.49007 = polybench_alloc_data (1048576, 8);

  <bb 5>:
  C.17 = D.49007;
  C = C.17;
  D.49008 = polybench_alloc_data (1048576, 8);

  <bb 6>:
  C_outputFromOMP = D.49008;
  D.49009 = polybench_alloc_data (1048576, 8);

  <bb 7>:
  C_inputToGpu.18 = D.49009;
  C_inputToGpu = C_inputToGpu.18;
  D.49010 = polybench_alloc_data (1048576, 8);

  <bb 8>:
  C_outputFromGpu.19 = D.49010;
  C_outputFromGpu = C_outputFromGpu.19;
  stderr.20 = stderr;
  __builtin_fwrite ("Preparing alternatives functions.\n", 1, 34, stderr.20);

  <bb 9>:
  n_params = 10;
  ff_1 = malloc (48);
  D.48945 = n_params + 1;
  D.48946 = (long unsigned int) D.48945;
  D.48947 = D.48946 * 8;
  D.48948 = malloc (D.48947);
  ff_1->arg_types = D.48948;
  D.48945 = n_params + 1;
  D.48946 = (long unsigned int) D.48945;
  D.48947 = D.48946 * 8;
  D.48949 = malloc (D.48947);
  ff_1->arg_values = D.48949;
  ff_1->f = gemm_cuda;
  D.48950 = &ff_1->ret_value;
  memset (D.48950, 0, 8);
  ff_1->ret_type = &ffi_type_void;
  ff_1->nargs = n_params;
  D.48951 = ff_1->arg_values;
  *D.48951 = &ni;
  D.48951 = ff_1->arg_values;
  D.48952 = D.48951 + 8;
  *D.48952 = &nj;
  D.48951 = ff_1->arg_values;
  D.48953 = D.48951 + 16;
  *D.48953 = &nk;
  D.48951 = ff_1->arg_values;
  D.48954 = D.48951 + 24;
  *D.48954 = &alpha;
  D.48951 = ff_1->arg_values;
  D.48955 = D.48951 + 32;
  *D.48955 = &beta;
  D.48951 = ff_1->arg_values;
  D.48956 = D.48951 + 40;
  *D.48956 = &A;
  D.48951 = ff_1->arg_values;
  D.48957 = D.48951 + 48;
  *D.48957 = &B;
  D.48951 = ff_1->arg_values;
  D.48958 = D.48951 + 56;
  *D.48958 = &C;
  D.48951 = ff_1->arg_values;
  D.48959 = D.48951 + 64;
  *D.48959 = &C_inputToGpu;
  D.48951 = ff_1->arg_values;
  D.48960 = D.48951 + 72;
  *D.48960 = &C_outputFromGpu;
  D.48951 = ff_1->arg_values;
  D.48961 = D.48951 + 80;
  *D.48961 = 0B;
  D.48962 = ff_1->arg_types;
  *D.48962 = &ffi_type_sint32;
  D.48962 = ff_1->arg_types;
  D.48963 = D.48962 + 8;
  *D.48963 = &ffi_type_sint32;
  D.48962 = ff_1->arg_types;
  D.48964 = D.48962 + 16;
  *D.48964 = &ffi_type_sint32;
  D.48962 = ff_1->arg_types;
  D.48965 = D.48962 + 24;
  *D.48965 = &ffi_type_double;
  D.48962 = ff_1->arg_types;
  D.48966 = D.48962 + 32;
  *D.48966 = &ffi_type_double;
  D.48962 = ff_1->arg_types;
  D.48967 = D.48962 + 40;
  *D.48967 = &ffi_type_pointer;
  D.48962 = ff_1->arg_types;
  D.48968 = D.48962 + 48;
  *D.48968 = &ffi_type_pointer;
  D.48962 = ff_1->arg_types;
  D.48969 = D.48962 + 56;
  *D.48969 = &ffi_type_pointer;
  D.48962 = ff_1->arg_types;
  D.48970 = D.48962 + 64;
  *D.48970 = &ffi_type_pointer;
  D.48962 = ff_1->arg_types;
  D.48971 = D.48962 + 72;
  *D.48971 = &ffi_type_pointer;
  D.48962 = ff_1->arg_types;
  D.48972 = D.48962 + 80;
  *D.48972 = 0B;
  stderr.20 = stderr;
  __builtin_fwrite ("Creating table of target functions.\n", 1, 36, stderr.20);

  <bb 10>:
  nloops = 1;
  ndevices = 2;
  D.49011 = create_target_functions_table (&table, nloops, ndevices);

  <bb 11>:
  retval.21 = D.49011;
  if (retval.21 != 0)
    goto <bb 12>;
  else
    goto <bb 17>;

  <bb 12>:
  table.22 = table;
  if (table.22 == 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  __assert_fail ("table != __null", "gemm.cu", 369, &__PRETTY_FUNCTION__);

  <bb 14>:
  stderr.20 = stderr;
  __builtin_fwrite ("Declaring function in 0,1.\n", 1, 27, stderr.20);

  <bb 15>:
  table.22 = table;
  D.48979 = *table.22;
  D.48980 = D.48979 + 8;
  D.48981 = *D.48980;
  *D.48981 = MEM[(const struct Func &)ff_1];
  table.22 = table;
  TablePointerFunctions = table.22;
  TablePointerFunctions.23 = TablePointerFunctions;
  if (TablePointerFunctions.23 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  __assert_fail ("TablePointerFunctions != __null", "gemm.cu", 375, &__PRETTY_FUNCTION__);

  <bb 17>:
  stderr.20 = stderr;
  __builtin_fwrite ("Calling init_array.\n", 1, 20, stderr.20);

  <bb 18>:
  C.24 = C;
  B.25 = B;
  A.26 = A;
  nk.27 = nk;
  nj.28 = nj;
  ni.29 = ni;
  init_array (ni.29, nj.28, nk.27, &alpha, &beta, A.26, B.25, C.24);
  C.24 = C;
  memcpy (C_outputFromOMP, C.24, 8);
  C.24 = C;
  C_inputToGpu.30 = C_inputToGpu;
  memcpy (C_inputToGpu.30, C.24, 8);
  stderr.20 = stderr;
  __builtin_fwrite ("Calling gemm_original.\n", 1, 23, stderr.20);

  <bb 19>:
  C.24 = C;
  B.25 = B;
  A.26 = A;
  beta.31 = beta;
  alpha.32 = alpha;
  nk.27 = nk;
  nj.28 = nj;
  ni.29 = ni;
  gemm_original (ni.29, nj.28, nk.27, alpha.32, beta.31, A.26, B.25, C.24);

  <bb 20>:
  stderr.20 = stderr;
  __builtin_fwrite ("Calling gemm_omp.\n", 1, 18, stderr.20);

  <bb 21>:
  B.25 = B;
  A.26 = A;
  beta.31 = beta;
  alpha.32 = alpha;
  nk.27 = nk;
  nj.28 = nj;
  ni.29 = ni;
  gemm_omp (ni.29, nj.28, nk.27, alpha.32, beta.31, A.26, B.25, C_outputFromOMP);

  <bb 22>:
  stderr.20 = stderr;
  __builtin_fwrite ("Calling compareResults(original, omp).\n", 1, 39, stderr.20);

  <bb 23>:
  C.24 = C;
  nj.28 = nj;
  ni.29 = ni;
  compareResults (ni.29, nj.28, C.24, C_outputFromOMP);

  <bb 24>:
  stderr.20 = stderr;
  __builtin_fwrite ("Calling compareResults(original, cuda).\n", 1, 40, stderr.20);

  <bb 25>:
  C_outputFromGpu.33 = C_outputFromGpu;
  C.24 = C;
  nj.28 = nj;
  ni.29 = ni;
  compareResults (ni.29, nj.28, C.24, C_outputFromGpu.33);

  <bb 26>:
  if (argc > 42)
    goto <bb 27>;
  else
    goto <bb 29>;

  <bb 27>:
  D.48998 = *argv;
  D.48999 = MEM[(const unsigned char * {ref-all})D.48998];
  if (D.48999 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  C_outputFromGpu.33 = C_outputFromGpu;
  nj.28 = nj;
  ni.29 = ni;
  print_array (ni.29, nj.28, C_outputFromGpu.33);

  <bb 29>:
  A.26 = A;
  free (A.26);
  B.25 = B;
  free (B.25);
  C.24 = C;
  free (C.24);
  free (C_outputFromOMP);
  C_outputFromGpu.33 = C_outputFromGpu;
  free (C_outputFromGpu.33);
  D.49003 = 0;
  ni = {CLOBBER};
  nj = {CLOBBER};
  nk = {CLOBBER};
  alpha = {CLOBBER};
  beta = {CLOBBER};
  A = {CLOBBER};
  B = {CLOBBER};
  C = {CLOBBER};
  C_inputToGpu = {CLOBBER};
  C_outputFromGpu = {CLOBBER};
  return D.49003;

<L14>:
  ni = {CLOBBER};
  nj = {CLOBBER};
  nk = {CLOBBER};
  alpha = {CLOBBER};
  beta = {CLOBBER};
  A = {CLOBBER};
  B = {CLOBBER};
  C = {CLOBBER};
  C_inputToGpu = {CLOBBER};
  C_outputFromGpu = {CLOBBER};
  resx 1

}



;; Function void __sti____cudaRegisterAll_39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611() (_ZL76__sti____cudaRegisterAll_39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611v, funcdef_no=3194, decl_uid=48691, cgraph_uid=3055)

void __sti____cudaRegisterAll_39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611() ()
{
  void * * D.49112;
  void (*<T52d8>) (void * *) callback_fp;
  void * * __cudaFatCubinHandle.50;
  void * * __cudaFatCubinHandle.49;

  <bb 2>:
  D.49112 = __cudaRegisterFatBinary (&__fatDeviceText);
  __cudaFatCubinHandle.49 = D.49112;
  __cudaFatCubinHandle = __cudaFatCubinHandle.49;
  callback_fp = __nv_cudaEntityRegisterCallback;
  __cudaFatCubinHandle.50 = __cudaFatCubinHandle;
  callback_fp (__cudaFatCubinHandle.50);
  atexit (__cudaUnregisterBinaryUtil);
  return;

}



;; Function cudaError_t _GLOBAL__N__39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch(T*) [with T = char; cudaError_t = cudaError] (_ZN63_GLOBAL__N__39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e461110cudaLaunchIcEE9cudaErrorPT_, funcdef_no=3195, decl_uid=48719, cgraph_uid=3056)

cudaError_t _GLOBAL__N__39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch(T*) [with T = char; cudaError_t = cudaError] (char * func)
{
  cudaError_t D.49109;
  cudaError_t D.49107;

  <bb 2>:
  D.49109 = cudaLaunch (func);
  D.49107 = D.49109;
  return D.49107;

}



;; Function void __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_(int, int, int, double, double, double*, double*, double*) (_Z45__device_stub__Z16gemm_cuda_kerneliiiddPdS_S_iiiddPdS_S_, funcdef_no=3191, decl_uid=48688, cgraph_uid=3052)

void __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_(int, int, int, double, double, double*, double*, double*) (int __par0, int __par1, int __par2, double __par3, double __par4, double * __par5, double * __par6, double * __par7)
{
  cudaError D.49106;
  cudaError D.49105;
  cudaError D.49104;
  cudaError D.49103;
  cudaError D.49102;
  cudaError D.49101;
  cudaError D.49100;
  cudaError D.49099;
  static volatile char * __f;
  cudaError D.49095;
  bool retval.48;
  cudaError D.49091;
  bool retval.47;
  cudaError D.49087;
  bool retval.46;
  cudaError D.49083;
  bool retval.45;
  cudaError D.49079;
  bool retval.44;
  cudaError D.49075;
  bool retval.43;
  cudaError D.49071;
  bool retval.42;
  cudaError D.49067;
  bool retval.41;

  <bb 2>:
  D.49099 = cudaSetupArgument (&__par0, 4, 0);
  D.49067 = D.49099;
  retval.41 = D.49067 != 0;
  if (retval.41 != 0)
    goto <bb 11>;
  else
    goto <bb 3>;

  <bb 3>:
  D.49100 = cudaSetupArgument (&__par1, 4, 4);
  D.49071 = D.49100;
  retval.42 = D.49071 != 0;
  if (retval.42 != 0)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  D.49101 = cudaSetupArgument (&__par2, 4, 8);
  D.49075 = D.49101;
  retval.43 = D.49075 != 0;
  if (retval.43 != 0)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  D.49102 = cudaSetupArgument (&__par3, 8, 16);
  D.49079 = D.49102;
  retval.44 = D.49079 != 0;
  if (retval.44 != 0)
    goto <bb 11>;
  else
    goto <bb 6>;

  <bb 6>:
  D.49103 = cudaSetupArgument (&__par4, 8, 24);
  D.49083 = D.49103;
  retval.45 = D.49083 != 0;
  if (retval.45 != 0)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  D.49104 = cudaSetupArgument (&__par5, 8, 32);
  D.49087 = D.49104;
  retval.46 = D.49087 != 0;
  if (retval.46 != 0)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  D.49105 = cudaSetupArgument (&__par6, 8, 40);
  D.49091 = D.49105;
  retval.47 = D.49091 != 0;
  if (retval.47 != 0)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  D.49106 = cudaSetupArgument (&__par7, 8, 48);
  D.49095 = D.49106;
  retval.48 = D.49095 != 0;
  if (retval.48 != 0)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __f = gemm_cuda_kernel;
  _GLOBAL__N__39_tmpxft_0000461c_00000000_6_gemm_cpp1_ii_132e4611::cudaLaunch<char> (gemm_cuda_kernel);

  <bb 11>:
  return;

}



;; Function void gemm_cuda_kernel(int, int, int, double, double, double*, double*, double*) (_Z16gemm_cuda_kerneliiiddPdS_S_, funcdef_no=3192, decl_uid=48118, cgraph_uid=3053)

void gemm_cuda_kernel(int, int, int, double, double, double*, double*, double*) (int __cuda_0, int __cuda_1, int __cuda_2, double __cuda_3, double __cuda_4, double * __cuda_5, double * __cuda_6, double * __cuda_7)
{
  <bb 2>:
  __device_stub__Z16gemm_cuda_kerneliiiddPdS_S_ (__cuda_0, __cuda_1, __cuda_2, __cuda_3, __cuda_4, __cuda_5, __cuda_6, __cuda_7);
  return;

}



;; Function void gemm_cuda(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024]) (_Z9gemm_cudaiiiddPA1024_dS0_S0_S0_S0_, funcdef_no=3149, decl_uid=48129, cgraph_uid=3011)

void gemm_cuda(int, int, int, double, double, double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024], double (*)[1024]) (int ni, int nj, int nk, double alpha, double beta, double[1024] * A, double[1024] * B, double[1024] * C, double[1024] * C_inputToGpu, double[1024] * C_outputFromGpu)
{
  cudaError D.48935;
  struct dim3 grid;
  struct dim3 block;
  double * C_gpu;
  double * B_gpu;
  double * A_gpu;
  cudaError D.48931;
  unsigned int D.48930;
  long unsigned int D.48929;
  float D.48928;
  float D.48927;
  float D.48926;
  unsigned int D.48925;
  unsigned int D.48924;
  long unsigned int D.48923;
  float D.48922;
  float D.48921;
  float D.48920;
  unsigned int D.48919;
  double * C_gpu.14;
  double * B_gpu.13;
  double * A_gpu.12;
  long unsigned int D.48915;
  struct _IO_FILE * stderr.11;

  <bb 2>:
  stderr.11 = stderr;
  __builtin_fwrite ("Calling function gemm_cuda.\n", 1, 28, stderr.11);

  <bb 3>:
  GPU_argv_init ();

  <bb 4>:
  polybench_timer_start ();

  <bb 5>:
  D.48915 = 8388608;
  cudaMalloc (&A_gpu, D.48915);

  <bb 6>:
  D.48915 = 8388608;
  cudaMalloc (&B_gpu, D.48915);

  <bb 7>:
  D.48915 = 8388608;
  cudaMalloc (&C_gpu, D.48915);

  <bb 8>:
  polybench_timer_stop ();

  <bb 9>:
  __builtin_puts (&"GPU cuda Malloc Time in seconds:"[0]);

  <bb 10>:
  polybench_timer_print ();

  <bb 11>:
  polybench_timer_start ();

  <bb 12>:
  D.48915 = 8388608;
  A_gpu.12 = A_gpu;
  cudaMemcpy (A_gpu.12, A, D.48915, 1);

  <bb 13>:
  D.48915 = 8388608;
  B_gpu.13 = B_gpu;
  cudaMemcpy (B_gpu.13, B, D.48915, 1);

  <bb 14>:
  D.48915 = 8388608;
  C_gpu.14 = C_gpu;
  cudaMemcpy (C_gpu.14, C_inputToGpu, D.48915, 1);

  <bb 15>:
  polybench_timer_stop ();

  <bb 16>:
  __builtin_puts (&"GPU Data Transfers Time in seconds:"[0]);

  <bb 17>:
  polybench_timer_print ();

  <bb 18>:
  dim3::dim3 (&block, 32, 8, 1);
  D.48919 = block.y;
  D.48920 = (float) D.48919;
  D.48921 = 1.024e+3 / D.48920;
  D.48922 = std::ceil (D.48921);
  D.48923 = (long unsigned int) D.48922;
  D.48924 = (unsigned int) D.48923;
  D.48925 = block.x;
  D.48926 = (float) D.48925;
  D.48927 = 1.024e+3 / D.48926;
  D.48928 = std::ceil (D.48927);
  D.48929 = (long unsigned int) D.48928;
  D.48930 = (unsigned int) D.48929;
  dim3::dim3 (&grid, D.48930, D.48924, 1);
  polybench_timer_start ();

  <bb 19>:
  D.48935 = cudaConfigureCall (grid, block, 0, 0B);

  <bb 20>:
  D.48931 = D.48935;
  if (D.48931 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  C_gpu.14 = C_gpu;
  B_gpu.13 = B_gpu;
  A_gpu.12 = A_gpu;
  gemm_cuda_kernel (ni, nj, nk, alpha, beta, A_gpu.12, B_gpu.13, C_gpu.14);

  <bb 22>:
  cudaThreadSynchronize ();

  <bb 23>:
  __builtin_puts (&"GPU kernel Time in seconds:"[0]);

  <bb 24>:
  polybench_timer_stop ();

  <bb 25>:
  polybench_timer_print ();

  <bb 26>:
  polybench_timer_start ();

  <bb 27>:
  D.48915 = 8388608;
  C_gpu.14 = C_gpu;
  cudaMemcpy (C_outputFromGpu, C_gpu.14, D.48915, 2);

  <bb 28>:
  __builtin_puts (&"GPU copy result Time in seconds:"[0]);

  <bb 29>:
  polybench_timer_stop ();

  <bb 30>:
  polybench_timer_print ();

  <bb 31>:
  A_gpu.12 = A_gpu;
  cudaFree (A_gpu.12);

  <bb 32>:
  B_gpu.13 = B_gpu;
  cudaFree (B_gpu.13);

  <bb 33>:
  C_gpu.14 = C_gpu;
  cudaFree (C_gpu.14);

  <bb 34>:
  A_gpu = {CLOBBER};
  B_gpu = {CLOBBER};
  C_gpu = {CLOBBER};
  block = {CLOBBER};
  grid = {CLOBBER};
  return;

<L3>:
  A_gpu = {CLOBBER};
  B_gpu = {CLOBBER};
  C_gpu = {CLOBBER};
  block = {CLOBBER};
  grid = {CLOBBER};
  resx 1

}



;; Function <built-in> (_Z15gemm_omp_kerneliiiddPA1024_dS0_S0_._omp_fn.0, funcdef_no=3196, decl_uid=48872, cgraph_uid=3065)

<built-in> (struct .omp_data_s.8 * .omp_data_i)
{
  double[1024] * C [value-expr: .omp_data_i->C];
  double[1024] * B [value-expr: .omp_data_i->B];
  double[1024] * A [value-expr: .omp_data_i->A];
  double beta [value-expr: .omp_data_i->beta];
  double alpha [value-expr: .omp_data_i->alpha];
  int nk [value-expr: .omp_data_i->nk];
  int nj [value-expr: .omp_data_i->nj];
  int ni [value-expr: .omp_data_i->ni];
  double D.49204;
  double D.49203;
  double D.49202;
  double[1024] * D.49201;
  double[1024] * D.49200;
  long unsigned int D.49199;
  long unsigned int D.49198;
  double D.49197;
  double D.49196;
  double D.49195;
  double[1024] * D.49194;
  double[1024] * D.49193;
  double[1024] * D.49192;
  double[1024] * D.49191;
  int D.49190;
  int k;
  double D.49188;
  double D.49187;
  double D.49186;
  double[1024] * D.49185;
  double[1024] * D.49184;
  double[1024] * D.49183;
  long unsigned int D.49182;
  long unsigned int D.49181;
  bool D.49180;
  int D.49179;
  int j;
  int D.49177;
  long int .iend0.71;
  int i;
  long int .istart0.70;
  bool D.49173;
  long int .iend0.69;
  long int .istart0.68;
  long int D.49170;
  int D.49169;

  <bb 16>:

  <bb 3>:
  D.49169 = .omp_data_i->ni;
  D.49170 = (long int) D.49169;
  D.49173 = __builtin_GOMP_loop_dynamic_start (0, D.49170, 1, 64, &.istart0.68, &.iend0.69);
  if (D.49173 != 0)
    goto <bb 14>;
  else
    goto <bb 11>;

  <bb 14>:
  .istart0.70 = .istart0.68;
  i = (int) .istart0.70;
  .iend0.71 = .iend0.69;
  D.49177 = (int) .iend0.71;

  <bb 4>:
  j = 0;

  <bb 9>:
  D.49179 = .omp_data_i->nj;
  if (j < D.49179)
    goto <bb 5>;
  else
    goto <bb 10>;

  <bb 10>:
  i = i + 1;
  if (i < D.49177)
    goto <bb 4>;
  else
    goto <bb 15>;

  <bb 15>:
  D.49180 = __builtin_GOMP_loop_dynamic_next (&.istart0.68, &.iend0.69);
  if (D.49180 != 0)
    goto <bb 14>;
  else
    goto <bb 11>;

  <bb 5>:
  D.49181 = (long unsigned int) i;
  D.49182 = D.49181 * 8192;
  D.49183 = .omp_data_i->C;
  D.49184 = D.49183 + D.49182;
  D.49181 = (long unsigned int) i;
  D.49182 = D.49181 * 8192;
  D.49185 = .omp_data_i->C;
  D.49184 = D.49185 + D.49182;
  D.49186 = *D.49184[j];
  D.49187 = .omp_data_i->beta;
  D.49188 = D.49186 * D.49187;
  *D.49184[j] = D.49188;
  k = 0;

  <bb 7>:
  D.49190 = .omp_data_i->nk;
  if (k < D.49190)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 8>:
  j = j + 1;
  goto <bb 9>;

  <bb 6>:
  D.49181 = (long unsigned int) i;
  D.49182 = D.49181 * 8192;
  D.49191 = .omp_data_i->C;
  D.49184 = D.49191 + D.49182;
  D.49181 = (long unsigned int) i;
  D.49182 = D.49181 * 8192;
  D.49192 = .omp_data_i->C;
  D.49184 = D.49192 + D.49182;
  D.49186 = *D.49184[j];
  D.49181 = (long unsigned int) i;
  D.49182 = D.49181 * 8192;
  D.49193 = .omp_data_i->A;
  D.49194 = D.49193 + D.49182;
  D.49195 = *D.49194[k];
  D.49196 = .omp_data_i->alpha;
  D.49197 = D.49195 * D.49196;
  D.49198 = (long unsigned int) k;
  D.49199 = D.49198 * 8192;
  D.49200 = .omp_data_i->B;
  D.49201 = D.49200 + D.49199;
  D.49202 = *D.49201[j];
  D.49203 = D.49197 * D.49202;
  D.49204 = D.49186 + D.49203;
  *D.49184[j] = D.49204;
  k = k + 1;
  goto <bb 7>;

  <bb 11>:
  __builtin_GOMP_loop_end_nowait ();

  <bb 12>:
  return;

}


