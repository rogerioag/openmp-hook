      PROGRAM MAIN
 
C THIS PROGRAM WILL TEST THE ABILITY OF A SOFTWARE/HARDWARE
C SYSTEM IN REGARDS TO PARALLEL CONSTRUCTS.
C THE PROGRAM CONSISTS OF THE MAIN PROGRAM, DRIVERS THAT
C CALL AND TIME THE SUBROUTINE TO BE TESTED AND A COLLECTION
C OF SUBROUTINES FROM VARIOUS PROGRAMS. THESE SUBROUTINES HAVE BEEN
C ASSEMBLED FROM A VARIETY OF PROGRAMS AND AS SUCH THEY HAVE BEEN
C TAKEN OUT OF THEIR PROPER CONTEXT. THEY HAVE BEEN MODIFIED SO
C THAT THEY WILL EXECUTE IN A STAND ALONE MODE.
C THE PARAMETER 'NOROUT' SETS UP THE NUMBER OF SUBROUTINES
C TO TEST. IF ROUTINES ARE ADDED THIS PARAMETER MUST BE INCREASED
C TO THE CORRECT NUMBER. THE 'WTIMES' ARRAY CONTAINS THE WALL CLOCK
C TIMES FOR EACH SUBROUTINE THAT IS TESTED.
C THE 'IANS' ARRAY CONTAINS A O IF THE ROUTINE CALCULATED TO A
C PREDETERMINED RESULT AND A 1 IF IT DID NOT OBTAIN THE DESIRED RESULT.
C 'ITERNO IS A LOOP COUNTER THAT ALLOWS THE AMOUNT OF CPU TIME
C GENERATED TO BE VARIED. EACH DRIVER ROUTINE GENERATES AROUND .3 OF A
C CPU SECOND ON A CRAY XMP. THE DRIVER ALSO RETURNS THE CPU AND WALL
C CLOCK TIME FOR EACH ROUTINE. THERE IS A DRIVER FOR EACH ROUTINE
C THAT IS CALLED. THE 'IEX' ARRAY IS A SET OF FLAGS WHICH STATES
C WHAT ROUTINES TO TEST. A 1 IN IEX(1) WILL CALL DRIVER 1. A 0 WILL
C SKIP CALLING THAT ROUTINE. INSIDE OF EACH DRIVER THE ROUTINE TO BE
C TESTED MAY BE CALLED MORE THAN ONCE IN ORDER TO GENERATE ENOUGH
C CPU TIME. VARIABLE 'PRTALL' CONTROLS THE PRINTING OF INDIVIDUAL
C TIMINGS FOR EACH ROUTINE. IF IT IS 'TRUE' , THEN THE TIMES FOR
C EACH ROUTINE WILL BE PRINTED. IF 'FALSE' ONLY THE TOTAL TIMES WILL
C BE PRINTED. VARIABLE 'ITERNO' CONTROLS THE NUMBER OF TIMES THAT
C THE PROGRAMS WILL BE EXECUTED IN AN OUTER LOOP. THIS ALLOWS THE
C GENERATION OF MORE OR LESS TIME. THE MFLOPS ARE CALCULATED BY
C DIVIDING THE PREDETERMINED FLOPS BY THE WALL CLOCK TIME. 
 
      PARAMETER ( NOROUT = 36 , NWORDS = 2100000)
 
      COMMON /DATA/DUMMY(NWORDS)
      COMMON /ERROR/ RELERR
      COMMON/WT/ WTIMES(NOROUT)
      COMMON /RESULTS/ IANS(NOROUT)
 
      DIMENSION IEX(NOROUT),FLOPS(NOROUT)
 
      INTEGER FLOPS,FLOPST
      REAL MFLOPS,MFLOPA
      LOGICAL PRTALL

      DATA PRTALL/.TRUE./
      DATA IEX/NOROUT*1/
      DATA ITERNO/1/
      DATA FLOPS/
     *   7303347,   5660969, 126307648, 270513504,  17668534, 173757577,
     * 291647851,  24518837,  11256093,  10452045,  28981773, 101543326,
     *  10304303, 221141203,  12815237,  33089704, 243753086,  10121093,
     * 190660062,   6913440,  23763905, 130846623,   4904591, 196496290,
     *  22563098,  12913459,   1323307,  13717990, 180614247, 334903167,
     * 136813658, 122346352,   2528014,  27661012,  36070850,  16585440/
      DATA CONST/1.E-06/
 
      RELERR = 1.E-9
      DO 1000 I = 1, NOROUT
        WTIMES(I) = 0
        IANS(I) = 0
 1000 CONTINUE
 
      DO 1200 I = 1, ITERNO
        IF (IEX(1) .NE. 0) CALL D1
        IF (IEX(2) .NE. 0) CALL D2
        IF (IEX(3) .NE. 0) CALL D3
        IF (IEX(4) .NE. 0) CALL D4
        IF (IEX(5) .NE. 0) CALL D5
        IF (IEX(6) .NE. 0) CALL D6
        IF (IEX(7) .NE. 0) CALL D7
        IF (IEX(8) .NE. 0) CALL D8
        IF (IEX(9) .NE. 0) CALL D9
        IF (IEX(10) .NE. 0) CALL D10
        IF (IEX(11) .NE. 0) CALL D11
        IF (IEX(12) .NE. 0) CALL D12
        IF (IEX(13) .NE. 0) CALL D13
        IF (IEX(14) .NE. 0) CALL D14
        IF (IEX(15) .NE. 0) CALL D15
        IF (IEX(16) .NE. 0) CALL D16
        IF (IEX(17) .NE. 0) CALL D17
        IF (IEX(18) .NE. 0) CALL D18
        IF (IEX(19) .NE. 0) CALL D19
        IF (IEX(20) .NE. 0) CALL D20
        IF (IEX(21) .NE. 0) CALL D21
        IF (IEX(22) .NE. 0) CALL D22
        IF (IEX(23) .NE. 0) CALL D23
        IF (IEX(24) .NE. 0) CALL D24
        IF (IEX(25) .NE. 0) CALL D25
        IF (IEX(26) .NE. 0) CALL D26
        IF (IEX(27) .NE. 0) CALL D27
        IF (IEX(28) .NE. 0) CALL D28
        IF (IEX(29) .NE. 0) CALL D29
        IF (IEX(30) .NE. 0) CALL D30
        IF (IEX(31) .NE. 0) CALL D31
        IF (IEX(32) .NE. 0) CALL D32
        IF (IEX(33) .NE. 0) CALL D33
        IF (IEX(34) .NE. 0) CALL D34
        IF (IEX(35) .NE. 0) CALL D35
        IF (IEX(36) .NE. 0) CALL D36
 1200 CONTINUE
 
      IFAILS = 0
      DO 1600 IDNUM = 1, NOROUT
        IF (IEX(IDNUM) .EQ. 0) GO TO 1400
        IF (IANS(IDNUM) .NE. 0) IFAILS = IFAILS + 1
 1400   CONTINUE
 1600 CONTINUE
      IF (IFAILS .EQ. 0) THEN
          PRINT 12
      ELSE
          PRINT 14
          DO 2000 IDNUM = 1, NOROUT
            IF (IEX(IDNUM) .EQ. 0) GO TO 1800
            IF (IANS(IDNUM) .NE. 0) PRINT 10, IDNUM
 1800       CONTINUE
 2000     CONTINUE
      ENDIF
 
      WLLTME = 0
      FLOPST = 0
      EXECS = 0
      GM = 1.
      DO 2400 IDNUM = 1, NOROUT
        IF (IEX(IDNUM) .EQ. 0) GO TO 2200
        WLLTME = WLLTME + WTIMES(IDNUM)
        IF (ITERNO .NE. 1) FLOPS(IDNUM) = FLOPS(IDNUM)*ITERNO
        FLOPST = FLOPST + FLOPS(IDNUM)
        MFLOPS = (FLOPS(IDNUM)/WTIMES(IDNUM))*CONST
        IF (PRTALL) PRINT 16, IDNUM, WTIMES(IDNUM), MFLOPS
        GM = GM * MFLOPS
        EXECS = EXECS + 1.
 2200   CONTINUE
 2400 CONTINUE
 
      MFLOPA = (FLOPST/WLLTME)*CONST
 
      GM = GM**(1./EXECS)
      PRINT 18, WLLTME, MFLOPA
      PRINT 20, GM
      STOP 

 
   10 FORMAT(1H ,'RESULTS FROM SUBROUTINE',I3,' WERE INVALID')
   12 FORMAT(1H ,'ALL RESULTS WERE VALID')
   14 FORMAT(1H ,'NOT ALL RESULTS WERE VALID. ')
   16 FORMAT(1H ,'SUB',I2,2X,' WALL CLOCK SECONDS ',F6.2,2X
     1          ,'MFLOPS ',F7.1)
   18 FORMAT(1H ,/,' TOTAL WALL CLOCK SECONDS ',F8.3,/,
     1             ' AVERAGE MFLOPS           ',F8.3)
   20 FORMAT(1H ,/,' GEOMETRIC MEAN           ',F8.3)
      END
 
      SUBROUTINE CALLP0(ID,SUB)
      PARAMETER (CLOCK=6.0E-09)
      COMMON /OVERH/ OVER1,OVER2,OVER3
      COMMON/WT/ WTIMES(1)
      INTEGER WALLS, WALLE
      WALLS = RTC()
      CALL SUB
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP1 (ID, SUB, A)
      WALLS = RTC()
      CALL SUB (A)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP2 (ID, SUB, A, B)
      WALLS = RTC()
      CALL SUB (A, B)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP3 (ID, SUB, A, B, C)
      WALLS = RTC()
      CALL SUB (A, B, C)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP4 (ID, SUB, A, B, C, D)
      WALLS = RTC()
      CALL SUB (A, B, C, D)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP5 (ID, SUB, A, B, C, D, E)
      WALLS = RTC()
      CALL SUB (A, B, C, D, E)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP6 (ID, SUB, A, B, C, D, E, F)
      WALLS = RTC()
      CALL SUB (A, B, C, D, E, F)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP7 (ID, SUB, A, B, C, D, E, F, G)
      WALLS = RTC()
      CALL SUB (A, B, C, D, E, F, G)
      WALLE = RTC()
      GO TO 1000
 
      ENTRY CALLP8 (ID, SUB, A, B, C, D, E, F, G, H)
      WALLS = RTC()
      CALL SUB (A, B, C, D, E, F, G, H)
      WALLE = RTC()
 
 1000 CONTINUE
      WTIMES(ID) = WTIMES(ID) + (FLOAT((WALLE-WALLS))*CLOCK)
      RETURN 
      END
 
      SUBROUTINE INIT(VAR,CON,N,INC)
      COMPLEX CVAR(N),CCON
      DIMENSION VAR(N),IVAR(N)
      DO 1000 I = 1, N, INC
        VAR(I) = CON
 1000 CONTINUE
      RETURN 
 
      ENTRY IINIT (IVAR, ICON, N, INC)
      DO 1200 I = 1, N, INC
        IVAR(I) = ICON
 1200 CONTINUE
      RETURN 
 
      ENTRY CINIT (CVAR, CCON, N, INC)
      DO 1400 I = 1, N, INC
        CVAR(I) = CCON
 1400 CONTINUE
      RETURN 
      END
 
      SUBROUTINE RSUM(ID,VAR,N,RESULT)
      COMPLEX CVAR(N),CRSULT,CRES
      DIMENSION VAR(N),IVAR(N)
      COMMON /ERROR/ RELERR
      COMMON /RESULTS/ IANS(1)
 
      SUM = 0
      IANSWR = 0
      DO 1000 I = 1, N
        SUM = SUM + VAR(I)
 1000 CONTINUE
      DIFF = ABS(RESULT-SUM)
      ESUM = ABS(RELERR*SUM)
      IF (DIFF .GT. ESUM) IANSWR = 1
      IF (IANSWR .NE. 0) PRINT 10, SUM, RESULT
   10 FORMAT(' CALC ',E20.14,/,' EXPC ',E20.14)
      GO TO 1600
 
      ENTRY IISUM (ID, IVAR, N, IRSULT)
      IRES = 0
      IANSWR = 0
      DO 1200 I = 1, N
        IRES = IRES + IVAR(I)
 1200 CONTINUE
      DIFF = ABS(IRSULT-IRES)
      ESUM = ABS(RELERR*IRES)
      IF (DIFF .GT. ESUM) IANSWR = 1
      GO TO 1600
 
      ENTRY CCSUM (ID, CVAR, N, CRSULT)
      CRES = 0
      IANSWR = 0
      DO 1400 I = 1, N
        CRES = CRES + CVAR(I)
 1400 CONTINUE
      DIFF = ABS(CRSULT-CRES)
      ESUM = ABS(RELERR*CRES)
      IF (DIFF .GT. ESUM) IANSWR = 1
 1600 CONTINUE
      IANS(ID) = IANS(ID) + IANSWR
      RETURN 
      END
      SUBROUTINE D1
      PARAMETER (M1=400000,N=1000,M=100)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB001
      DIMENSION CON(4)
      DATA ANS /.23465302666590E+3/
      DATA CON(1)/.0014/,CON(2)/.005678/,CON(3)/.0010/
      DATA CON(4)/.001234/
      DO 1200 I = 1, 12
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP2 (1, SUB001, M, N)
 1200 CONTINUE
      CALL RSUM (1, DUM1, M*N, ANS)
      RETURN 
      END
      SUBROUTINE D2
      PARAMETER (N=10,M=10)
      PARAMETER (M1=N*M)
      COMMON /DATA/ DUM1(M),DUM2(M1),DUM3(M1),DUM4(M1),DUM5(M1)
      EXTERNAL SUB002
      DIMENSION CON(4),A2(N,M)
      DATA ANS /.35722539999999E+2/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 5000
        DO 1000 J = 1, 4
          CALL INIT (DUM5(J),CON(J),N*M,4)
          CALL INIT (DUM4(J),CON(J),N*M,4)
          CALL INIT (DUM3(J),CON(J),N*M,4)
          CALL INIT (DUM2(J),CON(J),N*M,4)
          CALL INIT (DUM1(J),CON(J),N*M,4)
 1000   CONTINUE
        CALL CALLP7 (2, SUB002, M, N, DUM1, DUM2, DUM3, DUM4, DUM5)
 1200 CONTINUE
      CALL RSUM (2, DUM2, M*N, ANS)
      RETURN 
      END
      SUBROUTINE D3
      PARAMETER (N=100,M=100)
      PARAMETER (M1=M*N)
      COMMON /DATA/ DUM1(M),DUM2(M1),DUM3(M1),DUM4(M1),DUM5(M1)
      EXTERNAL SUB003
      DIMENSION CON(4)
      DATA ANS /.35722539999987E+4/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 1400
        DO 1000 J = 1, 4
          CALL INIT (DUM5(J),CON(J),N*M,4)
          CALL INIT (DUM4(J),CON(J),N*M,4)
          CALL INIT (DUM3(J),CON(J),N*M,4)
          CALL INIT (DUM2(J),CON(J),N*M,4)
          CALL INIT (DUM1(J),CON(J),N*M,4)
 1000   CONTINUE
        CALL CALLP7 (3, SUB003, M, N, DUM1, DUM2, DUM3, DUM4, DUM5)
 1200 CONTINUE
      CALL RSUM (3, DUM2, M*N, ANS)
      RETURN 
      END
      SUBROUTINE D4
      PARAMETER (N=500,M=1000)
      PARAMETER (M1=M*N)
      COMMON /DATA/ DUM1(M),DUM2(M1),DUM3(M1),DUM4(M1),DUM5(M1)
      EXTERNAL SUB004
      DIMENSION CON(4)
      DATA ANS /.17861269999898E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 60
        DO 1000 J = 1, 4
          CALL INIT (DUM5(J),CON(J),M1,4)
          CALL INIT (DUM4(J),CON(J),M1,4)
          CALL INIT (DUM3(J),CON(J),M1,4)
          CALL INIT (DUM2(J),CON(J),M1,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP7 (4, SUB004, M, N, DUM1, DUM2, DUM3, DUM4, DUM5)
 1200 CONTINUE
      CALL RSUM (4, DUM2, M*N, ANS)
      RETURN 
      END
      SUBROUTINE D5
      PARAMETER (M1=21*101*101)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB005
      DIMENSION CON(4)
      DATA ANS /-.42552817357591E-3/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 20
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP1 (5, SUB005, SUM)
 1200 CONTINUE
      CALL RSUM (5, SUM, 1, ANS)
      RETURN 
      END
      SUBROUTINE D6
      PARAMETER (M1=6*100*100*10+9*10*100+5*100)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB006
      DIMENSION CON(4)
      DATA ANS /.80019108524855E+2/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 42
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (6, SUB006)
 1200 CONTINUE
      CALL RSUM (6, DUM1, 200, ANS)
      RETURN 
      END
      SUBROUTINE D7
      PARAMETER (M1=22*101*101)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB007
      DIMENSION CON(4)
      DATA ANS /.18733898409327E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 350
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (7, SUB007)
 1200 CONTINUE
      CALL RSUM (7, DUM1, 3*101*101, ANS)
      RETURN 
      END
      SUBROUTINE D8
      PARAMETER (M1=100*1000,M2=1000)
      COMMON /DATA/ DUM1(M1),DUM2(M2),DUM3(M2)
      EXTERNAL SUB008
      DIMENSION CON(4)
      DATA ANS /.18724499999957E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 8
        DO 1000 J = 1, 4
          CALL INIT (DUM3(J),CON(J),M2,4)
          CALL INIT (DUM2(J),CON(J),M2,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP6 (8, SUB008, 1000, 100, DUM2, DUM3, DUM1, IDUM)
 1200 CONTINUE
      CALL RSUM (8, DUM1, M1, ANS)
      RETURN 
      END
      SUBROUTINE D9
      PARAMETER (M1=27000+6*30,M2=27000*3)
      COMMON /DATA/ DUM1(M1),DUM2(M2)
      EXTERNAL SUB009
      DIMENSION CON(4)
      DATA ANS /.79003609513564E+3/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 100
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL INIT (DUM2, 0, M2, 1)
        CALL CALLP4 (9, SUB009, .5, 1.5, 3.14, DUM2)
 1200 CONTINUE
      CALL RSUM (9, DUM2, M2, ANS)
      RETURN 
      END
      SUBROUTINE D10
      PARAMETER (M1=1600000,M2=12*12*24*6*24)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB010
      DIMENSION CON(4),IDUM(4)
      DATA IDUM/4*1/
      DATA ANS /-.10353899519837E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 2
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP3 (10, SUB010, 1, 1, IDUM)
 1200 CONTINUE
      CALL RSUM (10, DUM1, M2, ANS)
      RETURN 
      END
      SUBROUTINE D11
      PARAMETER (M1=1000+1000*1000)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB011
      DIMENSION CON(4)
      DATA ANS /.11420219304919E+0/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 7
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (11, SUB011)
 1200 CONTINUE
      CALL RSUM (11, DUM1, 1000, ANS)
      RETURN 
      END
      SUBROUTINE D12
      PARAMETER (II=101,JJ=101,KK=26)
      PARAMETER (IJK=II*JJ*KK)
      PARAMETER (M1=IJK+260)
      COMMON /DATA/ DUM1(M1),DUM2(IJK)
      EXTERNAL SUB012
      DIMENSION CON(4)
      DATA ANS /.37440876253074E+3/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 7
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL INIT (DUM2, .00014576, IJK, 1)
        CALL CALLP1 (12, SUB012, DUM2)
 1200 CONTINUE
      CALL RSUM (12, DUM2, IJK, ANS)
      RETURN 
      END
      SUBROUTINE D13
      PARAMETER (M1=4*1000*100+5*1000+10*100)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB013
      DIMENSION CON(4)
      DATA ANS /.18872364107147E+1/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 6
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (13, SUB013)
 1200 CONTINUE
      CALL RSUM (13, DUM1, 100, ANS)
      RETURN 
      END
      SUBROUTINE D14
      PARAMETER (M1=1900000)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB014
      DIMENSION CON(4)
      DATA ANS /.47934719999997E+3/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 3
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (14, SUB014)
 1200 CONTINUE
      CALL RSUM (14, DUM1, 48*72*32, ANS)
      RETURN 
      END
      SUBROUTINE D15
      PARAMETER (M1=110000,M=10000,NM=172)
      COMMON /DATA/ DUM1(M1),DUM2(M),IDUM3(NM),IDUM4(NM)
      EXTERNAL SUB015
      DIMENSION CON(4)
      DATA ANS /.75126427075617E-1/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/3.1234/
      DO 1200 I = 1, 2
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL INIT (DUM2, 0, M, 1)
        CALL IINIT (IDUM3, 0, NM, 1)
        CALL IINIT (IDUM4, 0, NM, 1)
        CALL CALLP3 (15, SUB015, DUM2, IDUM3, IDUM4)
 1200 CONTINUE
      CALL RSUM (15, DUM2, M, ANS)
      RETURN 
      END
      SUBROUTINE D16
      COMPLEX DUM1,DUM2,ANS,CON
      PARAMETER (M1=10000)
      COMMON /DATA/ I1,I2,I3,I4,I5,I6,I7,DUM1(M1),DUM2(2)
      EXTERNAL SUB016
      DIMENSION CON(4)
      DATA ANS /(-.36348926727874E-14,-.24624692117746E-14)/
      DATA CON(1)/(.14,.14)/,CON(2)/(.5678,.5678)/
     *    ,CON(3)/(.001,.001)/,CON(4)/(.1234,.1234)/
      I1 = 5000
      I2 = 1
      I3 = 200
      I4 = 1
      I5 = 0
      I6 = 1
      I7 = 1
      DO 1000 J = 1, 4
        CALL CINIT (DUM1(J),CON(J),M1,4)
 1000 CONTINUE
      DUM2(1) = 1.
      DUM2(2) = 1.
 1200 CONTINUE
      CALL CALLP2 (16, SUB016, DUM1, DUM2)
      CALL CCSUM (16, DUM1, 5000, ANS)
      RETURN 
      END
      SUBROUTINE D17
      PARAMETER (NNX=44)
      PARAMETER (NNY=44)
      PARAMETER (NNZ=4)
      PARAMETER (MXC=11)
      PARAMETER (MXP=3)
      PARAMETER (MXW=5)
      PARAMETER (NXYN=NNX*NNY)
      PARAMETER (NBL=NXYN*NNZ)
      PARAMETER (NBLW=NBL+MXW)
      PARAMETER (M1=1589000,M2=60)
      COMMON /DATA/ DUM1(M1)
      COMMON /INTS/IDUM1(M2)
      EXTERNAL SUB017
      DIMENSION CON(4)
      DATA ANS /.29400934903364E+11/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 4
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL IINIT (IDUM1, 1, M2, 1)
        CALL CALLP0 (17, SUB017)
 1200 CONTINUE
      CALL RSUM (17, DUM1, NBLW*MXC, ANS)
      RETURN 
      END
      SUBROUTINE D18
      PARAMETER (M1=700000,M2=100000)
      COMMON /DATA/ DUM1(M1),DUM2(M2),DUM3(M2),DUM4(M2)
      EXTERNAL SUB018
      DIMENSION CON(4)
      DATA ANS /.25530009809248E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.19/,CON(4)/.1234/
      DO 1200 I = 1, 100
        DO 1000 J = 1, 4
          CALL INIT (DUM4(J),CON(J),M2,4)
          CALL INIT (DUM3(J),CON(J),M2,4)
          CALL INIT (DUM2(J),CON(J),M2,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP4 (18, SUB018, DUM1, DUM2, DUM3, DUM4)
 1200 CONTINUE
      CALL RSUM (18, DUM4, M2, ANS)
      RETURN 
      END
      SUBROUTINE D19
      PARAMETER (M1=688000)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB019
      DIMENSION CON(4)
      DATA ANS /.58082299171138E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 70
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (19, SUB019)
 1200 CONTINUE
      CALL RSUM (19, DUM1, M1, ANS)
      RETURN 
      END
      SUBROUTINE D20
      PARAMETER (M1=29791*9+100*5,M2=29791*5,M3=100)
      COMMON /DATA/ DUM1(M1),DUM2(M2),IDUM3(M3),IDUM4(M3)
      EXTERNAL SUB020
      DIMENSION CON(4)
      DATA ANS /.46771869999876E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1000 J = 1, 4
        CALL INIT (DUM1(J),CON(J),M1,4)
 1000 CONTINUE
      CALL INIT (DUM2, 3.14, M2, 1)
      CALL IINIT (IDUM3, 1, M3, 1)
      CALL IINIT (IDUM4, 1, M3, 1)
 1200 CONTINUE
      CALL CALLP3 (20, SUB020, DUM2, IDUM3, IDUM4)
      CALL RSUM (20, DUM2, M2, ANS)
      RETURN 
      END
      SUBROUTINE D21
      PARAMETER (M1=100000)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB021
      DIMENSION CON(4)
      DATA ANS /.35916589036686E+11/
      DATA CON(1)/.4/,CON(2)/.678/,CON(3)/.9/,
     *     CON(4)/.234/
      DO 1200 I = 1, 3
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP4 (21, SUB021, 100, 100, 100, 0)
 1200 CONTINUE
      CALL RSUM (21, DUM1, 6000, ANS)
      RETURN 
      END
      SUBROUTINE D22
      PARAMETER (M1=625175,M2=31250)
      COMMON /DATA/ DUM1(M1),DUM2(M2)
      EXTERNAL SUB022
      DIMENSION CON(4)
      DATA ANS /.30710253481606E+8/
      DATA CON(1)/1.4/,CON(2)/5.678/,CON(3)/1.9/,CON(4)/1.234/
      DO 1200 I = 1, 14
        DO 1000 J = 1, 4
          CALL INIT (DUM2(J),CON(J),M2,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP4 (22, SUB022, DUM2, 1, 150, 5)
 1200 CONTINUE
      CALL RSUM (22, DUM2, M2, ANS)
      RETURN 
      END
      SUBROUTINE D23
      PARAMETER (M1=513000)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB023
      DIMENSION CON(4)
      DATA ANS /-.34586383403291E-2/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 1
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP1 (23, SUB023, SUM)
 1200 CONTINUE
      CALL RSUM (23, SUM, 1, ANS)
      RETURN 
      END
      SUBROUTINE D24
      PARAMETER (M1=10200,M2=10000)
      COMMON /DATA/ DUM1(M1),DUM2(M2),DUM3(M2),DUM4(M2)
      EXTERNAL SUB024
      DIMENSION CON(4)
      DATA ANS /-.20207560939631E+3/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.19/,CON(4)/.1234/
      DO 1200 I = 1, 21
        DO 1000 J = 1, 4
          CALL INIT (DUM2(J),CON(J),M2,4)
          CALL INIT (DUM3(J),CON(J),M2,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL INIT (DUM4, .0001, M2, 1)
        CALL CALLP3 (24, SUB024, DUM2, DUM3, DUM4)
 1200 CONTINUE
      CALL RSUM (24, DUM2, M2*2, ANS)
      RETURN 
      END
      SUBROUTINE D25
      PARAMETER (M1=50000,IJ=28)
      COMMON /DATA/ DUM1(M1),DUM2(IJ)
      EXTERNAL SUB025
      DIMENSION CON(4)
      DATA ANS /.26728212215467E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 3
        DO 1000 J = 1, 4
          CALL INIT (DUM2(J),CON(J),IJ,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP1 (25, SUB025, DUM2)
 1200 CONTINUE
      CALL RSUM (25, DUM2, IJ, ANS)
      RETURN 
      END
      SUBROUTINE D26
      PARAMETER (M1=36,M2=47000,M3=44)
      COMPLEX DUM1,CCON
      COMMON /DATA/ DUM1(M1),DUM2(M2),DUM3(M3)
      EXTERNAL SUB026
      DIMENSION CON(4)
      DATA ANS /-.78506753418025E+2/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.19/,CON(4)/.1234/
      DO 1200 I = 1, 12
        DO 1000 J = 1, 4
          CALL INIT (DUM2(J),CON(J),M2,4)
          CCON = CON(J)
          CALL CINIT (DUM1(J),CCON,M1,4)
 1000   CONTINUE
        CALL INIT (DUM3, 0, M3, 1)
        CALL CALLP1 (26, SUB026, DUM3)
 1200 CONTINUE
      CALL RSUM (26, DUM3, M3, ANS)
      RETURN 
      END
      SUBROUTINE D27
      PARAMETER (M1=100*100*100,IJ=40)
      COMMON /DATA/ DUM1(M1),DUM2(IJ)
      EXTERNAL SUB027
      DIMENSION CON(4)
      DATA ANS /.21304319999997E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 16
        DO 1000 J = 1, 4
          CALL INIT (DUM2(J),CON(J),IJ,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (27, SUB027)
 1200 CONTINUE
      CALL RSUM (27, DUM1, M1, ANS)
      RETURN 
      END
      SUBROUTINE D28
      PARAMETER (M1=200500)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB028
      DIMENSION CON(4)
      DATA ANS /.20164390072275E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 2
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP0 (28, SUB028)
 1200 CONTINUE
      CALL RSUM (28, DUM1, 1000*100, ANS)
      RETURN 
      END
      SUBROUTINE D29
      PARAMETER (M1=44000)
      COMMON /DATA/ DUM1(M1),DUM2(25)
      EXTERNAL SUB029
      DIMENSION CON(4)
      DATA ANS /.14228764570541E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      Do 1200 I = 1, 5
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
      CALL INIT(DUM2,0.0,25,1)
      CALL CALLP1 (29, SUB029, DUM2)
 1200 CONTINUE
      CALL RSUM (29, DUM2, 25, ANS)
      RETURN 
      END
      SUBROUTINE D30
      PARAMETER (M1=800000,I2=1000,J2=100)
      COMMON /DATA/ DUM1(M1),DUM2(J2)
      EXTERNAL SUB030
      DIMENSION CON(4)
      DATA ANS /.66713894216008E+5/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 200
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP3 (30, SUB030, J2, I2, DUM2)
 1200 CONTINUE
      CALL RSUM (30, DUM2, J2, ANS)
      RETURN 
      END
      SUBROUTINE D31
      PARAMETER (LS=1,LE=101,KS=1,KE=129,KD=129,LD=101,MD=129)
      PARAMETER (M1=MD*25,M2=LD*KD*125,M3=LD*75,M4=LD*5,M5=LD*KD*5)
      PARAMETER (M6=M2+M3+M4+M5)
      COMMON /DATA/ DUM1(M1),DUM2(M6)
      EXTERNAL SUB031
      DATA ANS / .32234316520824E+02 /
      DATA CON1 /.01 /, CON2 /1.0/
      DO 1000 I = 1, 6
        CALL INIT (DUM1, CON2, M1, 1)
        CALL INIT (DUM2, CON1, M6, 1)
        CALL CALLP0 (31, SUB031)
 1000 CONTINUE
      CALL RSUM (31, DUM2, M5, ANS)
      RETURN 
      END
      SUBROUTINE D32
      PARAMETER (JMAX=120,KMAX=23,LMAX=30)
      PARAMETER (M2=JMAX*KMAX*LMAX*17,M3=JMAX*JMAX*4)
      PARAMETER (M1=JMAX*KMAX*LMAX*6,M4=M2+M3+5)
      COMMON /DATA/ DUM1(M1),DUM2(M4)
      EXTERNAL SUB032
      DATA ANS /.12279940726070E+6/
      DATA CON1/3.14/,CON2/.5678/
      DO 1000 I = 1, 5
        CALL INIT (DUM1, CON2, M1, 1)
        CALL INIT (DUM2, CON1, M4, 1)
        CALL CALLP0 (32, SUB032)
 1000 CONTINUE
      CALL RSUM (32, DUM1, M1, ANS)
      RETURN 
      END
      SUBROUTINE D33
      PARAMETER (M1=15000,I2=1000)
      COMMON /DATA/ DUM1(M1),JM1(4*I2),JM2(I2),JM3(I2),JM4(I2)
      COMMON /DATA/ JM5(I2),JM6(I2)
      EXTERNAL SUB033
      DIMENSION CON(4)
      DATA ANS /.36315788655113E+4/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 15
        DO 1000 J = 1, 4
          CALL IINIT (JM1(J),J,9000,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP7 (33, SUB033, JM1, JM2, JM3, JM4, JM5, JM6, I2)
 1200 CONTINUE
      CALL RSUM (33, DUM1, I2*5, ANS)
      RETURN 
      END
      SUBROUTINE D34
      PARAMETER (M1=37*100*100)
      COMMON /DATA/ DUM1(M1)
      EXTERNAL SUB034
      DIMENSION CON(4)
      DATA ANS /.61065011581289E+6/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 10
        DO 1000 J = 1, 4
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP2 (34, SUB034, 100, 100)
 1200 CONTINUE
      CALL RSUM (34, DUM1, 100*100, ANS)
      RETURN 
      END
      SUBROUTINE D35
      PARAMETER (M1=500000,I2=96,J2=24,K2=24)
      COMMON /DATA/ DUM1(M1),DUM2(M1),DUM3(M1),DUM4(M1)
      EXTERNAL SUB035
      DIMENSION CON(4)
      DATA ANS /.13346223580218E+4/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1200 I = 1, 2
        DO 1000 J = 1, 4
          CALL INIT (DUM4(J),CON(J),M1,4)
          CALL INIT (DUM3(J),CON(J),M1,4)
          CALL INIT (DUM2(J),CON(J),M1,4)
          CALL INIT (DUM1(J),CON(J),M1,4)
 1000   CONTINUE
        CALL CALLP4 (35, SUB035, I2, J2, K2, RTRMS)
 1200 CONTINUE
      CALL RSUM (35, RTRMS, 1, ANS)
      RETURN 
      END
      SUBROUTINE D36
      PARAMETER (M1=241000,N=20,M=80)
      COMMON /DATA/ DUM1(M1),DUM2(N*M)
      EXTERNAL SUB036
      DIMENSION CON(4)
      DATA ANS /.32343671293395E+4/
      DATA CON(1)/.14/,CON(2)/.5678/,CON(3)/.0010/,CON(4)/.1234/
      DO 1000 J = 1, 4
        CALL INIT (DUM1(J),CON(J),M1,4)
 1000 CONTINUE
      CALL CALLP3 (36, SUB036, N, M, DUM2)
      CALL RSUM (36, DUM2, N*M, ANS)
      RETURN 
      END
        SUBROUTINE SUB001(M,N)
        PARAMETER (MM=100,NN=1000)
	COMMON /DATA/ A(MM,NN)
        COMMON /DATA/ X(MM,NN),Y(MM,NN),Z(MM,NN)
 
      S = .0001
      DO 1400 I = 1, M
        DO 1000 J = 1, N
          A(I,J) = A(I,J) + 1
          IF (A(I,J) .EQ. 0) GO TO 1200
 1000   CONTINUE
 1200   CONTINUE
 1400 CONTINUE
 
      DO 1800 I = 1, M
        DO 1600 J = 1, N
          A(I,J) = 1
 1600   CONTINUE
        A(I,I) = A(I,I) + 1
 1800 CONTINUE
 
      DO 2200 I = 1, M
        DO 2000 J = 1, N
          A(I,J) = S
          Y(I,J) = (X(I,J)+Z(I,J))*S
          S = Y(I,J) + X(I,J)
 2000   CONTINUE
 2200 CONTINUE
 
      DO 2600 I = 1, M
        DO 2400 J = 1, N
          X(I,J) = Y(I,J)
          Y(I,J) = X(I,J)*Z(I,J)
 2400   CONTINUE
 2600 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB002(M,N,A1,A2,B2,C2,D2)
      DIMENSION A2(M,N)
      REAL A1(M)
      REAL B2(M,N)
      REAL C2(M,N)
      REAL D2(M,N)
      DATA S1/0/
C
C     DOUBLY DIMENSIONED ARRAY - SIMPLE ASSIGNMENT
C
      DO 1200 I = 1, N
        DO 1000 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
 1000   CONTINUE
 1200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH SCALAR MULTIPLIER
C
      DO 1600 I = 1, N
        DO 1400 J = 1, M
          A2(J,I) = B2(J,I) + S1*C2(J,I)
 1400   CONTINUE
 1600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY - WITH REUSED VALUE
C
      DO 2000 I = 1, N
        DO 1800 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
          B2(J,I) = A2(J,I) + D2(J,I)
 1800   CONTINUE
 2000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE SCALAR TEMPORARY
C
      DO 2400 I = 1, N
        DO 2200 J = 1, M
          A06 = B2(J,I) + C2(J,I)
          A2(J,I) = A06*D2(J,I)
 2200   CONTINUE
 2400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE ARRAY TEMPORARY
C
      DO 2800 I = 1, N
        DO 2600 J = 1, M
          A1(J) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(J)*D2(J,I)
 2600   CONTINUE
 2800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB003(M,N,A1,A2,B2,C2,D2)
      DIMENSION A2(M,N)
      REAL A1(M)
      REAL B2(M,N)
      REAL C2(M,N)
      REAL D2(M,N)
      DATA S1/0/
C
C     DOUBLY DIMENSIONED ARRAY - SIMPLE ASSIGNMENT
C
      DO 1200 I = 1, N
        DO 1000 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
 1000   CONTINUE
 1200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH SCALAR MULTIPLIER
C
      DO 1600 I = 1, N
        DO 1400 J = 1, M
          A2(J,I) = B2(J,I) + S1*C2(J,I)
 1400   CONTINUE
 1600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY - WITH REUSED VALUE
C
      DO 2000 I = 1, N
        DO 1800 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
          B2(J,I) = A2(J,I) + D2(J,I)
 1800   CONTINUE
 2000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE SCALAR TEMPORARY
C
      DO 2400 I = 1, N
        DO 2200 J = 1, M
          A06 = B2(J,I) + C2(J,I)
          A2(J,I) = A06*D2(J,I)
 2200   CONTINUE
 2400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE ARRAY TEMPORARY
C
      DO 2800 I = 1, N
        DO 2600 J = 1, M
          A1(J) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(J)*D2(J,I)
 2600   CONTINUE
 2800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB004(M,N,A1,A2,B2,C2,D2)
      DIMENSION A2(M,N)
      REAL A1(M)
      REAL B2(M,N)
      REAL C2(M,N)
      REAL D2(M,N)
      DATA S1/0/
C
C     DOUBLY DIMENSIONED ARRAY - SIMPLE ASSIGNMENT
C
      DO 1200 I = 1, N
        DO 1000 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
 1000   CONTINUE
 1200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH SCALAR MULTIPLIER
C
      DO 1600 I = 1, N
        DO 1400 J = 1, M
          A2(J,I) = B2(J,I) + S1*C2(J,I)
 1400   CONTINUE
 1600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY - WITH REUSED VALUE
C
      DO 2000 I = 1, N
        DO 1800 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
          B2(J,I) = A2(J,I) + D2(J,I)
 1800   CONTINUE
 2000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE SCALAR TEMPORARY
C
      DO 2400 I = 1, N
        DO 2200 J = 1, M
          A06 = B2(J,I) + C2(J,I)
          A2(J,I) = A06*D2(J,I)
 2200   CONTINUE
 2400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE ARRAY TEMPORARY
C
      DO 2800 I = 1, N
        DO 2600 J = 1, M
          A1(J) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(J)*D2(J,I)
 2600   CONTINUE
 2800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB005(SUM)
      PARAMETER(II=101)
      COMMON /DATA/
     1 R(II,II),Z(II,II),U(II,II),V(II,II),AJ(II,II)
     2,ENERGY(II,II),P(II,II),Q(II,II),TEMP(II,II)
     3,RHO(II,II),DTAU(II,II),MASS(II,II),NBC(II,II)
      REAL MASS
      COMMON /DATA/
     1 A(II,II),B(II,II),CBB(II,II),DBB(II,II)
     2,ODTEMP(II,II),SIG(II,II),CC(II,II)
      COMMON /DATA/ SUMKV(II),SUMLV(II),DENOMV(II),TEMPRV(II)
      DATA TFLR /0.0001/
      LMNP = 2
      KMNP = 2
      LMX = 100
      KMX = 100
      LMN = 2
      KMN = 2
      DTNPH = 3.14
      DO 1200 L = LMNP, LMX
        DO 1000 K = KMNP, KMX
          CC(K,L) = (0.0001*SQRT(TEMP(K,L))*TEMP(K,L)**2)/AJ(K,L)
          SIG(K,L) = MASS(K,L)*SIG(K,L)/DTNPH
          ODTEMP(K,L) = TEMP(K,L)
 1000   CONTINUE
 1200 CONTINUE
 
 
      DO 1600 L = LMNP, LMX
        DO 1400 K = KMN, KMX
          DBB(K,L) = (2.0*CC(K+1,L)*CC(K,L))/(CC(K+1,L)+CC(K,L))*(0.5*(R
     1       (K,L-1)+R(K,L))*((R(K,L)-R(K,L-1))**2+(Z(K,L)-Z(K,L-1))**2)
     2       )
 1400   CONTINUE
 1600 CONTINUE
 
      DO 2000 K = KMNP, KMX
        DO 1800 L = LMN, LMX
          CBB(K,L) = (2.0*CC(K,L)*CC(K,L+1))/(CC(K,L)+CC(K,L+1))*(0.5*(R
     1       (K-1,L)+R(K,L))*((R(K,L)-R(K-1,L))**2+(Z(K,L)-Z(K-1,L))**2)
     2       )
 1800   CONTINUE
 2000 CONTINUE
 
 
      DO 2400 L = LMNP, LMX
        DO 2200 K = KMNP, KMX
          DENOMV(K) = SIG(K,L) + CBB(K,L) + CBB(K,L-1)*(1.-A(K,L-1))
          A(K,L) = CBB(K,L)/DENOMV(K)
          B(K,L) = (SIG(K,L)*TEMP(K,L)+CBB(K,L-1)*B(K,L-1))/DENOMV(K)
 2200   CONTINUE
 2400 CONTINUE
 
      ML = LMX + 1
      DO 2800 L = LMNP, LMX
        ML = ML - 1
        DO 2600 K = KMNP, KMX
          TEMP(K,ML) = A(K,ML)*TEMP(K,ML+1) + B(K,ML)
 2600   CONTINUE
 2800 CONTINUE
 
      DO 3200 K = KMNP, KMX
        DO 3000 L = LMNP, LMX
          DENOMV(L) = SIG(K,L) + DBB(K,L) + DBB(K-1,L)*(1.-A(K-1,L))
          A(K,L) = DBB(K,L)/DENOMV(L)
          B(K,L) = (SIG(K,L)*TEMP(K,L)+DBB(K-1,L)*B(K-1,L))/DENOMV(L)
 3000   CONTINUE
 3200 CONTINUE
 
      ML = KMX + 1
      DO 3600 K = KMNP, KMX
        ML = ML - 1
        DO 3400 L = LMNP, LMX
          TEMP(ML,L) = A(ML,L)*TEMP(ML+1,L) + B(ML,L)
 3400   CONTINUE
 3600 CONTINUE
 
      YE = -1.0
      DO 4400 L = LMNP, LMX
        DO 3800 K = KMNP, KMX
          TEMP(K,L) = AMAX1(TEMP(K,L),TFLR)
          TEMPRV(K) = ABS((TEMP(K,L)-ODTEMP(K,L))/ODTEMP(K,L))
 3800   CONTINUE
 
        DO 4200 K = KMNP, KMX
          IF (TEMPRV(K) .LE. YE) GO TO 4000
          YE = TEMPRV(K)
          KE = K
          LE = L
 4000     CONTINUE
 4200   CONTINUE
 
 4400 CONTINUE
      KEN = KE
      LEN = LE
 
      SUM = 0.0
      DO 4600 K = KMN, KMX
        SUMKV(K) = CBB(K,LMN)*(TEMP(K,LMN)-TEMP(K,LMN+1)) + CBB(K,LMX)*(
     1     TEMP(K,LMX+1)-TEMP(K,LMX))
 4600 CONTINUE
 
      DO 4800 L = LMN, LMX
        SUMLV(L) = DBB(KMN,L)*(TEMP(KMN,L)-TEMP(KMN+1,L)) + DBB(KMX,L)*(
     1     TEMP(KMX+1,L)-TEMP(KMX,L))
 4800 CONTINUE
 
      DO 5000 K = KMN, KMX
        SUM = SUM + SUMKV(K)
 5000 CONTINUE
      DO 5200 L = LMN, LMX
        SUM = SUM + SUMLV(L)
 5200 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB006
      PARAMETER (NY=10,NX=100,NZ=100)
      COMMON /DATA/
     *  U(NZ),T(NZ),
     *  UX(NX,NY,NZ),VY(NX,NY,NZ),POTT(NX,NY,NZ),DKZM(NX,NY,NZ),
     *  DKZH(NX,NY,NZ),WZ(NX,NY,NZ),OBUK(NX,NY),USTR(NX,NY),
     *  VDEP(NX,NY),TAVR(NX,NY),TSTR(NX,NY),STEPH(NX,NY),Z0(NX,NY),
     *  ELEV(NX,NY),HMIX(NX,NY),TM(NZ),VM(NZ),UM(NZ)
      DO 2000 J = 1, NY
        DO 1800 I = 1, NX
          ZMH = HMIX(I,J)
          ZNOT = Z0(I,J)
          IF (ELEV(I,J) .LT. 0) THEN
              USTAR = MAX(USTR(I,J),0.001)
              ZNOT = 3.905E-5/USTAR + 1.6046E-3*USTAR**2 - 1.747E-4
              Z0(I,J) = ZNOT
          ENDIF
          IF (J.EQ.1 .OR. J.EQ.NY) THEN
              IF (I.EQ.1 .OR. I.EQ.NX) THEN
                  DO 1000 K = 1, NZ
                    TX = 0.5*POTT(I,J,K)
                    WUX = 0.5*UX(I,J,K)
                    WVX = 0.5*VY(I,J,K)
 
                    TY = 0.5*POTT(I,J,K)
                    WUY = 0.5*UX(I,J,K)
                    WVY = 0.5*VY(I,J,K)
                    XW = (UX(I,J,K)+WUX+WUY)/2. + UM(K)
                    YW = (VY(I,J,K)+WVX+WVY)/2. + VM(K)
                    U(K) = SQRT(XW*XW+YW*YW)
                    T(K) = (POTT(I,J,K)+TX+TY)/2. + TM(K)
 1000             CONTINUE
              ELSE
                  DO 1200 K = 1, NZ
                    TX = 0.25*(POTT(I-1,J,K)+POTT(I+1,J,K))
                    WUX = 0.25*(UX(I-1,J,K)+UX(I+1,J,K))
                    WVX = 0.25*(VY(I-1,J,K)+VY(I+1,J,K))
 
                    TY = 0.5*POTT(I,J,K)
                    WUY = 0.5*UX(I,J,K)
                    WVY = 0.5*VY(I,J,K)
                    XW = (UX(I,J,K)+WUX+WUY)/2. + UM(K)
                    YW = (VY(I,J,K)+WVX+WVY)/2. + VM(K)
                    U(K) = SQRT(XW*XW+YW*YW)
                    T(K) = (POTT(I,J,K)+TX+TY)/2. + TM(K)
 1200             CONTINUE
              ENDIF
          ELSE
              IF (I.EQ.1 .OR. I.EQ.NX) THEN
                  DO 1400 K = 1, NZ
                    TX = 0.5*POTT(I,J,K)
                    WUX = 0.5*UX(I,J,K)
                    WVX = 0.5*VY(I,J,K)
 
                    TY = 0.25*(POTT(I,J-1,K)+POTT(I,J+1,K))
                    WUY = 0.25*(UX(I,J-1,K)+UX(I,J+1,K))
                    WVY = 0.25*(VY(I,J-1,K)+VY(I,J+1,K))
                    XW = (UX(I,J,K)+WUX+WUY)/2. + UM(K)
                    YW = (VY(I,J,K)+WVX+WVY)/2. + VM(K)
                    U(K) = SQRT(XW*XW+YW*YW)
                    T(K) = (POTT(I,J,K)+TX+TY)/2. + TM(K)
 1400             CONTINUE
              ELSE
                  DO 1600 K = 1, NZ
                    TX = 0.25*(POTT(I-1,J,K)+POTT(I+1,J,K))
                    WUX = 0.25*(UX(I-1,J,K)+UX(I+1,J,K))
                    WVX = 0.25*(VY(I-1,J,K)+VY(I+1,J,K))
 
                    TY = 0.25*(POTT(I,J-1,K)+POTT(I,J+1,K))
                    WUY = 0.25*(UX(I,J-1,K)+UX(I,J+1,K))
                    WVY = 0.25*(VY(I,J-1,K)+VY(I,J+1,K))
                    XW = (UX(I,J,K)+WUX+WUY)/2. + UM(K)
                    YW = (VY(I,J,K)+WVX+WVY)/2. + VM(K)
                    U(K) = SQRT(XW*XW+YW*YW)
                    T(K) = (POTT(I,J,K)+TX+TY)/2. + TM(K)
 1600             CONTINUE
              ENDIF
          ENDIF
 1800   CONTINUE
 2000 CONTINUE
      DO 2600 J = 1, NY
        DO 2400 I = 1, NX
          DL = OBUK(I,J)
          TMES = TAVR(I,J)
          USTAR = USTR(I,J)
          ZMH = MAX(40.,HMIX(I,J))
          ZMH = MIN(ZMH,2000.)
          HMIX(I,J) = ZMH
          ZNOT = Z0(I,J)
          DEPFAC = USTAR/500.
          IF (DL .GE. 0) THEN
              VDEP(I,J) = DEPFAC
          ELSE
              ZC = ZMH/DL
              IF (ZC .LT. (-30.)) THEN
                  VDEP(I,J) = 0.5*DEPFAC*(-ZC)**0.6666667
              ELSE
                  VDEP(I,J) = DEPFAC*(1.+(-300/DL)**0.6666667)
              ENDIF
          ENDIF
          VDEP(I,J) = MIN(0.004,VDEP(I,J))
          DO 2200 K = 1, NZ
            DKZM(I,J,K) = U(K)
            DKZH(I,J,K) = T(K)
 2200     CONTINUE
 2400   CONTINUE
 2600 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB007
      PARAMETER(II=101)
      COMMON /DATA/
     * AJ(II,II),
     1 R(II,II),Z(II,II),U(II,II),V(II,II)
     2,ENERGY(II,II),P(II,II),Q(II,II),TEMP(II,II)
     3,RHO(II,II),DTAU(II,II),MASS(II,II),NBC(II,II)
      REAL MASS
 
      COMMON /DATA/ AU(II),AW(II),AUW(II),AJ1(II),AJ3(II)
     1,VN(II),VNP(II),VOL(II)
      DATA P1D6 /0.166666666666667/
      DATA VCUT /1.0E-10/
      KMNP = 2
      LMNP = 2
      LMN = 2
      KMN = 2
      LMX = 100
      KMX = 100
      DTN = .05
      DTNPH = 3.14
 
      DO 1200 L = LMN, LMX
        DO 1000 K = KMN, KMX
          AU(K) = (P(K,L)+Q(K,L))*(Z(K,L-1)-Z(K-1,L)) + (P(K+1,L)+Q(K+1,
     1       L))*(Z(K+1,L)-Z(K,L-1)) + (P(K,L+1)+Q(K,L+1))*(Z(K-1,L)-Z(K
     2       ,L+1)) + (P(K+1,L+1)+Q(K+1,L+1))*(Z(K,L+1)-Z(K+1,L))
          AW(K) = (P(K,L)+Q(K,L))*(R(K,L-1)-R(K-1,L)) + (P(K+1,L)+Q(K+1,
     1       L))*(R(K+1,L)-R(K,L-1)) + (P(K,L+1)+Q(K,L+1))*(R(K-1,L)-R(K
     2       ,L+1)) + (P(K+1,L+1)+Q(K+1,L+1))*(R(K,L+1)-R(K+1,L))
          AUW(K) = RHO(K,L)*AJ(K,L) + RHO(K+1,L)*AJ(K+1,L) + RHO(K,L+1)*
     1       AJ(K,L+1) + RHO(K+1,L+1)*AJ(K+1,L+1)
          AUW(K) = 2./AUW(K)
          AU(K) = -AU(K)*AUW(K)
          AW(K) = AW(K)*AUW(K)
          U(K,L) = U(K,L) + DTN*AU(K)
          V(K,L) = V(K,L) + DTN*AW(K)
 1000   CONTINUE
 1200 CONTINUE
 
      DO 1600 L = LMN, LMX
        DO 1400 K = KMN, KMX
          R(K,L) = R(K,L) + DTNPH*U(K,L)
          Z(K,L) = Z(K,L) + DTNPH*V(K,L)
 1400   CONTINUE
 1600 CONTINUE
 
      DO 2000 L = LMNP, LMX
        DO 1800 K = KMNP, KMX
          AJ1(K) = R(K,L)*(Z(K-1,L)-Z(K,L-1)) + R(K-1,L)*(Z(K,L-1)-Z(K,L
     1       )) + R(K,L-1)*(Z(K,L)-Z(K-1,L))
          IF (AJ1(K) .EQ. 0) AJ1(K) = P1D6
          AJ3(K) = R(K-1,L)*(Z(K-1,L-1)-Z(K,L-1)) + R(K-1,L-1)*(Z(K,L-1)
     1       -Z(K-1,L)) + R(K,L-1)*(Z(K-1,L)-Z(K-1,L-1))
          IF (AJ3(K) .EQ. 0) AJ3(K) = P1D6
          AJ(K,L) = 0.5*(AJ1(K)+AJ3(K))
          VOL(K) = P1D6*((R(K,L)+R(K-1,L)+R(K,L-1))*AJ1(K)+(R(K-1,L)+R(K
     1       -1,L-1)+R(K,L-1))*AJ3(K))
          VN(K) = 1.0/RHO(K,L)
          RHO(K,L) = MASS(K,L)/VOL(K)
          VNP(K) = 1.0/RHO(K,L)
          DTAU(K,L) = VNP(K) - VN(K)
 1800   CONTINUE
 2000 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB008(NM,N,D,E,Z,IERR)
C
      DIMENSION D(N),E(N),Z(NM,N)
      IERR = 0
C
      DO 1000 I = 2, N
        E(I-1) = E(I)
 1000 CONTINUE
C
      F = 0.0
      TST1 = 0.0
      E(N) = 0.0
C
      DO 2600 L = 1, N
        H = ABS(D(L)) + ABS(E(L))
        TST1 = AMAX1(H,TST1)
C
        DO 1200 M = L, N
          TST2 = TST1 + ABS(E(M))
          IF (TST2 .EQ. TST1) GO TO 1400
 1200   CONTINUE
C
 1400   CONTINUE
        IF (M .EQ. L) GO TO 2400
        L1 = L + 1
        L2 = L1 + 1
        G = D(L)
        P = (D(L1)-G)/(2.0*E(L))
        R = 3.14
        D(L) = E(L)/(P+SIGN(R,P))
        D(L1) = E(L)*(P+SIGN(R,P))
        DL1 = D(L1)
        H = G - D(L)
        IF (L2 .GT. N) GO TO 1800
C
        DO 1600 I = L2, N
          D(I) = D(I) - H
 1600   CONTINUE
C
 1800   CONTINUE
        F = F + H
        P = D(M)
        C = 1.0
        C2 = C
        EL1 = E(L1)
        S = 0.0
        MML = M - L
        DO 2200 II = 1, MML
          C3 = C2
          C2 = C
          S2 = S
          I = M - II
          G = C*E(I)
          H = C*P
          R = 3.14
          E(I+1) = S*R
          S = E(I)/R
          C = P/R
          P = C*D(I) - S*G
          D(I+1) = H + S*(C*G+S*D(I))
          DO 2000 K = 1, N
            H = Z(K,I+1)
            Z(K,I+1) = S*Z(K,I) + C*H
            Z(K,I) = C*Z(K,I) - S*H
 2000     CONTINUE
C
 2200   CONTINUE
C
        P = -S*S2*C3*EL1*E(L)/DL1
        E(L) = S*P
        D(L) = C*P
        TST2 = TST1 + ABS(E(L))
 2400   CONTINUE
        D(L) = D(L) + F
 2600 CONTINUE
 
      DO 3600 II = 2, N
        I = II - 1
        K = I
        P = D(I)
C
        DO 3000 J = II, N
          IF (D(J) .GE. P) GO TO 2800
          K = J
          P = D(J)
 2800     CONTINUE
 3000   CONTINUE
C
        IF (K .EQ. I) GO TO 3400
        D(K) = D(I)
        D(I) = P
C
        DO 3200 J = 1, N
          P = Z(J,I)
          Z(J,I) = Z(J,K)
          Z(J,K) = P
 3200   CONTINUE
C
 3400   CONTINUE
 3600 CONTINUE
C
      RETURN 
      END
      SUBROUTINE SUB009(S,T,U,FNDS)
      COMMON /DATA/ FN(27000),SQ(30),TQ(30),UQ(30)
     1 , DSQ(30),DTQ(30),DUQ(30)
      DIMENSION FNDS(27000,3)
 
      A = 0.5
      B = S*S
      SQ(1) = A*(B-S)
      SQ(2) = A + A - B
      SQ(3) = A*(B+S)
      B = T*T
      TQ(1) = A*(B-T)
      TQ(2) = A + A - B
      TQ(3) = A*(B+T)
      B = U*U
      UQ(1) = A*(B-U)
      UQ(2) = A + A - B
      UQ(3) = A*(B+U)
 
      L = 0
      DO 1400 IU = 1, 30
        UQI = UQ(IU)
        DO 1200 IT = 1, 30
          TQI = TQ(IT)
          DO 1000 IS = 1, 30
            L = L + 1
            FN(L) = UQI*TQI*SQ(IS)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
 
      A = 0.5
      DSQ(1) = S - A
      DSQ(2) = (-S) - S
      DSQ(3) = S + A
      DTQ(1) = T - A
      DTQ(2) = (-T) - T
      DTQ(3) = T + A
      DUQ(1) = U - A
      DUQ(2) = (-U) - U
      DUQ(3) = U + A
 
      L = 0
      DO 2000 IU = 1, 30
        UQI = UQ(IU)
        DUQI = DUQ(IU)
        DO 1800 IT = 1, 30
          TQI = TQ(IT)
          DTQI = DTQ(IT)
          DO 1600 IS = 1, 30
            L = L + 1
            FNDS(L,1) = UQI*TQI*DSQ(IS)
            FNDS(L,2) = UQI*DTQI*SQ(IS)
            FNDS(L,3) = DUQI*TQI*SQ(IS)
 1600     CONTINUE
 1800   CONTINUE
 2000 CONTINUE
      END
      SUBROUTINE SUB010(NSRC,IPAR,ISLECT)
      PARAMETER (ISIZE1=12, ISIZE2=24)
      PARAMETER (MAXVOL=ISIZE1**3*ISIZE2, NC=3, NC8=8*NC)
      PARAMETER (NN1=ISIZE1/2, NN48=NC8*MAXVOL/2, NC4=4*NC)
      PARAMETER (NSC=ISIZE1**3)
      COMMON /DATA/ XX(NC8,NN1,ISIZE1,ISIZE1,ISIZE2)
      COMMON /DATA/ PP(NC8,NN1,ISIZE1,ISIZE1,ISIZE2)
      COMMON /DATA/ RQ(NN48)
      COMMON /DATA/ PH(2,NC,2,2,NSC)
      COMMON /DATA/ PN(2,NC,2,2,NSC)
 
      DIMENSION PNS(NC8,ISIZE1,ISIZE1,ISIZE1)
      DIMENSION ISLECT(4),RX(NN48)
      DIMENSION PQ(2,NC,2,2,NSC,ISIZE2)
      EQUIVALENCE (RX,XX), (PP,PQ)
      EQUIVALENCE(PN,PNS)
      B0 = 3.14
      DO 6600 IT = 1, ISIZE2
        IF (NSRC .EQ. 1) THEN
            DO 1800 IMRE = 1, 2
              DO 1600 MUS = 1, 2
                DO 1400 MUG = 1, 2
                  DO 1200 IC = 1, NC
                    DO 1000 ISC = 1, NSC
                      PH(IMRE,IC,MUS,MUG,ISC) = PQ(IMRE,IC,MUS,MUG,ISC,
     1                   IT)
 1000               CONTINUE
 1200             CONTINUE
 1400           CONTINUE
 1600         CONTINUE
 1800       CONTINUE
        ELSE IF (NSRC .EQ. 5) THEN
            DO 2400 IMRE = 1, 2
              DO 2200 IC = 1, 3
                DO 2000 ISC = 1, NSC
                  PH(IMRE,IC,1,1,ISC) = PQ(IMRE,IC,1,2,ISC,IT)
                  PH(IMRE,IC,2,1,ISC) = PQ(IMRE,IC,2,2,ISC,IT)
                  PH(IMRE,IC,1,2,ISC) = PQ(IMRE,IC,1,1,ISC,IT)
                  PH(IMRE,IC,2,2,ISC) = PQ(IMRE,IC,2,1,ISC,IT)
 2000           CONTINUE
 2200         CONTINUE
 2400       CONTINUE
        ENDIF
        IF (IT.NE.1 .AND. ISELC.EQ.0) GO TO 5400
        DO 3400 IMRE = 1, 2
          DO 3200 IC = 1, NC
            DO 3000 MUS = 1, 2
              DO 2800 MUG = 1, 2
                DO 2600 ISC = 1, NSC
                  PN(IMRE,IC,MUS,MUG,ISC) = 0.
 2600           CONTINUE
 2800         CONTINUE
 3000       CONTINUE
 3200     CONTINUE
 3400   CONTINUE
        ISELC = 0
        DO 5200 IS = 1, 4
          IF (ISLECT(IS) .EQ. 1) THEN
              DO 3800 IC = 1, NC
                DO 3600 ISC = 1, NSC
                  PN(1,IC,1,1,ISC) = PN(1,IC,1,1,ISC) + PH(2,IC,2,2,ISC)
                  PN(2,IC,1,1,ISC) = PN(2,IC,1,1,ISC) - PH(1,IC,2,2,ISC)
                  PN(1,IC,2,1,ISC) = PN(1,IC,2,1,ISC) + PH(2,IC,1,2,ISC)
                  PN(2,IC,2,1,ISC) = PN(2,IC,2,1,ISC) - PH(1,IC,1,2,ISC)
                  PN(1,IC,1,2,ISC) = PN(1,IC,1,2,ISC) - PH(2,IC,2,1,ISC)
                  PN(2,IC,1,2,ISC) = PN(2,IC,1,2,ISC) + PH(1,IC,2,1,ISC)
                  PN(1,IC,2,2,ISC) = PN(1,IC,2,2,ISC) - PH(2,IC,1,1,ISC)
                  PN(2,IC,2,2,ISC) = PN(2,IC,2,2,ISC) + PH(1,IC,1,1,ISC)
 3600           CONTINUE
 3800         CONTINUE
              ISELC = ISELC + 1
          ELSE IF (ISLECT(IS) .EQ. 2) THEN
              DO 4200 IC = 1, NC
                DO 4000 ISC = 1, NSC
                  PN(1,IC,1,1,ISC) = PN(1,IC,1,1,ISC) - PH(1,IC,2,2,ISC)
                  PN(2,IC,1,1,ISC) = PN(2,IC,1,1,ISC) - PH(2,IC,2,2,ISC)
                  PN(1,IC,2,1,ISC) = PN(1,IC,2,1,ISC) + PH(1,IC,1,2,ISC)
                  PN(2,IC,2,1,ISC) = PN(2,IC,2,1,ISC) + PH(2,IC,1,2,ISC)
                  PN(1,IC,1,2,ISC) = PN(1,IC,1,2,ISC) + PH(1,IC,2,1,ISC)
                  PN(2,IC,1,2,ISC) = PN(2,IC,1,2,ISC) + PH(2,IC,2,1,ISC)
                  PN(1,IC,2,2,ISC) = PN(1,IC,2,2,ISC) - PH(1,IC,1,1,ISC)
                  PN(2,IC,2,2,ISC) = PN(2,IC,2,2,ISC) - PH(2,IC,1,1,ISC)
 4000           CONTINUE
 4200         CONTINUE
              ISELC = ISELC + 1
          ELSE IF (ISLECT(IS) .EQ. 3) THEN
              DO 4600 IC = 1, NC
                DO 4400 ISC = 1, NSC
                  PN(1,IC,1,1,ISC) = PN(1,IC,1,1,ISC) + PH(2,IC,1,2,ISC)
                  PN(2,IC,1,1,ISC) = PN(2,IC,1,1,ISC) - PH(1,IC,1,2,ISC)
                  PN(1,IC,2,1,ISC) = PN(1,IC,2,1,ISC) - PH(2,IC,2,2,ISC)
                  PN(2,IC,2,1,ISC) = PN(2,IC,2,1,ISC) + PH(1,IC,2,2,ISC)
                  PN(1,IC,1,2,ISC) = PN(1,IC,1,2,ISC) - PH(2,IC,1,1,ISC)
                  PN(2,IC,1,2,ISC) = PN(2,IC,1,2,ISC) + PH(1,IC,1,1,ISC)
                  PN(1,IC,2,2,ISC) = PN(1,IC,2,2,ISC) + PH(2,IC,2,1,ISC)
                  PN(2,IC,2,2,ISC) = PN(2,IC,2,2,ISC) - PH(1,IC,2,1,ISC)
 4400           CONTINUE
 4600         CONTINUE
              ISELC = ISELC + 1
          ELSE IF (ISLECT(IS) .EQ. 4) THEN
              DO 5000 IC = 1, NC
                DO 4800 ISC = 1, NSC
                  PN(1,IC,1,1,ISC) = PN(1,IC,1,1,ISC) - PH(1,IC,1,1,ISC)
                  PN(2,IC,1,1,ISC) = PN(2,IC,1,1,ISC) - PH(2,IC,1,1,ISC)
                  PN(1,IC,2,1,ISC) = PN(1,IC,2,1,ISC) - PH(1,IC,2,1,ISC)
                  PN(2,IC,2,1,ISC) = PN(2,IC,2,1,ISC) - PH(2,IC,2,1,ISC)
                  PN(1,IC,1,2,ISC) = PN(1,IC,1,2,ISC) + PH(1,IC,1,2,ISC)
                  PN(2,IC,1,2,ISC) = PN(2,IC,1,2,ISC) + PH(2,IC,1,2,ISC)
                  PN(1,IC,2,2,ISC) = PN(1,IC,2,2,ISC) + PH(1,IC,2,2,ISC)
                  PN(2,IC,2,2,ISC) = PN(2,IC,2,2,ISC) + PH(2,IC,2,2,ISC)
 4800           CONTINUE
 5000         CONTINUE
              ISELC = ISELC + 1
          ENDIF
 5200   CONTINUE
 5400   CONTINUE
        IF (ISELC .EQ. 0) THEN
            DO 5600 IALL = 1, 8*NC*NSC
              PN(IALL,1,1,1,1) = PH(IALL,1,1,1,1)
 5600       CONTINUE
        ENDIF
        DO 6400 IZ = 1, ISIZE1
          DO 6200 IY = 1, ISIZE1
            DO 6000 IX = 1, NN1
              J0 = MOD(IY+IZ+IT+IPAR,2)
              J1 = 1 - J0
              DO 5800 I = 1, NC8
                XX(I,IX,IY,IZ,IT) = PNS(I,2*IX-J0,IY,IZ)
                PP(I,IX,IY,IZ,IT) = PNS(I,2*IX-J1,IY,IZ)
 5800         CONTINUE
 6000       CONTINUE
 6200     CONTINUE
 6400   CONTINUE
 6600 CONTINUE
      DO 6800 I = 1, NN48
        RX(I) = B0*RX(I) - RQ(I)
 6800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB011
      PARAMETER (N=1000)
      COMMON /DATA/ B(N), A(N,N)
      DO 1200 I = 2, N
        SUM = 0.
        DO 1000 L = 1, I - 1
          SUM = SUM + A(L,I)*B(L)
 1000   CONTINUE
        B(I) = B(I) - SUM
 1200 CONTINUE
 
      NRMAND = (N-1)*1
      IF (NRMAND .EQ. 0) THEN
 
          DO 1600 J = 1, N - 1, 2
            B(J+1) = B(J+1) - A(J,J+1)*B(J)
            DO 1400 I = J + 2, N
              B(I) = B(I) - A(J,I)*B(J) - A(J+1,I)*B(J+1)
 1400       CONTINUE
 1600     CONTINUE
      ELSE
 
          DO 1800 I = 2, N
            B(I) = B(I) - A(1,I)*B(1)
 1800     CONTINUE
 
          DO 2200 J = 2, N - 1, 2
            B(J+1) = B(J+1) - A(J,J+1)*B(J)
            DO 2000 I = J + 2, N
              B(I) = B(I) - A(J,I)*B(J) - A(J+1,I)*B(J+1)
 2000       CONTINUE
 2200     CONTINUE
 
      ENDIF
 
      K = 1
      DO 2400 I = 1, N
        B(I) = B(I)*A(I,I)
        B(I) = B(I)*A(K,1)
        K = K + N + 1
 2400 CONTINUE
      DO 2800 I = N - 1, 1, -1
        SUM = 0.
        DO 2600 L = I + 1, N
          SUM = SUM + A(I,L)*B(L)
 2600   CONTINUE
        B(I) = B(I) - SUM
 2800 CONTINUE
C
      IF (NRMAND .EQ. 0) THEN
 
          DO 3200 J = N, 2, -2
            B(J-1) = B(J-1) - A(J-1,J)*B(J)
            DO 3000 I = J - 2, 1, -1
              B(I) = B(I) - A(I,J)*B(J) - A(I,J-1)*B(J-1)
 3000       CONTINUE
 3200     CONTINUE
 
      ELSE
 
          DO 3400 I = N - 1, 1, -1
            B(I) = B(I) - A(I,N)*B(N)
 3400     CONTINUE
 
          DO 3800 J = N - 1, 2, -2
            B(J-1) = B(J-1) - A(J-1,J)*B(J)
            DO 3600 I = J - 2, 1, -1
              B(I) = B(I) - A(I,J)*B(J) - A(I,J-1)*B(J-1)
 3600       CONTINUE
 3800     CONTINUE
 
      ENDIF
 
 
      RETURN 
      END
      SUBROUTINE SUB012(B)
      PARAMETER (IDA=100,M=100,N=25,NRHS=100,IDB=100,NMAT=100)
      COMMON/DATA/ A(0:IDA, -M:0, 0:N),EPSS(0:256)
      DIMENSION B(0:NRHS, 0:IDB, 0:N)
      DATA EPS/1E-13/
 
      DO 2600 J = 0, N
        I0 = MAX((-M),(-J))
 
        DO 1600 I = I0, -1
          DO 1200 JJ = I0 - I, -1
            DO 1000 L = 0, NMAT
              A(L,I,J) = A(L,I,J) - A(L,JJ,I+J)*A(L,I+JJ,J)
 1000       CONTINUE
 1200     CONTINUE
          DO 1400 L = 0, NMAT
            A(L,I,J) = A(L,I,J)*A(L,0,I+J)
 1400     CONTINUE
 1600   CONTINUE
 
        DO 1800 L = 0, NMAT
          EPSS(L) = EPS*A(L,0,J)
 1800   CONTINUE
        DO 2200 JJ = I0, -1
          DO 2000 L = 0, NMAT
            A(L,0,J) = A(L,0,J) - A(L,JJ,J)**2
 2000     CONTINUE
 2200   CONTINUE
        DO 2400 L = 0, NMAT
          A(L,0,J) = 1./SQRT(ABS(EPSS(L)+A(L,0,J)))
 2400   CONTINUE
 2600 CONTINUE
 
      DO 4400 I = 0, NRHS
        DO 3400 K = 0, N
          DO 2800 L = 0, NMAT
            B(I,L,K) = B(I,L,K)*A(L,0,K)
 2800     CONTINUE
          DO 3200 JJ = 1, MIN(M,N-K)
            DO 3000 L = 0, NMAT
              B(I,L,K+JJ) = B(I,L,K+JJ) - A(L,(-JJ),K+JJ)*B(I,L,K)
 3000       CONTINUE
 3200     CONTINUE
 3400   CONTINUE
 
        DO 4200 K = N, 0, -1
          DO 3600 L = 0, NMAT
            B(I,L,K) = B(I,L,K)*A(L,0,K)
 3600     CONTINUE
          DO 4000 JJ = 1, MIN(M,K)
            DO 3800 L = 0, NMAT
              B(I,L,K-JJ) = B(I,L,K-JJ) - A(L,(-JJ),K)*B(I,L,K)
 3800       CONTINUE
 4000     CONTINUE
 4200   CONTINUE
 4400 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB013
      PARAMETER (IMAX=1000,KMAX=100)
      COMMON /DATA/ GESHEM( IMAX )
      COMMON /DATA/ PS( IMAX ),DEL( IMAX ),SL( IMAX ),
     1QN( IMAX , KMAX ),QN1( IMAX , KMAX ),DQ( IMAX , KMAX ),
     2TN1( IMAX , KMAX )
      COMMON /DATA/ ACUM( IMAX ),PRESS( KMAX ),TIN( KMAX ),QIN( KMAX ),
     1TMST( KMAX ),QMST( KMAX ),DTKUO( KMAX ),DQKUO( KMAX )
     2,ESAT( KMAX )
 
      DT = 3.14
      ACUMT = 4.15
      NKUO = 0
      RELKUO = .2175
      MSTA = 0
      RDT = 1./DT
      CPOVL = 1005./2.5E+6
      RELEPS = RELKUO*0.622
      DO 1200 K = 1, KMAX
        DO 1000 I = 1, IMAX
          DQ(I,K) = QN1(I,K) - QN(I,K)
 1000   CONTINUE
 1200 CONTINUE
      KACUM = 4
      DO 1400 I = 1, IMAX
        ACUM(I) = ACUMT*0.1
 1400 CONTINUE
      DO 1800 K = 1, KMAX
        DO 1600 I = 1, IMAX
          ACUM(I) = ACUM(I) + RDT*DQ(I,K)*DEL(K)
 1600   CONTINUE
 1800 CONTINUE
      DO 4200 I = 1, IMAX
        DO 2000 K = 1, KMAX
          PRESS(K) = SL(K)*PS(I)
 2000   CONTINUE
        DO 2200 K = 1, KMAX
          TIN(K) = TN1(I,K)
          QIN(K) = QN1(I,K)
          IF (QN1(I,K) .LT. .0) QIN(K) = .0
 2200   CONTINUE
        QSATK = .65*.622*ESAT(1)/(PRESS(1)-0.378*ESAT(1))
        QDEF = QIN(1) - QSATK
        TIN(1) = TIN(1) + .25*(TIN(2)-TIN(1))
        HNEW = PS(I)/100.
        DO 2400 K = 2, KMAX
          X = TMST(K) - TIN(K)
 2400   CONTINUE
        NKUO = NKUO + 1
        WATER = 0.
        WATER = WATER + DQ(I,1)*DEL(1)
        WATER = WATER + DQ(I,2)*DEL(2)
        Q1 = 0.
        Q2 = 0.
        DO 3000 K = 2, KMAX
          X = QMST(K) - QIN(K)
          IF (X .LE. 0) GO TO 2600
          Q1 = Q1 + X*DEL(K)
 2600     CONTINUE
          X = TMST(K) - TIN(K)
          IF (X .LE. 0) GO TO 2800
          Q2 = Q2 + X*DEL(K)
 2800     CONTINUE
 3000   CONTINUE
        Q2 = Q2*CPOVL
        QEFF = .92
        IF (Q1.GT.0 .OR. Q2.GT.0) QEFF = WATER/(Q1+Q2)
        QEFF = AMIN1(1.00,QEFF)
 3200   CONTINUE
        DTKUO(K) = X
        X = QEFF*(QMST(K)-QIN(K))
        IF (X .GT. 0) GO TO 3400
        X = 0.
 3400   CONTINUE
        DQKUO(K) = X
 3600   CONTINUE
        DTKUO(1) = 0.
        DQKUO(1) = 0.
        CEVAP = 0.
        DO 3800 K = 2, KMAX
          TIN(K) = TIN(K) + DTKUO(K)
          QIN(K) = DQKUO(K) + QIN(K)
          CEVAP = CEVAP + DQKUO(K)*DEL(K)
 3800   CONTINUE
        FALL = WATER - CEVAP
        GESHEM(I) = GESHEM(I) + PS(I)*FALL/9.8
        QIN(1) = QIN(1) - DQ(I,1)
        IF (DQ(I,2) .GT. 0.) QIN(2) = QIN(2) - DQ(I,2)
        TIN(1) = TN1(I,1)
        DO 4000 K = 1, KMAX
          QN1(I,K) = QIN(K)
          TN1(I,K) = TIN(K)
 4000   CONTINUE
 4200 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB014
           PARAMETER (NI=48,NJ=72,NK=32,NJK=NJ*NK,DTH=1./NJ,DPH=1./NK
     $          ,DS=1./NI,DTDP=DTH*DPH,DVOL=DS*DTDP,TSI=NI,TDS=.5*TSI
     $          ,MLMNV=50,MLMNB=160,NMIN=-4,NMAX=4,MM=18,QN=1.00,QB=0.0
     $          ,NSTA=4,DSTA=2.*DTDP/NSTA,MLMNS=32,MMS=15,INSOL=0
     $          ,IVAC=0,PVAC=1.00,NVI=NI+IVAC
     $          ,NSMIN=-9,NSMAX=13,NJKS=NJK*NSTA,NPROCS=1,QONAX=9.99
     $          ,NSKIP=1,FSCALE=1.7,FXIN=5.0,PSHIFT=1.0,PARFAC=0.5     )
 
      PARAMETER (MD=MLMNS,MDY=MLMNS,ND=NVI,ND1=ND+1,NA=(MD+MDY)*ND+MD)
 
      PARAMETER(LMNB=160)
      COMMON /DATA/BS(NJK,0:NI),TCOS(NJK,MLMNB),TSIN(NJK,MLMNB)
     $              ,VJAC(NJK,0:NI)
      COMMON /DATA/ FPHV (MLMNB,NI)
     $             ,FBJAC(MLMNB,0:NI), FBS(MLMNB,0:NI)
      COMMON /DATA/  BJAC(NJK,0:NI),BJACS(NJK,0:NI)
     $              ,  GTTL(NJK,0:NI), GTPL(NJK,0:NI)
     $              ,  GPPL(NJK,0:NI)
      COMMON /DATA/    BT(NJK,0:NI),   BP(NJK,0:NI),  BSQ(NJK,0:NI)
      COMMON /DATA/    AM(  NI),  PTH(  NI),  PVP(  NI),PVPI(  NI)
     $              ,   FPP(  NI),  FTP(  NI),  PPI(  NI),  PP(  NI)
     $              ,  FPPP(  NI), FTPP(  NI),AIOTA(  NI), VVP(  NI)
     $              , WMAGV(  NI), WMAG(  NI)
     $              ,   CIV(  NI),  CJV(  NI), CIVP(  NI),CJVP(  NI)
     $              ,   CI (  NI),  CJ (  NI), CIP (  NI),CJP (  NI)
     $              ,  CIPI(  NI), CJPI(  NI)
     $              ,   VP (  NI),  VPP(  NI),EQUIV(  NI),EQUI(  NI)
      LVMTPR = 1
      LCURR = 1
      DO 1400 I = 1, NI
        CI(I) = 0.
        CJ(I) = 0.
        VP(I) = 0.
        WMAG(I) = 0.
        DO 1000 JK = 1, NJK
          BP(JK,I) = GPPL(JK,I)*FTP(I) + GTPL(JK,I)*FPP(I)
          BT(JK,I) = GTPL(JK,I)*FTP(I) + GTTL(JK,I)*FPP(I)
          IF (LCURR .EQ. 1) THEN
              CI(I) = CI(I) - DTDP*BP(JK,I)
              CJ(I) = CJ(I) + DTDP*BT(JK,I)
          ENDIF
          IF (LCURR .EQ. 2) THEN
              CI(I) = CIV(I)
              CJ(I) = CJV(I)
          ENDIF
          FPP(I) = FPP(I)
          VP(I) = VP(I) - DTDP*BJAC(JK,I)
 1000   CONTINUE
        DO 1200 JK = 1, NJK
          WMAG(I) = WMAG(I) + 0.5*BSQ(JK,I)*BJAC(JK,I)*DVOL
 1200   CONTINUE
 1400 CONTINUE
      DO 1600 I = 1, NI - 1
        VPI = 0.5*(VP(I+1)+VP(I))
        FTPI = 0.5*(FTP(I+1)+FTP(I))
        FPPI = 0.5*(FPP(I+1)+FPP(I))
        CIPI(I) = TSI*(CI(I+1)-CI(I))
        CJPI(I) = TSI*(CJ(I+1)-CJ(I))
        PVPI(I) = TSI*(PTH(I+1)-PTH(I))
        EQUIN = ABS(CJPI(I)*FPPI) + ABS(CIPI(I)*FTPI) + ABS(VPI*PVPI(I))
        EQUI(I) = ((CJPI(I)*FPPI-CIPI(I)*FTPI)-VPI*PVPI(I))/EQUIN
        PPI(I) = (CJPI(I)*FPPI-CIPI(I)*FTPI)/VPI
 1600 CONTINUE
      DO 2000 I = 2, NI - 1
        FPPP(I) = TDS*(FPP(I+1)-FPP(I-1))
        FTPP(I) = TDS*(FTP(I+1)-FTP(I-1))
        PP(I) = 0.5*(PPI(I)+PPI(I-1))
        CIP(I) = 0.5*(CIPI(I)+CIPI(I-1))
        CJP(I) = 0.5*(CJPI(I)+CJPI(I-1))
        DO 1800 JK = 1, NJK
          BJACS(JK,I) = TDS*(BJAC(JK,I+1)-BJAC(JK,I-1))
 1800   CONTINUE
 2000 CONTINUE
      FTPP(NI) = 2.0*FTPP(NI-1) - FTPP(NI-2)
      FPPP(NI) = 2.0*FPPP(NI-1) - FPPP(NI-2)
      PP(NI) = 1.5*PPI(NI-1) - PPI(NI-2)*0.5
      CIP(NI) = 1.5*CIPI(NI-1) - CIPI(NI-2)*0.5
      CJP(NI) = 1.5*CJPI(NI-1) - CJPI(NI-2)*0.5
      FTPP(1) = 2.0*FTPP(2) - FTPP(3)
      FPPP(1) = 2.0*FPPP(2) - FPPP(3)
      PP(1) = 1.5*PPI(1) - PPI(2)*0.5
      CIP(1) = 1.5*CIPI(1) - CIPI(2)*0.5
      CJP(1) = 1.5*CJPI(1) - CJPI(2)*0.5
      DO 2200 JK = 1, NJK
        BJACS(JK,1) = 2.0*BJACS(JK,2) - BJACS(JK,3)
        BJACS(JK,NI) = 2.0*BJACS(JK,NI-1) - BJACS(JK,NI-2)
 2200 CONTINUE
      DO 3600 I = 1, NI
        DO 2400 JK = 1, NJK
          VJAC(JK,I) = (FPP(I)*CJ(I)-FTP(I)*CI(I))/BSQ(JK,I)
 2400   CONTINUE
        DO 2800 L = 1, LMNB
          FPHV(L,I) = 0.
          FBS(L,I) = 0.
          DO 2600 JK = 1, NJK
            FPHV(L,I) = FPHV(L,I) + VJAC(JK,I)*TCOS(JK,L)
 2600     CONTINUE
          FPHV(L,I) = 2.*DTDP*FPHV(L,I)
          DIFJAC = 2.*(FBJAC(L,I)-FPHV(L,I))/(VP(I)+VVP(I))
          IF (ABS(DIFJAC).GE.1.E-06 .AND. LVMTPR.EQ.1) THEN
          ENDIF
 2800   CONTINUE
        DO 3000 JK = 1, NJK
          BS(JK,I) = 0.
 3000   CONTINUE
        DO 3400 L = 1, LMNB
          DO 3200 JK = 1, NJK
            BS(JK,I) = BS(JK,I) + FBS(L,I)*TSIN(JK,L)
 3200     CONTINUE
 3400   CONTINUE
 3600 CONTINUE
      DO 3800 JK = 1, NJK
        BS(JK,1) = 2.*BS(JK,2) - BS(JK,3)
 3800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB015(FX,JSAVE,KC)
      PARAMETER (NOMOL=172,NATOMS=3,M=10000)
      PARAMETER (NMOL=172,NATOM=3,NMOL1=171,NATMO=1)
      PARAMETER (MAX = NOMOL*NATOM,MXCPUS=8,NCPUS=8)
      COMMON /DATA/ TEMP,RHO,TSTEP,BOXL,BOXH,CUTOFF,CUT2
      COMMON /DATA/ OMAS,HMAS,WTMOL,ROH,ANGLE,FHM,FOM,ROHI,ROHI2
      COMMON /DATA/ QQ,A1,B1,A2,B2,A3,B3,A4,B4,AB1,AB2,AB3,AB4,C1,C2,
     *               QQ2,QQ4,REF1,REF2,REF4
      COMMON /DATA/ UNITT,UNITL,UNITM,BOLTZ,AVGNO,PCC(10)
      COMMON /DATA/ X(M),Y(M),Z(M),FY(M),FZ(M),XM(M),YM(M),ZM(M)
      COMMON /DATA/ XL(NOMOL,14),YL(NOMOL,14),ZL(NOMOL,14),RL(NOMOL,14),
     . RS(NOMOL,14),FF(NOMOL,14),GG(NOMOL,14),FTEMP(NOMOL,4)
      COMMON /DATA/ VIRCPU(MXCPUS),FXT(MAX,MXCPUS),
     . FYT(MAX,MXCPUS),FZT(MAX,MXCPUS)
      DIMENSION FX(M),JSAVE(NOMOL),KC(NOMOL)
      FUNEXP(AB,B,XX) = AB*EXP(-B*XX)*XX
      IDCPU = 0
      VIR = 0
      DO 1200 ID = 1, NCPUS
        VIRCPU(ID) = 0.
        DO 1000 I = 1, MAX
          FXT(I,ID) = 0.
          FYT(I,ID) = 0.
          FZT(I,ID) = 0.
 1000   CONTINUE
 1200 CONTINUE
 
 
      IDCPU = IDCPU + 1
      IW10 = 1
      IWO0 = 2
      IW20 = 3
 
      DO 6400 I = 1, NMOL1
 
 
        IW1 = IW10 + (I-1)*NATOMS
        IWO = IWO0 + (I-1)*NATOMS
        IW2 = IW20 + (I-1)*NATOMS
 
        DO 1400 J = I + 1, NMOL
 
          JW1 = IW10 + (J-1)*NATOMS
 
          XL(J,1) = XM(I) - XM(J)
          XL(J,4) = X(IW1) - XM(J)
          XL(J,5) = X(IW1+2) - XM(J)
          XL(J,2) = XM(I) - X(JW1)
          XL(J,6) = X(IW1) - X(JW1)
          XL(J,8) = X(IW1+2) - X(JW1)
          XL(J,11) = X(IW1+1) - X(JW1)
          XL(J,10) = X(IW1+1) - X(JW1+1)
          XL(J,13) = X(IW1) - X(JW1+1)
          XL(J,14) = X(IW1+2) - X(JW1+1)
          XL(J,3) = XM(I) - X(JW1+2)
          XL(J,7) = X(IW1) - X(JW1+2)
          XL(J,9) = X(IW1+2) - X(JW1+2)
          XL(J,12) = X(IW1+1) - X(JW1+2)
 
          YL(J,1) = YM(I) - YM(J)
          YL(J,4) = Y(IW1) - YM(J)
          YL(J,5) = Y(IW1+2) - YM(J)
          YL(J,2) = YM(I) - Y(JW1)
          YL(J,6) = Y(IW1) - Y(JW1)
          YL(J,8) = Y(IW1+2) - Y(JW1)
          YL(J,11) = Y(IW1+1) - Y(JW1)
          YL(J,10) = Y(IW1+1) - Y(JW1+1)
          YL(J,13) = Y(IW1) - Y(JW1+1)
          YL(J,14) = Y(IW1+2) - Y(JW1+1)
          YL(J,3) = YM(I) - Y(JW1+2)
          YL(J,7) = Y(IW1) - Y(JW1+2)
          YL(J,9) = Y(IW1+2) - Y(JW1+2)
          YL(J,12) = Y(IW1+1) - Y(JW1+2)
 
          ZL(J,1) = ZM(I) - ZM(J)
          ZL(J,4) = Z(IW1) - ZM(J)
          ZL(J,5) = Z(IW1+2) - ZM(J)
          ZL(J,2) = ZM(I) - Z(JW1)
          ZL(J,8) = Z(IW1+2) - Z(JW1)
          ZL(J,6) = Z(IW1) - Z(JW1)
          ZL(J,11) = Z(IW1+1) - Z(JW1)
          ZL(J,10) = Z(IW1+1) - Z(JW1+1)
          ZL(J,13) = Z(IW1) - Z(JW1+1)
          ZL(J,14) = Z(IW1+2) - Z(JW1+1)
          ZL(J,3) = ZM(I) - Z(JW1+2)
          ZL(J,7) = Z(IW1) - Z(JW1+2)
          ZL(J,9) = Z(IW1+2) - Z(JW1+2)
          ZL(J,12) = Z(IW1+1) - Z(JW1+2)
 1400   CONTINUE
 
        DO 1800 K = 1, 14
          DO 1600 J = I + 1, NMOL
            IF(ABS(XL(J,K)).GT.BOXH)XL(J,K)=XL(J,K)-SIGN(BOXL,XL(J,K))
            IF(ABS(YL(J,K)).GT.BOXH)YL(J,K)=YL(J,K)-SIGN(BOXL,YL(J,K))
            IF(ABS(ZL(J,K)).GT.BOXH)ZL(J,K)=ZL(J,K)-SIGN(BOXL,ZL(J,K))
 1600     CONTINUE
 1800   CONTINUE
 
        DO 2000 J = I + 1, NMOL
          KC(J) = 0
 2000   CONTINUE
 
        DO 2400 K = 1, 9
          DO 2200 J = I + 1, NMOL
            RS(J,K)=XL(J,K)*XL(J,K)+YL(J,K)*YL(J,K)+ZL(J,K)*ZL(J,K)
            IF (RS(J,K) .GT. CUT2) KC(J) = KC(J) + 1
 2200     CONTINUE
 2400   CONTINUE
 
        JT = 0
        DO 2600 J = I + 1, NMOL
          IF (KC(J) .LT. 9) THEN
              JT = JT + 1
              JSAVE(JT) = J
          ENDIF
 2600   CONTINUE
        JNUM = JT
 
        DO 3000 K = 1, 14
          DO 2800 J = I + 1, NMOL
            FF(J,K) = 0.
 2800     CONTINUE
 3000   CONTINUE
 
        DO 3200 J = I + 1, NMOL
          IF(RS(J,1).LT.CUT2)FF(J,1)=QQ4*(RS(J,1)*SQRT(RS(J,1)))+REF4
          IF (RS(J,2) .LT. CUT2) FF(J,2) = (-QQ2*(RS(J,2)*SQRT(RS(J,2)))
     1       ) - REF2
          IF (RS(J,3) .LT. CUT2) FF(J,3) = (-QQ2*(RS(J,3)*SQRT(RS(J,3)))
     1       ) - REF2
          IF (RS(J,4) .LT. CUT2) FF(J,4) = (-QQ2*(RS(J,4)*SQRT(RS(J,4)))
     1       ) - REF2
          IF (RS(J,5) .LT. CUT2) FF(J,5) = (-QQ2*(RS(J,5)*SQRT(RS(J,5)))
     1       ) - REF2
          IF (RS(J,6) .LE. CUT2) THEN
              RL(J,6) = SQRT(RS(J,6))
              FF(J,6) = QQ*(RS(J,6)*RL(J,6)) + REF1
          ENDIF
          IF (RS(J,7) .LE. CUT2) THEN
              RL(J,7) = SQRT(RS(J,7))
              FF(J,7) = QQ*(RS(J,7)*RL(J,7)) + REF1
          ENDIF
          IF (RS(J,8) .LE. CUT2) THEN
              RL(J,8) = SQRT(RS(J,8))
              FF(J,8) = QQ*(RS(J,8)*RL(J,8)) + REF1
          ENDIF
          IF (RS(J,9) .LE. CUT2) THEN
              RL(J,9) = SQRT(RS(J,9))
              FF(J,9) = QQ*(RS(J,9)*RL(J,9)) + REF1
          ENDIF
 3200   CONTINUE
 
        DO 3400 J = I + 1, NMOL
          IF (KC(J) .LT. 9) VIRCPU(IDCPU) = VIRCPU(IDCPU) + FF(J,1)*RS(J
     1       ,1) + FF(J,2)*RS(J,2) + FF(J,3)*RS(J,3) + FF(J,4)*RS(J,4)
     2        + FF(J,5)*RS(J,5) + FF(J,6)*RS(J,6) + FF(J,7)*RS(J,7) + FF
     3       (J,8)*RS(J,8) + FF(J,9)*RS(J,9)
 3400   CONTINUE
 
        DO 3600 J = I + 1, NMOL
          IF (KC(J) .EQ. 0) THEN
              RS(J,10) = XL(J,10)*XL(J,10) + YL(J,10)*YL(J,10) + ZL(J,10
     1           )*ZL(J,10)
              RL(J,10) = SQRT(RS(J,10))
              FF(J,10) = FUNEXP(AB1,B1,RL(J,10))
 
              FTEMP(J,1) = FUNEXP(AB2,B2,RL(J,6))
              FF(J,6) = FF(J,6) + FTEMP(J,1)
              RS(J,11) = XL(J,11)*XL(J,11) + YL(J,11)*YL(J,11) + ZL(J,11
     1           )*ZL(J,11)
              RL(J,11) = SQRT(RS(J,11))
              FF(J,11)=FUNEXP(AB3,B3,RL(J,11))-FUNEXP(AB4,B4,RL(J,11))
 
              FTEMP(J,2) = FUNEXP(AB2,B2,RL(J,7))
              FF(J,7) = FF(J,7) + FTEMP(J,2)
              RS(J,12) = XL(J,12)*XL(J,12) + YL(J,12)*YL(J,12) + ZL(J,12
     1           )*ZL(J,12)
              RL(J,12) = SQRT(RS(J,12))
              FF(J,12)=FUNEXP(AB3,B3,RL(J,12))-FUNEXP(AB4,B4,RL(J,12))
 
              FTEMP(J,3) = FUNEXP(AB2,B2,RL(J,8))
              FF(J,8) = FF(J,8) + FTEMP(J,3)
              RS(J,13) = XL(J,13)*XL(J,13) + YL(J,13)*YL(J,13) + ZL(J,13
     1           )*ZL(J,13)
              RL(J,13) = SQRT(RS(J,13))
              FF(J,13)=FUNEXP(AB3,B3,RL(J,13))-FUNEXP(AB4,B4,RL(J,13))
 
              FTEMP(J,4) = FUNEXP(AB2,B2,RL(J,9))
              FF(J,9) = FF(J,9) + FTEMP(J,4)
              RS(J,14) = XL(J,14)*XL(J,14) + YL(J,14)*YL(J,14) + ZL(J,14
     1           )*ZL(J,14)
              RL(J,14) = SQRT(RS(J,14))
              FF(J,14)=FUNEXP(AB3,B3,RL(J,14))-FUNEXP(AB4,B4,RL(J,14))
          ENDIF
 3600   CONTINUE
 
        DO 3800 J = I + 1, NMOL
          IF (KC(J) .EQ. 0) VIRCPU(IDCPU) = VIRCPU(IDCPU) + FF(J,10)*RS(
     1       J,10) + FTEMP(J,1)*RS(J,6) + FF(J,11)*RS(J,11) + FTEMP(J,2)
     2       *RS(J,7) + FF(J,12)*RS(J,12) + FTEMP(J,3)*RS(J,8) + FF(J,13
     3       )*RS(J,13) + FTEMP(J,4)*RS(J,9) + FF(J,14)*RS(J,14)
 3800   CONTINUE
 
        DO 4200 K = 1, 14
          DO 4000 JS = 1, JNUM
            J = JSAVE(JS)
            GG(JS,K) = FF(J,K)*XL(J,K)
 4000     CONTINUE
 4200   CONTINUE
 
        DO 4400 JS = 1, JNUM
          J = JSAVE(JS)
          JW1 = IW10 + (J-1)*NATOMS
          JWO = IWO0 + (J-1)*NATOMS
          JW2 = IW20 + (J-1)*NATOMS
          G110 = GG(JS,10) + GG(JS,1)*C1
          G23 = GG(JS,2) + GG(JS,3)
          G45 = GG(JS,4) + GG(JS,5)
          FTEMP(JS,1) = G110 + GG(JS,11) + GG(JS,12) + C1*G23
          TT1 = GG(JS,1)*C2
          TT = G23*C2 + TT1
          FTEMP(JS,2) = GG(JS,6) + GG(JS,7) + GG(JS,13) + TT + GG(JS,4)
          FTEMP(JS,3) = GG(JS,8) + GG(JS,9) + GG(JS,14) + TT + GG(JS,5)
          TT = G45*C2 + TT1
 
 
          FXT(JWO,IDCPU)=FXT(JWO,IDCPU)-G110-GG(JS,13)-GG(JS,14)-C1*G45
          FXT(JW1,IDCPU) = FXT(JW1,IDCPU) - GG(JS,6) - GG(JS,8) - GG(JS,
     1       11) - TT - GG(JS,2)
          FXT(JW2,IDCPU) = FXT(JW2,IDCPU) - GG(JS,7) - GG(JS,9) - GG(JS,
     1       12) - TT - GG(JS,3)
 4400   CONTINUE
 
        S1 = 0.
        S2 = 0.
        S3 = 0.
        DO 4600 JS = 1, JNUM
          S1 = S1 + FTEMP(JS,1)
          S2 = S2 + FTEMP(JS,2)
          S3 = S3 + FTEMP(JS,3)
 4600   CONTINUE
        FX(IWO) = FX(IWO) + S1
        FX(IW1) = FX(IW1) + S2
        FX(IW2) = FX(IW2) + S3
        DO 5000 K = 1, 14
          DO 4800 JS = 1, JNUM
            J = JSAVE(JS)
            GG(JS,K) = FF(J,K)*YL(J,K)
 4800     CONTINUE
 5000   CONTINUE
 
        DO 5200 JS = 1, JNUM
          J = JSAVE(JS)
          JW1 = IW10 + (J-1)*NATOMS
          JWO = IWO0 + (J-1)*NATOMS
          JW2 = IW20 + (J-1)*NATOMS
 
          G110 = GG(JS,10) + GG(JS,1)*C1
          G23 = GG(JS,2) + GG(JS,3)
          G45 = GG(JS,4) + GG(JS,5)
          FTEMP(JS,1) = G110 + GG(JS,11) + GG(JS,12) + C1*G23
          TT1 = GG(JS,1)*C2
          TT = G23*C2 + TT1
          FTEMP(JS,2) = GG(JS,6) + GG(JS,7) + GG(JS,13) + TT + GG(JS,4)
          FTEMP(JS,3) = GG(JS,8) + GG(JS,9) + GG(JS,14) + TT + GG(JS,5)
          TT = G45*C2 + TT1
          FYT(JWO,IDCPU)=FYT(JWO,IDCPU)-G110-GG(JS,13)-GG(JS,14)-C1*G45
          FYT(JW1,IDCPU) = FYT(JW1,IDCPU) - GG(JS,6) - GG(JS,8) - GG(JS,
     1       11) - TT - GG(JS,2)
          FYT(JW2,IDCPU) = FYT(JW2,IDCPU) - GG(JS,7) - GG(JS,9) - GG(JS,
     1       12) - TT - GG(JS,3)
 5200   CONTINUE
 
        S1 = 0.
        S2 = 0.
        S3 = 0.
        DO 5400 JS = 1, JNUM
          S1 = S1 + FTEMP(JS,1)
          S2 = S2 + FTEMP(JS,2)
          S3 = S3 + FTEMP(JS,3)
 5400   CONTINUE
        FY(IWO) = FY(IWO) + S1
        FY(IW1) = FY(IW1) + S2
        FY(IW2) = FY(IW2) + S3
 
        DO 5800 K = 1, 14
          DO 5600 JS = 1, JNUM
            J = JSAVE(JS)
            GG(JS,K) = FF(J,K)*ZL(J,K)
 5600     CONTINUE
 5800   CONTINUE
 
        DO 6000 JS = 1, JNUM
          J = JSAVE(JS)
          JW1 = IW10 + (J-1)*NATOMS
          JWO = IWO0 + (J-1)*NATOMS
          JW2 = IW20 + (J-1)*NATOMS
 
          G110 = GG(JS,10) + GG(JS,1)*C1
          G23 = GG(JS,2) + GG(JS,3)
          G45 = GG(JS,4) + GG(JS,5)
          FTEMP(JS,1) = G110 + GG(JS,11) + GG(JS,12) + C1*G23
          TT1 = GG(JS,1)*C2
          TT = G23*C2 + TT1
          FTEMP(JS,2) = GG(JS,6) + GG(JS,7) + GG(JS,13) + TT + GG(JS,4)
          FTEMP(JS,3) = GG(JS,8) + GG(JS,9) + GG(JS,14) + TT + GG(JS,5)
          TT = G45*C2 + TT1
          FZT(JWO,IDCPU)=FZT(JWO,IDCPU)-G110-GG(JS,13)-GG(JS,14)-C1*G45
          FZT(JW1,IDCPU) = FZT(JW1,IDCPU) - GG(JS,6) - GG(JS,8) - GG(JS,
     1       11) - TT - GG(JS,2)
          FZT(JW2,IDCPU) = FZT(JW2,IDCPU) - GG(JS,7) - GG(JS,9) - GG(JS,
     1       12) - TT - GG(JS,3)
 6000   CONTINUE
 
        S1 = 0.
        S2 = 0.
        S3 = 0.
        DO 6200 JS = 1, JNUM
          S1 = S1 + FTEMP(JS,1)
          S2 = S2 + FTEMP(JS,2)
          S3 = S3 + FTEMP(JS,3)
 6200   CONTINUE
        FZ(IWO) = FZ(IWO) + S1
        FZ(IW1) = FZ(IW1) + S2
        FZ(IW2) = FZ(IW2) + S3
 
 6400 CONTINUE
      DO 6800 ID = 1, NCPUS
        VIR = VIR + VIRCPU(ID)
        DO 6600 I = 1, MAX
          FX(I) = FX(I) + FXT(I,ID)
 6600   CONTINUE
 6800 CONTINUE
      DO 7200 ID = 1, NCPUS
        DO 7000 I = 1, MAX
          FY(I) = FY(I) + FYT(I,ID)
 7000   CONTINUE
 7200 CONTINUE
      DO 7600 ID = 1, NCPUS
        DO 7400 I = 1, MAX
          FZ(I) = FZ(I) + FZT(I,ID)
 7400   CONTINUE
 7600 CONTINUE
      DO 7800 I = 1, NATMO, NATOMS
        FX(I) = FX(I)*FHM
        FY(I) = FY(I)*FHM
        FZ(I) = FZ(I)*FHM
        FX(I+2) = FX(I+2)*FHM
        FY(I+2) = FY(I+2)*FHM
        FZ(I+2) = FZ(I+2)*FHM
        FX(I+1) = FX(I+1)*FOM
        FY(I+1) = FY(I+1)*FOM
        FZ(I+1) = FZ(I+1)*FOM
 7800 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB016 (DATA,EX)
 
      COMMON/DATA/NPTS,NSKIP,MTRN,MSKIP,ISIGN,LOG,IXSHFT
C
      COMPLEX DATA(NPTS), EXK, EXJ, H, EX(1), FACT
      REAL HH(2)
      EQUIVALENCE (HH,H)
 
      IERR = 0
      HH(1) = 0
      HH(2) = 0
      FACT = (1.2349E-5,1.8567E-5)
      I2K = NPTS
      IF (I2K .EQ. 1) GO TO 4000
      SGN1 = ISIGN
      EXK = EX(1+IXSHFT)
      IF (SGN1 .LT. 0.) EXK = CONJG(EXK)
 1000 CONTINUE
      I2KP = I2K
      I2K = I2K/2
      I2KS = I2K*NSKIP
      IF (2*I2K .NE. I2KP) GO TO 4000
      JLI = I2K/2 + 1
      DO 3000 JL = 1, I2K
        IF (JL - 1 .GT. 0) GO TO 1600
        EXJ = (1.,0.)
        DO 1400 JJ = JL, NPTS, I2KP
          DO 1200 MM = 1, MTRN
            JS = (JJ-1)*NSKIP + (MM-1)*MSKIP + 1
            H = DATA(JS) - DATA(JS+I2KS)
            DATA(JS) = (DATA(JS)+DATA(JS+I2KS))*FACT
            DATA(JS+I2KS) = H*FACT
 1200     CONTINUE
 1400   CONTINUE
        GO TO 2800
 1600   CONTINUE
        IF (JL - JLI .EQ. 0) GO TO 2200
C
        EXJ = EXJ*EXK
        DO 2000 JJ = JL, NPTS, I2KP
          DO 1800 MM = 1, MTRN
            JS = (JJ-1)*NSKIP + (MM-1)*MSKIP + 1
            H = DATA(JS) - DATA(JS+I2KS)
            DATA(JS) = (DATA(JS)+DATA(JS+I2KS))*FACT
            DATA(JS+I2KS) = (H*EXJ)*FACT
 1800     CONTINUE
 2000   CONTINUE
        GO TO 2800
 2200   CONTINUE
        EXJ = CMPLX(0.,SGN1)
        DO 2600 JJ = JL, NPTS, I2KP
          DO 2400 MM = 1, MTRN
            JS = (JJ-1)*NSKIP + (MM-1)*MSKIP + 1
            H = DATA(JS) - DATA(JS+I2KS)
            DATA(JS) = (DATA(JS)+DATA(JS+I2KS))*FACT
            DATA(JS+I2KS) = CMPLX((-SGN1*HH(2)),SGN1*HH(1))*FACT
 2400     CONTINUE
 2600   CONTINUE
 2800   CONTINUE
 3000 CONTINUE
C
      EXK = EXK*EXK
      IF (I2K - 1 .GT. 0) GO TO 1000
      IF (NPTS .LE. 2) GO TO 4000
      NPTSD2 = NPTS/2
      JMIN = 0
      JMAX = NPTS - 4
      JREV = 0
      DO 3800 J = JMIN, JMAX, 2
        I2K = NPTSD2
        JREV2 = JREV + I2K
        IF (JREV2 - (J+1) .LE. 0) GO TO 3600
        DO 3200 MM = 1, MTRN
          JREV2S = (MM-1)*MSKIP + JREV2*NSKIP
          JS = (MM-1)*MSKIP + (J+1)*NSKIP
          H = DATA(JREV2S+1)
          DATA(JREV2S+1) = DATA(JS+1)*FACT
          DATA(JS+1) = H*FACT
 3200   CONTINUE
        IF (JREV - J .LE. 0) GO TO 3600
        DO 3400 MM = 1, MTRN
          JREVS = JREV*NSKIP + (MM-1)*MSKIP
          JS = J*NSKIP + (MM-1)*MSKIP
          H = DATA(JREVS+1)
          DATA(JREVS+1) = DATA(JS+1)*FACT
          DATA(JS+1) = H*FACT
 3400   CONTINUE
 3600   CONTINUE
 3800 CONTINUE
C
 4000 CONTINUE
C
      NFTVMT = NFTVMT + 1
C
      RETURN 
      END
      SUBROUTINE SUB017
C
      PARAMETER (NNX=44)
      PARAMETER (NNY=44)
      PARAMETER (NNZ=4)
      PARAMETER (MXC=11)
      PARAMETER (MXP=3)
      PARAMETER (MXW=5)
      PARAMETER (NXYN=NNX*NNY)
      PARAMETER (NBL=NXYN*NNZ)
      PARAMETER (NBLW=NBL+MXW)
      PARAMETER (N=MXC)
      PARAMETER (NY=NNY)
      PARAMETER (NX=NNX)
      PARAMETER (NZ=NNZ)
      PARAMETER (NXM1=NX-1)
      PARAMETER (NWELL=5)
C  ----------------------------------------------------------------
      COMMON /DATA/ CTOT(NBLW,MXC),C(NBLW,MXC,MXP)
     *            ,CSE(NBLW),S(NBLW,MXP)
      COMMON /DATA/ BRK,CRK,VIS1,VIS2,AP1,AP2,AP3,GAMMAC,EPHI4,EPHI3,
     *   GAMHF,SSLOPE,POWN,CSE1,ALPHA1,ALPHA2,ALPHA3,ALPHA4,ALPHA5,
     *   BETAP
      COMMON /DATA/ VIS(NBL,MXP),RPERM(NBLW,MXP)
     *,PERMX(NBL),PERMY(NBL),PERMZ(NBL),
     *QI(MXW,MXP),QT(MXW,NNZ),Q(MXW,NNZ,MXP),PWF(MXW)
      COMMON /DATA/ EL(NBL),DX(NNX),DY(NNY),
     * DZ(NNZ)
      COMMON /DATA/ TRSX(NBL,MXP),TRSY(NBL,MXP),
     *TRSZ(NBL,MXP),TX(NBL),TY(NBL),
     *TZ(NBL),CONVX(NBL,MXC,MXP),CONVY(NBL,MXC,MXP),
     *CONVZ(NBL,MXC,MXP),VX(NBL,MXP),VY(NBL,MXP),
     *VZ(NBL,MXP)
      COMMON /DATA/ POR(NBL),RKF(NBL,MXP)
      COMMON /DATA/ RW(MXW),SWELL(MXW),PI(MXW,NNZ),TTM(NNZ),
     $   TM(MXW,NNZ),PTM(MXW,NNZ,MXP),GAMMAT(MXW,NNZ)
      COMMON /DATA/ C6JO(NBLW),C6ADSS(NBLW),
     *  C6HATS(NBLW),QV,XKC,XKS,EQW
      COMMON /DATA/ CUMI(MXC),CUMP(MXC),OIP(MXC),
     *  T,TINJ,ICNT,WHPV,PRF
      COMMON /DATA/FOREC,FOREC1,RESPV,RESATK(NNZ),BTO(MXW),
     *             VB(NBL)
      COMMON /DATA/ TITLE(30),RELERR(MXC),SWI
      COMMON /DATA/ D(MXC,MXP),ALPHAL(MXP),ALPHAT(MXP)
      COMMON /DATA/ DCMAX,DISPC
      LOGICAL        LWKSP1
      COMMON /DATA/ LWKSP1(NBL)
      COMMON /DATA/ COE1(NBLW),COE2(NBLW),COE3(NBLW),
     *               COE4(NBLW),COE5(NBLW)
      COMMON /DATA/ COE6(NBLW),COE7(NBLW),COEX(NBLW),COEYU(NBLW),
     *              COEZT(NBLW),DDX(NBLW),DDY(NBLW),DDZ(NBLW),
     *              DC(NBLW)
      COMMON /DATA/ TK(3),TTRP(3),TREC(3),TBT(MXW,3),
     *   RDC(3),TRD(3),RET(3)
      COMMON /DATA/ AG1,AG2,CRG,AGK,BGK
      COMMON /DATA/ A15D,B15D,C15DSS(NBL),C14DSS(NBL)
     *              ,QW(NBL),TC14DS(NBL)
      COMMON /DATA/ AK1,AK2,SCR,GKIN(MXC),DT
C
      COMMON /INTS/ IPERM,IMES
      COMMON /INTS/ NGP,NGP1,NGP2,NGP3,NGP4,NG,IREACT,
     $   IW(MXW),JW(MXW),IJKW(MXW),KWELL(MXW,NNZ),ICF(MXC)
C
      DIMENSION OP(MXC),TEMP(MXC)
C
      IJK = 0
      DO 1400 K = 1, NZ
        DO 1200 J = 1, NY
          DO 1000 I = 1, NX
            IJK = IJK + 1
            DDX(IJK) = DX(I)
            DDY(IJK) = DY(J)
            DDZ(IJK) = DZ(K)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
      IF (IMES .EQ. 2) DCMAX = 0.0
      DO 20000 KC = 1, N
        IF (ICF(KC) .EQ. 0) GO TO 19800
        EPHI1 = 1.0
        IF (KC .EQ. 3) EPHI1 = EPHI3
        IF (KC .EQ. 4) EPHI1 = EPHI4
        DO 1600 I = 1, NBL
          COEX(I) = 0.0
          COEYU(I) = 0.0
          COEZT(I) = 0.0
 1600   CONTINUE
        DO 13200 L = 1, 3
          ALPHAX = ALPHAL(L) - ALPHAT(L)
C
          IF (NY .GT. 1) THEN
C
              DO 1800 I = NX + 1, NBL - NX
                COE1(I) = 0.25*(VY(I,L)+VY(I+1,L)+VY(I-NX,L)+VY(I+1-NX,L
     1             ))
 1800         CONTINUE
              DO 2400 K = 1, NZ
                IBGN = (K-1)*NXYN + 1
                IEND = IBGN + NXM1
                DO 2000 I = IBGN, IEND
                  COE1(I) = 0.5*(VY(I,L)+VY(I+1,L))
 2000           CONTINUE
                IBGN = K*NXYN - NXM1
                IEND = IBGN + NXM1
                DO 2200 I = IBGN, IEND
                  COE1(I) = 0.5*(VY(I-NX,L)+VY(I-NX+1,L))
 2200           CONTINUE
 2400         CONTINUE
          ELSE
              DO 2600 I = 1, NBL
                COE1(I) = 0.0
 2600         CONTINUE
          ENDIF
          IF (NZ .GT. 1) THEN
              DO 2800 I = 1, NXYN
                COE2(I) = 0.5*(VZ(I,L)+VZ(I+1,L))
 2800         CONTINUE
              IBGN = (NZ-1)*NXYN + 1
              DO 3000 I = IBGN, NBL
                COE2(I) = 0.5*(VZ(I-NXYN,L)+VZ(I-NXYN+1,L))
 3000         CONTINUE
              IF (NZ .GT. 2) THEN
                  DO 3200 I = NXYN + 1, NBL - NXYN
                    COE2(I) = 0.25*(VZ(I,L)+VZ(I+1,L)+VZ(I-NXYN,L)+VZ(I-
     1                 NXYN+1,L))
 3200             CONTINUE
              ENDIF
          ELSE
              DO 3400 I = 1, NBL
                COE2(I) = 0.0
 3400         CONTINUE
          ENDIF
          DO 3600 I = 1, NBL
            COE3(I) = VX(I,L)**2
            COE4(I) = COE1(I)**2
            COE5(I) = COE2(I)**2
            COE6(I) = SQRT(COE3(I)+COE4(I)+COE5(I))
            IF (COE6(I) .LE. .0001) COE6(I) = 1.E199
 
            COE6(I) = 1.0/COE6(I)
 3600     CONTINUE
          DO 3800 I = 1, NBL - 1
            COE7(I) = 0.5*(S(I,L)*POR(I)+S(I+1,L)*POR(I+1))
 3800     CONTINUE
C
          DO 4000 I = 1, NBL
            COE7(I) = COE7(I)*D(KC,L) + (ALPHAL(L)*COE3(I)+ALPHAT(L)*(
     1         COE4(I)+COE5(I)))*COE6(I)
            COE1(I) = ALPHAX*ABS(COE1(I)*VX(I,L))*COE6(I)
            COE2(I) = ALPHAX*ABS(COE2(I)*VX(I,L))*COE6(I)
 4000     CONTINUE
          DO 4200 I = 1, NBL - 1
            COE3(I) = 2.*(.5*DISPC*DDX(I)*ABS(VX(I,L))-COE7(I))*(C(I+1,
     1         KC,L)-C(I,KC,L))/(DDX(I+1)+DDX(I))
 4200     CONTINUE
          IF (NY .GT. 2) THEN
              DO 4400 I = NX + 1, NBL - NX - 1
                COE4(I) = 0.25*COE1(I)*(C(I+NX,KC,L)+C(I+NX+1,KC,L)-C(I-
     1             NX,KC,L)-C(I-NX+1,KC,L))/DDY(I)
 4400         CONTINUE
              DO 5000 K = 1, NZ
                IBGN = (K-1)*NXYN + 1
                IEND = IBGN + NXM1
                DO 4600 I = IBGN, IEND
                  COE4(I) = 0.0
 4600           CONTINUE
                IBGN = K*NXYN - NXM1
                IEND = IBGN + NXM1
                DO 4800 I = IBGN, IEND
                  COE4(I) = 0.0
 4800           CONTINUE
 5000         CONTINUE
          ELSE
              DO 5200 I = 1, NBL
                COE4(I) = 0.0
 5200         CONTINUE
          ENDIF
          DO 5400 I = 1, NBL
            COE5(I) = 0.0
 5400     CONTINUE
          IF (NZ .GT. 2) THEN
              DO 5600 I = NXYN + 1, NBL - NXYN - 1
                COE5(I) = 0.25*COE2(I)*(C(I+NXYN,KC,L)+C(I+NXYN+1,KC,L)-
     1             C(I-NXYN,KC,L)-C(I-NXYN+1,KC,L))/DDZ(I)
 5600         CONTINUE
          ENDIF
C
          DO 5800 I = 1, NBL - 1
            COEX(I+1) = COEX(I+1) + COE3(I) - COE4(I) - COE5(I)
 5800     CONTINUE
C
          IF (NY .GT. 1) THEN
C
              DO 6000 I = 2, NBL - NX
                COE1(I) = 0.25*(VX(I,L)+VX(I+NX,L)+VX(I-1,L)+VX(I+NXM1,L
     1             ))
 6000         CONTINUE
              DO 6200 I = 1, NBL - NX, NX
                COE1(I) = 0.5*(VX(I,L)+VX(I+NX,L))
 6200         CONTINUE
              DO 6400 I = NX, NBL - NX, NX
                COE1(I) = 0.5*(VX(I-1,L)+VX(I-1+NX,L))
 6400         CONTINUE
              IF (NZ .GT. 1) THEN
                  DO 6600 I = 1, NXYN
                    COE2(I) = 0.5*(VZ(I,L)+VZ(I+NX,L))
 6600             CONTINUE
                  DO 6800 I = (NZ-1)*NXYN + 1, NBL
                    COE2(I) = 0.5*(VZ(I-NXYN,L)+VZ(I-NXYN+NX,L))
 6800             CONTINUE
                  IF (NZ .GT. 2) THEN
                      DO 7000 I = NXYN + 1, (NZ-1)*NXYN
                        COE2(I) = 0.25*(VZ(I,L)+VZ(I+NX,L)+VZ(I-NXYN,L)+
     1                     VZ(I-NXYN+NX,L))
 7000                 CONTINUE
                  ENDIF
              ELSE
                  DO 7200 I = 1, NBL
                    COE2(I) = 0.0
 7200             CONTINUE
              ENDIF
              DO 7400 I = 1, NBL
                COE3(I) = VY(I,L)**2
                COE4(I) = COE1(I)**2
                COE5(I) = COE2(I)**2
                COE6(I) = SQRT(COE3(I)+COE4(I)+COE5(I))
                IF (COE6(I) .LE. .0001) COE6(I) = 1.E199
                COE6(I) = 1.0/COE6(I)
 7400         CONTINUE
              DO 7600 I = 1, NBL - NX
                COE7(I) = 0.5*(S(I,L)*POR(I)+S(I+NX,L)*POR(I+NX))
 7600         CONTINUE
              DO 7800 I = 1, NBL
                COE7(I) = COE7(I)*D(KC,L) + (ALPHAL(L)*COE3(I)+ALPHAT(L)
     1             *(COE4(I)+COE5(I)))*COE6(I)
                COE1(I) = ALPHAX*ABS(COE1(I)*VY(I,L))*COE6(I)
                COE2(I) = ALPHAX*ABS(COE2(I)*VY(I,L))*COE6(I)
 7800         CONTINUE
C
              DO 8000 I = 1, NBL - NX
                COE3(I) = 2.*(.5*DISPC*DDY(I)*ABS(VY(I,L))-COE7(I))*(C(I
     1             +NX,KC,L)-C(I,KC,L))/(DDY(I+NX)+DDY(I))
 8000         CONTINUE
              DO 8200 I = 2, NBL - NX - 1
                COE4(I) = 0.25*COE1(I)*(C(I+1,KC,L)+C(I+1+NX,KC,L)-C(I-1
     1             ,KC,L)-C(I-1+NX,KC,L))/DDX(I)
 8200         CONTINUE
              DO 8400 I = 1, NBL, NX
                COE4(I) = 0.0
 8400         CONTINUE
              DO 8600 I = NX, NBL, NX
                COE4(I) = 0.0
 8600         CONTINUE
              DO 8800 I = 1, NBL
                COE5(I) = 0.0
 8800         CONTINUE
              IF (NZ .GT. 2) THEN
                  DO 9000 I = NXYN + 1, NBL - NXYN - NX
                    COE5(I) = 0.25*COE2(I)*(C(I+NXYN,KC,L)+C(I+NXYN+NX,
     1                 KC,L)-C(I-NXYN,KC,L)-C(I-NXYN+NX,KC,L))/DDZ(I)
 9000             CONTINUE
              ENDIF
C
              DO 9200 I = 1, NBL - NX
                COEYU(I+NX) = COEYU(I+NX) + COE3(I) - COE4(I) - COE5(I)
 9200         CONTINUE
          ENDIF
C
          IF (NZ .GT. 1) THEN
C
              DO 9400 I = 2, NBL - NXYN
                COE1(I) = 0.25*(VX(I,L)+VX(I-1,L)+VX(I+NXYN,L)+VX(I+NXYN
     1             -1,L))
 9400         CONTINUE
              DO 9600 I = 1, NBL - NXYN, NX
                COE1(I) = 0.5*(VX(I,L)+VX(I+NXYN,L))
 9600         CONTINUE
              DO 9800 I = NX, NBL - NXYN, NX
                COE1(I) = 0.5*(VX(I-1,L)+VX(I+NXYN-1,L))
 9800         CONTINUE
              DO 10000 I = NX + 1, NBL - NXYN - NX
                COE2(I) = 0.25*(VY(I,L)+VY(I-NX,L)+VY(I+NXYN,L)+VY(I+
     1             NXYN-NX,L))
10000         CONTINUE
              DO 10600 K = 1, NZ - 1
                IBGN = (K-1)*NXYN + 1
                IEND = IBGN + NXM1
                DO 10200 I = IBGN, IEND
                  COE2(I) = 0.5*(VY(I,L)+VY(I+NXYN,L))
10200           CONTINUE
                IBGN = K*NXYN - NXM1
                IEND = IBGN + NXM1
                DO 10400 I = IBGN, IEND
                  COE2(I) = 0.5*(VY(I-NX,L)+VY(I+NXYN-NX,L))
10400           CONTINUE
10600         CONTINUE
              DO 10800 I = 1, NBL - NXYN
                COE3(I) = VZ(I,L)**2
                COE4(I) = COE1(I)**2
                COE5(I) = COE2(I)**2
                COE6(I) = SQRT(COE3(I)+COE4(I)+COE5(I))
                IF (COE6(I) .LE. .0001) COE6(I) = 1.E199
                COE6(I) = 1.0/COE6(I)
10800         CONTINUE
              DO 11000 I = 1, NBL - NXYN
                COE7(I) = 0.5*(S(I,L)*POR(I)+S(I+NXYN,L)*POR(I+NXYN))
11000         CONTINUE
              DO 11200 I = 1, NBL - NXYN
                COE7(I) = COE7(I)*D(KC,L) + (ALPHAL(L)*COE3(I)+ALPHAT(L)
     1             *(COE4(I)+COE5(I)))*COE6(I)
                COE1(I) = ALPHAX*ABS(COE1(I)*VZ(I,L))*COE6(I)
                COE2(I) = ALPHAX*ABS(COE2(I)*VZ(I,L))*COE6(I)
11200         CONTINUE
C
              DO 11400 I = 1, NBL - NXYN
                COE3(I) = 2.*(.5*DISPC*DDZ(I)*ABS(VZ(I,L))-COE7(I))*(C(I
     1             +NXYN,KC,L)-C(I,KC,L))/(DDZ(I+NXYN)+DDZ(I))
11400         CONTINUE
              DO 11600 I = 2, NBL - NXYN - 1
                COE4(I) = 0.25*COE1(I)*(C(I+1,KC,L)+C(I+NXYN+1,KC,L)-C(I
     1             -1,KC,L)-C(I+NXYN-1,KC,L))/DDX(I)
11600         CONTINUE
              DO 11800 I = 1, NBL - NXYN, NX
                COE4(I) = 0.0
11800         CONTINUE
              DO 12000 I = NX, NBL - NXYN, NX
                COE4(I) = 0.0
12000         CONTINUE
              DO 12200 I = NX + 1, NBL - NXYN - NX
                COE5(I) = 0.25*COE2(I)*(C(I+NX,KC,L)+C(I+NX+NXYN,KC,L)-C
     1             (I-NX,KC,L)-C(I+NXYN-NX,KC,L))/DDY(I)
12200         CONTINUE
              DO 12800 K = 1, NZ - 1
                IBGN = (K-1)*NXYN + 1
                IEND = IBGN + NXM1
                DO 12400 I = IBGN, IEND
                  COE5(I) = 0.0
12400           CONTINUE
                IBGN = K*NXYN - NXM1
                IEND = IBGN + NXM1
                DO 12600 I = IBGN, IEND
                  COE5(I) = 0.0
12600           CONTINUE
12800         CONTINUE
C
              DO 13000 I = 1, NBL - NXYN
                COEZT(I+NXYN)=COEZT(I+NXYN)+COE3(I)-COE4(I)-COE5(I)
13000         CONTINUE
          ENDIF
13200   CONTINUE
        DO 13400 I = 1, NBL, NX
          COEX(I) = 0.0
13400   CONTINUE
        DO 13800 K = 1, NZ
          IBGN = (K-1)*NXYN + 1
          IEND = IBGN + NXM1
          DO 13600 I = IBGN, IEND
            COEYU(I) = 0.0
13600     CONTINUE
13800   CONTINUE
        DO 14000 I = 1, NXYN
          COEZT(I) = 0.0
14000   CONTINUE
        DO 14200 I = 1, NBL
          CONVX(I,KC,1) = CONVX(I,KC,1) + CONVX(I,KC,2) + CONVX(I,KC,3)
          CONVY(I,KC,1) = CONVY(I,KC,1) + CONVY(I,KC,2) + CONVY(I,KC,3)
          CONVZ(I,KC,1) = CONVZ(I,KC,1) + CONVZ(I,KC,2) + CONVZ(I,KC,3)
14200   CONTINUE
        DO 14400 I = 1, NBL
          COE4(I) = 0.0
          COE5(I) = 0.0
14400   CONTINUE
        COE3(1) = (COEX(2)+CONVX(1,KC,1))/DDX(1)
        DO 14600 I = 2, NBL - 1
          COE3(I) = (COEX(I+1)-COEX(I)+CONVX(I,KC,1)-CONVX(I-1,KC,1))/
     1       DDX(I)
14600   CONTINUE
        COE3(NBL) = ((-COEX(NBL))+CONVX(NBL,KC,1)-CONVX(NBL-1,KC,1))/DDX
     1     (NBL)
        IF (NY .GT. 1) THEN
            DO 14800 I = 1, NX
              COE4(I) = (COEYU(I+NX)+CONVY(I,KC,1))/DDY(I)
14800       CONTINUE
            DO 15000 I = NX + 1, NBL - NX
              COE4(I) = (COEYU(I+NX)-COEYU(I)+CONVY(I,KC,1)-CONVY(I-NX,
     1           KC,1))/DDY(I)
15000       CONTINUE
            DO 15200 I = NBL - NX + 1, NBL
              COE4(I) = ((-COEYU(I))+CONVY(I,KC,1)-CONVY(I-NX,KC,1))/DDY
     1           (I)
15200       CONTINUE
        ENDIF
        IF (NZ .GT. 1) THEN
            IF (NZ .EQ. 2) THEN
                DO 15400 I = 1, NXYN
                  COE5(I) = (COEZT(I+NXYN)+CONVZ(I,KC,1))/DDZ(I)
15400           CONTINUE
                DO 15600 I = NXYN + 1, NBL
                  COE5(I) = ((-COEZT(I))+CONVZ(I,KC,1)-CONVZ(I-NXYN,KC,1
     1               ))/DDZ(I)
15600           CONTINUE
            ELSE
                DO 15800 I = NXYN + 1, NBL - NXYN
                  COE5(I) = (COEZT(I+NXYN)-COEZT(I)+CONVZ(I,KC,1)-CONVZ(
     1               I-NXYN,KC,1))/DDZ(I)
15800           CONTINUE
                DO 16000 I = NBL - NXYN + 1, NBL
                  COE5(I) = ((-COEZT(I))+CONVZ(I,KC,1)-CONVZ(I-NXYN,KC,1
     1               ))/DDZ(I)
16000           CONTINUE
            ENDIF
        ENDIF
C
        IF (KC .GT. 8) THEN
            IT = KC - 8
            IF (RET(IT) .NE. 0.) THEN
                DO 16200 I = 1, NBL
                  CON = 1./(1.+RET(IT)/S(I,1))
                  COE3(I) = COE3(I)*CON
                  COE4(I) = COE4(I)*CON
                  COE5(I) = COE5(I)*CON
16200           CONTINUE
            ENDIF
        ENDIF
        DO 16400 I = 1, NBL
          DC(I) = (-DT/EPHI1)*(COE3(I)+COE4(I)+COE5(I))/POR(I)
16400   CONTINUE
C
        DO 17000 M = 1, NWELL
          I = IW(M)
          J = JW(M)
          DO 16800 K = 1, NZ
            IJK1 = (K-1)*NXYN + (J-1)*NX + I
            DO 16600 L = 1, 3
              IF (Q(M,K,L) .GT. 0.0) THEN
                  CW = C(IJKW(M),KC,L)
                  CUMI(KC) = CUMI(KC) + Q(M,K,L)*CW*DT
              ELSE
                  CW = C(IJK1,KC,L)
                  IF (NY .NE. 1) THEN
                      TERM0 = 28.*CW
                      TERM1 = CW
                      IF (J .NE. 1) TERM1 = C(IJK1-NX,KC,L)
                      TERM2 = CW
                      IF (I .NE. 1) TERM2 = C(IJK1-1,KC,L)
                      TERM3 = CW
                      IF (I .NE. NX) TERM3 = C(IJK1+1,KC,L)
                      TERM4 = CW
                      IF (J .NE. NY) TERM4 = C(IJK1+NX,KC,L)
                      CW = (TERM0-TERM1-TERM2-TERM3-TERM4)/24.
                  ENDIF
                  CUMP(KC) = CUMP(KC) + Q(M,K,L)*CW*DT
              ENDIF
              DC(IJK1) = DC(IJK1) + (DT*CW/EPHI1)*Q(M,K,L)/VB(IJK1)
16600       CONTINUE
16800     CONTINUE
17000   CONTINUE
C
        IF (KC .GT. 8) THEN
            KCT = KC - 8
            CONS = RDC(KCT)*DT
            IF (CONS .EQ. 0.0) GO TO 18000
            DO 17200 I = 1, NBL
              COE1(I) = 0.0
17200       CONTINUE
            DO 17600 L = 1, 3
              DO 17400 I = 1, NBL
                COE1(I) = COE1(I) + CONS*C(I,KC,L)
17400         CONTINUE
17600       CONTINUE
            TR = 0.0
            DO 17800 I = 1, NBL
              DC(I) = DC(I) - COE1(I)
              TR = TR + COE1(I)*VB(I)
17800       CONTINUE
            TRD(KCT) = TRD(KCT) + TR
18000       CONTINUE
        ENDIF
C
        IF (IREACT.EQ.1 .AND. NG.NE.0) THEN
            IF (KC .EQ. 4) THEN
                DO 18200 I = 1, NBL
                  COE1(I) = DT*(1./(SCR+1.))*AK2*1.E12*(C(I,NGP3,1)*
     1               1.E-4*C(I,4,1))**2
                  DC(I) = DC(I) - COE1(I)
                  GKIN(4) = GKIN(4) + COE1(I)*VB(I)
18200           CONTINUE
            ELSE IF (KC .EQ. NGP1) THEN
                DO 18400 I = 1, NBL
                  COE1(I) = DT*AK1*C(I,NGP1,1)*C(I,NGP2,1)
                  DC(I) = DC(I) - COE1(I)
                  GKIN(NGP1) = GKIN(NGP1) + COE1(I)*VB(I)
18400           CONTINUE
            ELSE IF (KC .EQ. NGP2) THEN
                DO 18600 I = 1, NBL
                  COE1(I) = DT*AK1*2.111*C(I,NGP1,1)*C(I,NGP2,1)
                  DC(I) = DC(I) - COE1(I)
                  GKIN(NGP2) = GKIN(NGP2) + COE1(I)*VB(I)
18600           CONTINUE
            ELSE IF (KC .EQ. NGP3) THEN
                DO 18800 I = 1, NBL
                  COE1(I) = DT*(0.48*AK1*C(I,NGP1,1)*C(I,NGP2,1)-AK2*(
     1               SCR/(SCR+1.))*(C(I,4,1)*C(I,NGP3,1)*1.E4)**2)
                  DC(I) = DC(I) + COE1(I)
                  GKIN(NGP3) = GKIN(NGP3) + COE1(I)*VB(I)
18800           CONTINUE
            ELSE IF (KC .EQ. NGP4) THEN
                DO 19000 I = 1, NBL
                  COE1(I) = DT*AK2*(C(I,NGP3,1)*C(I,4,1)*1.E4)**2
                  DC(I) = DC(I) + COE1(I)
                  GKIN(NGP4) = GKIN(NGP4) + COE1(I)*VB(I)
19000           CONTINUE
            ENDIF
        ENDIF
        DO 19200 I = 1, NBL
          CTOT(I,KC) = CTOT(I,KC) + DC(I)
19200   CONTINUE
        IF (KC.LE.3 .AND. IMES.EQ.2) THEN
            JDC = ISAMAX(NBL,DC,1)
            DCMAX = AMAX1(DCMAX,ABS(DC(JDC)))
        ENDIF
        DO 19400 I = 1, NBL
          LWKSP1(I) = CTOT(I,KC) .LE. (-1.E-2)
19400   CONTINUE
C
        SUM = 0.0
        DO 19600 I = 1, NBL
          SUM = SUM + CTOT(I,KC)*VB(I)
19600   CONTINUE
        OP(KC) = SUM*EPHI1
        IF (KC .GT. 8) OP(KC) = OP(KC) + TRD(KC-8)*EPHI1
19800   CONTINUE
20000 CONTINUE
      SUM = 0.0
      DO 20200 I = 1, NBL
        SUM = SUM + (C6HATS(I)+C6ADSS(I))*VB(I)
20200 CONTINUE
      OP(6) = OP(6) + SUM*EPHI1
      DO 20400 KC = 1, N
        RELERR(KC) = 0.0
        TEMP(KC) = CUMI(KC) + OIP(KC)
        IF (TEMP(KC) .GT. 1.E-7) RELERR(KC) = ABS(TEMP(KC)+CUMP(KC)-OP(
     1     KC))/TEMP(KC)
20400 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB018(A,U,F,Z)
      PARAMETER (NXY=100000,NX=100000)
      DIMENSION A(NXY,7),U(NXY),F(NXY),Z(NXY)
      Z(1) = 0.0
      KE = NXY - NX + 2
      NU = NX - 2
 
      DO 1200 KK = 2, KE, 65535
        KKE = (KK-1) + MIN0(65535,KE-(KK-1))
        DO 1000 K = KK, KKE
          Z(K) = A(K,3)*A(K-1,6)*U(K+NU)
 1000   CONTINUE
 1200 CONTINUE
 
      KB = KE + 1
      DO 1400 K = KB, NXY
        Z(K) = 0.0
 1400 CONTINUE
      NA = (-NX) + 1
      NU = NA + 1
 
      DO 1600 K = 1, NX
        Z(K) = Z(K) + F(K)
 1600 CONTINUE
 
      DO 2000 KK = NX + 1, NXY, 65535
        KKE = (KK-1) + MIN0(65535,NXY-(KK-1))
        DO 1800 K = KK, KKE
          Z(K) = (Z(K)+F(K)) + A(K,2)*A(K+NA,5)*U(K+NU)
 1800   CONTINUE
 2000 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB019
      PARAMETER (MR=100,MT=16,MX=16)
      PARAMETER (PI=3.141592653589793)
      COMMON /DATA/
     1     VR(MR+1,MT+1,6*MX),VC(MR+1,MT+1,6*MX),WR(MR+1,MT+1,6*MX),
     1     WC(MR+1,MT+1,6*MX)
      COMPLEX CVEC(MR+1),CFAC
      DO 1400 J = 1, MT + 1
        DO 1200 K = 1, 2*MX
 
          J1 = J - 1
          K1 = K - 1
          IF (K1 .GT. MX) K1 = K1 - 2*MX
          CFAC = EXP((0.,1.)*(J1*PI/(2*MT)+K1*PI/(2*MX)))
          DO 1000 I = 1, MR + 1
 
            CVEC(I) = VR(I,J,K) + (0.,1.)*VC(I,J,K)
            CVEC(I) = CFAC*CVEC(I)
            VR(I,J,K) = CVEC(I)
            VC(I,J,K) = (0.,-1.)*CVEC(I)
 
            CVEC(I) = VR(I,J,K+2*MX) + (0.,1.)*VC(I,J,K+2*MX)
            CVEC(I) = CFAC*CVEC(I)
            VR(I,J,K+2*MX) = CVEC(I)
            VC(I,J,K+2*MX) = (0.,-1.)*CVEC(I)
 
            CVEC(I) = VR(I,J,K+4*MX) + (0.,1.)*VC(I,J,K+4*MX)
            CVEC(I) = CFAC*CVEC(I)
            VR(I,J,K+4*MX) = CVEC(I)
            VC(I,J,K+4*MX) = (0.,-1.)*CVEC(I)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
 
      DO 2000 J = 1, MT + 1
        DO 1800 K = 1, 2*MX
          J1 = J - 1
          K1 = K - 1
          IF (K1 .GT. MX) K1 = K1 - 2*MX
 
          CFAC = EXP((0.,-1.)*(J1*PI/(2*MT)+K1*PI/(2*MX)))
          DO 1600 I = 1, MR + 1
            CVEC(I) = WR(I,J,K) + (0.,1.)*WC(I,J,K)
            CVEC(I) = CFAC*CVEC(I)
            WR(I,J,K) = CVEC(I)
            WC(I,J,K) = (0.,-1.)*CVEC(I)
 
            CVEC(I) = WR(I,J,K+2*MX) + (0.,1.)*WC(I,J,K+2*MX)
            CVEC(I) = CFAC*CVEC(I)
            WR(I,J,K+2*MX) = CVEC(I)
            WC(I,J,K+2*MX) = (0.,-1.)*CVEC(I)
 
            CVEC(I) = WR(I,J,K+4*MX) + (0.,1.)*WC(I,J,K+4*MX)
            CVEC(I) = CFAC*CVEC(I)
            WR(I,J,K+4*MX) = CVEC(I)
            WC(I,J,K+4*MX) = (0.,-1.)*CVEC(I)
 
 1600     CONTINUE
 1800   CONTINUE
 2000 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB020(S,KKP,KKR)
      PARAMETER(JKLMAX=40,IMX=29791)
      COMMON/DATA/Q(5,IMX), X(IMX), Y(IMX), Z(IMX)
      COMMON/DATA/R(JKLMAX), RTXYZ(4,JKLMAX), DJ(IMX)
      DIMENSION KKP(JKLMAX),KKR(JKLMAX),S(5,IMX)
      DATA JMAX/JKLMAX/,KMAX/JKLMAX/,LMAX/JKLMAX/
      DATA JM/JKLMAX/,KM/JKLMAX/,LM/JKLMAX/
      DATA JMM/JKLMAX/,KMM/JKLMAX/LMM/JKLMAX/
      DATA KEND2/2/,KENDM/JKLMAX/,KK/0/,LL/0/
      DATA SMU/1.0/,SMUIM/1.0/
      DO 2000 L = 2, LM
        DO 1800 K = KEND2, KENDM
          IKL = (K-1)*KK + (L-1)*LL
          DO 1200 N = 1, 4
            DO 1000 J = 3, JMM
              I = IKL + J
              SMJ = SMU*DJ(I)
              D4Q=Q(N,I+2)-4.*Q(N,I+1)+6.*Q(N,I)-4.*Q(N,I-1)+Q(N,I-2)
              S(N,I) = S(N,I) - SMJ*D4Q
 1000       CONTINUE
 1200     CONTINUE
C.    J=2
          I = IKL + 2
          SMJ = SMU*DJ(I)
          DO 1400 N = 1, 4
            D4Q=Q(N,I-1)-4.*Q(N,I)+6.*Q(N,I+1)-4.*Q(N,I+2)+Q(N,I+3)
            S(N,I) = S(N,I) - SMJ*D4Q
 1400     CONTINUE
          I = IKL + JM
          SMJ = SMU*DJ(I)
          DO 1600 N = 1, 4
            D2Q = Q(N,I+1) - 2.*Q(N,I) + Q(N,I-1)
            S(N,I) = S(N,I) + SMJ*D2Q
 1600     CONTINUE
 1800   CONTINUE
 2000 CONTINUE
 2200 CONTINUE
      DO 5600 L = 2, LM
        DO 5400 J = 2, JM
          IJL = J + (L-1)*LL
          DO 2600 N = 1, 4
            K = 2
            I = IJL + (K-1)*KK
            DO 2400 K = 3, KMM
              I = I + KK
              SMJ = SMU*DJ(I)
              D4Q = Q(N,I-KK-KK) - 4.*(Q(N,I-KK)+Q(N,I+KK)) + 6.*Q(N,I)
     1            + Q(N,I+KK+KK)
              S(N,I) = S(N,I) - SMJ*D4Q
 2400       CONTINUE
 2600     CONTINUE
          I = IJL + KK
          SMJ = SMU*DJ(I)
          DO 2800 N = 1, 4
            D4Q = Q(N,I-KK) - 4.*Q(N,I) + 6.*Q(N,I+KK) - 4.*Q(N,I+KK+KK)
     1          + Q(N,I+KK+KK+KK)
            S(N,I) = S(N,I) - SMJ*D4Q
 2800     CONTINUE
          I = IJL + (KM-1)*KK
          SMJ = SMU*DJ(I)
          DO 3000 N = 1, 4
            D4Q = Q(N,I+KK) - 4.*Q(N,I) + 6.*Q(N,I-KK) - 4.*Q(N,I-KK-KK)
     1          + Q(N,I-KK-KK-KK)
            S(N,I) = S(N,I) - SMJ*D4Q
 3000     CONTINUE
          GO TO 5200
 3200     CONTINUE
C. K=2
          I = IJL + KK
          SMJ = SMU*DJ(I)
          DO 3400 N = 1, 4
            D4Q = Q(N,I+KK+KK) - 4.*(Q(N,I+KK)+Q(N,I-KK)) + 7.*Q(N,I)
            IF (N .EQ. 3) D4Q = D4Q - 2.*Q(3,I)
            S(N,I) = S(N,I) - SMJ*D4Q
 3400     CONTINUE
C. K=KM
          I = IJL + (KM-1)*KK
          SMJ = SMU*DJ(I)
          DO 3600 N = 1, 4
            D4Q = Q(N,I-KK-KK) - 4.*(Q(N,I-KK)+Q(N,I+KK)) + 7.*Q(N,I)
            IF (N .EQ. 3) D4Q = D4Q - 2.*Q(3,I)
            S(N,I) = S(N,I) - SMJ*D4Q
 3600     CONTINUE
          GO TO 5200
 3800     CONTINUE
          DO 5000 NK = 1, 2
            GO TO (4000,4200) NK
 4000       CONTINUE
            KBGN = 1
            KEND = 2
            GO TO 4400
 4200       CONTINUE
            KBGN = KM
            KEND = KMAX
 4400       CONTINUE
            DO 4800 K = KBGN, KEND
              KR = KKR(K)
              KP = KKP(K)
              KRR = KKR(KR)
              KPP = KKP(KP)
              I = IJL + (K-1)*KK
              IR = IJL + (KR-1)*KK
              IP = IJL + (KP-1)*KK
              IRR = IJL + (KRR-1)*KK
              IPP = IJL + (KPP-1)*KK
              SMJ = SMU*DJ(I)
              DO 4600 N = 1, 4
                D4Q=Q(N,IRR)+6.*Q(N,I)+Q(N,IPP)-4.*(Q(N,IR)+Q(N,IP))
                S(N,I) = S(N,I) - SMJ*D4Q
 4600         CONTINUE
 4800       CONTINUE
 5000     CONTINUE
 5200     CONTINUE
 5400   CONTINUE
 5600 CONTINUE
 5800 CONTINUE
      DO 7000 J = 2, JM
        DO 6800 K = KEND2, KENDM
          IJK = J + (K-1)*KK
          DO 6200 N = 1, 4
            L = 2
            I = IJK + (L-1)*LL
            DO 6000 L = 3, LMM
              I = I + LL
              SMJ = SMU*DJ(I)
              D4Q = Q(N,I-LL-LL) - 4.*(Q(N,I-LL)+Q(N,I+LL)) + 6.*Q(N,I)
     1            + Q(N,I+LL+LL)
              S(N,I) = S(N,I) - SMJ*D4Q
 6000       CONTINUE
 6200     CONTINUE
          I = IJK + LL
          SMJ = SMU*DJ(I)
          DO 6400 N = 1, 4
            D4Q = Q(N,I-LL) - 4.*Q(N,I) + 6.*Q(N,I+LL) - 4.*Q(N,I+LL+LL)
     1          + Q(N,I+LL+LL+LL)
            S(N,I) = S(N,I) - SMJ*D4Q
 6400     CONTINUE
          I = IJK + (LM-1)*LL
          SMJ = SMU*DJ(I)
          DO 6600 N = 1, 4
            D2Q = (-Q(N,I+LL)) + 2.*Q(N,I) - Q(N,I-LL)
            S(N,I) = S(N,I) - SMJ*D2Q
 6600     CONTINUE
 6800   CONTINUE
 7000 CONTINUE
 7200 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB021(NOP,NATOMS,NION,NSS)
      COMMON /DATA/ FX(2000),FY(2000),FZ(2000)
      COMMON /DATA/ X0(2000),Y0(2000),Z0(2000)
      COMMON /DATA/ TX(2000),TY(2000),TZ(2000)
      COMMON /DATA/ SX(2000),SY(2000),SZ(2000)
      COMMON /DATA/ FSX(2000),FSY(2000),FSZ(2000)
      COMMON /DATA/A(3),B(3),C(3),AA(3,650),BB(3,650),CC(3,650)
     X              ,AAA(650),BBB(650),CCC(650),AAAA,BBBB,CCCC
      COMMON/DATA/ TTRAN(3),TROT(3),RHO,VOLM,DT,FNOP,BREAK
     X              ,DM(3,3),QM(9,3),TE(3),RE(3),TTS(3),RTS(3)
     X              ,R2(3),EWW,EWI,EWA,EII,EIA
      COMMON/DATA/ DSUMM(3),DRI(3,3),DQ(30),DSITE(3,30)
     X              ,UNITM,UNITL,UNITE,COULF,ENERF,TEMPF,TSTEP
C     COMMON/DATA/ QQ(11,11),AD(5),BD(5)
      COMMON/DATA/ QQ(11,11),
     1A1,A2,A3,A4,A5,B1,B2,B3,B4,B5
      COMMON /DATA/ AA1(4),AA2(4),BB1(4),BB2(4),SFX(4),SFY(4),SFZ(4)
      COMMON /DATA/ FOX(2000),FOY(2000),FOZ(2000),
     1F1X(2000),F1Y(2000),
     1F1Z(2000),F2X(2000),F2Y(2000),F2Z(2000),
     2FPX(2000),FPY(2000),FPZ(2000),
     3FAX(2000),FAY(2000),FAZ(2000),FIX(100),FIY(100),FIZ(100),
     4FOXP(2000),FOYP(2000),FOZP(2000),F1XP(2000),F1YP(2000),
     1F1ZP(2000),F2XP(2000),F2YP(2000),F2ZP(2000),
     2FPXP(2000),FPYP(2000),FPZP(2000),
     4XDT(2000),YDT(2000),ZDT(2000)
 
      DIMENSION NSITES(3),NSPECI(3),IND(2000)
      DATA NSITES/3*1/,NSPECI/3*100/,IND/2000*0/
 
      ALENGT = (22./UNITL)*.001
      ALENGM = 1./ALENGT
      B1M = -B1
      B2M = -B2
      B3M = -B3
      B4M = -B4
      EFFE = 0
      EWW = 0
      EWI = 0
      EWA = 0
      EII = 0
      EIA = 0
      NSP = NSPECI(1)
      NSST = NSS + NION + NATOMS
      DO 1000 I = 1, NSST
        FSX(I) = 0
        FSY(I) = 0
        FSZ(I) = 0
 1000 CONTINUE
      ISIT = NSITES(1)
      RCUTS = 64.E-20/UNITL/UNITL
      DO 1200 I = 1, NSP
        FPX(I) = 0
        FPY(I) = 0
        FPZ(I) = 0
        FOX(I) = 0
        FOY(I) = 0
        FOZ(I) = 0
        F1X(I) = 0
        F1Y(I) = 0
        F1Z(I) = 0
        F2X(I) = 0
        F2Y(I) = 0
        F2Z(I) = 0
 1200 CONTINUE
      DO 2800 I = 2, NSP
        INS = (I-1)*ISIT
        FXO = 0
        FYO = 0
        FZO = 0
        FX1 = 0
        FY1 = 0
        FZ1 = 0
        FX2 = 0
        FY2 = 0
        FZ2 = 0
        FXP = 0
        FYP = 0
        FZP = 0
        DO 1600 J = 1, I - 1
          IND(J) = 0
          JNS = (J-1)*ISIT
          XD = X0(I) - X0(J)
          YD = Y0(I) - Y0(J)
          ZD = Z0(I) - Z0(J)
          XDT(J) = XD - 2.*ALENGT*(XD*ALENGM)
          YDT(J) = YD - 2.*ALENGT*(YD*ALENGM)
          ZDT(J) = ZD - 2.*ZD
          DXS = XDT(J) + SX(INS+1)
          DYS = YDT(J) + SY(INS+1)
          DZS = ZDT(J) + SZ(INS+1)
          RX = DXS - SX(JNS+1)
          RY = DYS - SY(JNS+1)
          RZ = DZS - SZ(JNS+1)
          RSQ = RX*RX + RY*RY + RZ*RZ
          IF (RSQ .GE. RCUTS) GO TO 1400
          IND(J) = 1
 1400     CONTINUE
 1600   CONTINUE
        L = 0
        DO 2000 J = 1, I - 1
          IF (IND(J) .EQ. 0) GO TO 1800
          L = L + 1
          IND(L) = J
 1800     CONTINUE
 2000   CONTINUE
        IF (L .EQ. 0) GO TO 2600
        DO 2200 J = 1, L
          K = IND(J)
          JNS = (K-1)*ISIT
          XD = XDT(K)
          YD = YDT(K)
          ZD = ZDT(K)
          DXS = XD + SX(INS+1)
          DYS = YD + SY(INS+1)
          DZS = ZD + SZ(INS+1)
          RX = DXS - SX(JNS+1)
          RY = DYS - SY(JNS+1)
          RZ = DZS - SZ(JNS+1)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          EWWT = A1*EXP(B1M*R)
          FOR = (B1*EWWT)*R
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXOT = FFX
          FYOT = FFY
          FZOT = FFZ
          FOXJ = FFX
          FOYJ = FFY
          FOZJ = FFZ
          RX = DXS - SX(JNS+2)
          RY = DYS - SY(JNS+2)
          RZ = DZS - SZ(JNS+2)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          ETERM1 = A2*EXP(B2M*R)
          ETERM2 = A3*EXP(B3M*R)
          FOR = (B2*ETERM1+B3*ETERM2)*R
          EWWT = EWWT + ETERM1 + ETERM2
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXOT = FXOT + FFX
          FYOT = FYOT + FFY
          FZOT = FZOT + FFZ
          F1XJ = FFX
          F1YJ = FFY
          F1ZJ = FFZ
          RX = DXS - SX(JNS+3)
          RY = DYS - SY(JNS+3)
          RZ = DZS - SZ(JNS+3)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          ETERM1 = A2*EXP(B2M*R)
          ETERM2 = A3*EXP(B3M*R)
          FOR = (B2*ETERM1+B3*ETERM2)*R
          EWWT = EWWT + ETERM1 + ETERM2
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXOT = FXOT + FFX
          FYOT = FYOT + FFY
          FZOT = FZOT + FFZ
          F2XJ = FFX
          F2YJ = FFY
          F2ZJ = FFZ
          DXS = XD + SX(INS+2)
          DYS = YD + SY(INS+2)
          DZS = ZD + SZ(INS+2)
          RX = DXS - SX(JNS+2)
          RY = DYS - SY(JNS+2)
          RZ = DZS - SZ(JNS+2)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,3)*RM1
          EFFET = TEX
          FOR = TEX*RSQ
          ETERM1 = A4*EXP(B4M*R)
          FOR = (B4*ETERM1)*RM1 + FOR
          EWWT = EWWT + ETERM1 + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX1T = FFX
          FY1T = FFY
          FZ1T = FFZ
          F1XJ = F1XJ + FFX
          F1YJ = F1YJ + FFY
          F1ZJ = F1ZJ + FFZ
          RX = DXS - SX(JNS+3)
          RY = DYS - SY(JNS+3)
          RZ = DZS - SZ(JNS+3)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,3)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          ETERM1 = A4*EXP(B4M*R)
          FOR = (B4*ETERM1)*RM1 + FOR
          EWWT = EWWT + ETERM1 + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX1T = FX1T + FFX
          FY1T = FY1T + FFY
          FZ1T = FZ1T + FFZ
          F2XJ = F2XJ + FFX
          F2YJ = F2YJ + FFY
          F2ZJ = F2ZJ + FFZ
          RX = DXS - SX(JNS+1)
          RY = DYS - SY(JNS+1)
          RZ = DZS - SZ(JNS+1)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          ETERM1 = A2*EXP(B2M*R)
          ETERM2 = A3*EXP(B3M*R)
          FOR = (B2*ETERM1+B3*ETERM2)*R
          EWWT = EWWT + ETERM1 + ETERM2
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX1T = FX1T + FFX
          FY1T = FY1T + FFY
          FZ1T = FZ1T + FFZ
          FOXJ = FOXJ + FFX
          FOYJ = FOYJ + FFY
          FOZJ = FOZJ + FFZ
          RX = DXS - SX(JNS+4)
          RY = DYS - SY(JNS+4)
          RZ = DZS - SZ(JNS+4)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,4)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          EWWT = EWWT + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX1T = FX1T + FFX
          FY1T = FY1T + FFY
          FZ1T = FZ1T + FFZ
          FPXJ = FFX
          FPYJ = FFY
          FPZJ = FFZ
          DXS = XD + SX(INS+3)
          DYS = YD + SY(INS+3)
          DZS = ZD + SZ(INS+3)
          RX = DXS - SX(JNS+2)
          RY = DYS - SY(JNS+2)
          RZ = DZS - SZ(JNS+2)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,3)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          ETERM1 = A4*EXP(B4M*R)
          FOR = (B4*ETERM1)*RM1 + FOR
          EWWT = EWWT + ETERM1 + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX2T = FFX
          FY2T = FFY
          FZ2T = FFZ
          F1XJ = F1XJ + FFX
          F1YJ = F1YJ + FFY
          F1ZJ = F1ZJ + FFZ
          RX = DXS - SX(JNS+3)
          RY = DYS - SY(JNS+3)
          RZ = DZS - SZ(JNS+3)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,3)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          ETERM1 = A4*EXP(B4M*R)
          FOR = (B4*ETERM1)*RM1 + FOR
          EWWT = EWWT + ETERM1 + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX2T = FX2T + FFX
          FY2T = FY2T + FFY
          FZ2T = FZ2T + FFZ
          F2XJ = F2XJ + FFX
          F2YJ = F2YJ + FFY
          F2ZJ = F2ZJ + FFZ
          RX = DXS - SX(JNS+1)
          RY = DYS - SY(JNS+1)
          RZ = DZS - SZ(JNS+1)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          ETERM1 = A2*EXP(B2M*R)
          ETERM2 = A3*EXP(B3M*R)
          FOR = (B2*ETERM1+B3*ETERM2)*R
          EWWT = EWWT + ETERM1 + ETERM2
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX2T = FX2T + FFX
          FY2T = FY2T + FFY
          FZ2T = FZ2T + FFZ
          FOXJ = FOXJ + FFX
          FOYJ = FOYJ + FFY
          FOZJ = FOZJ + FFZ
          RX = DXS - SX(JNS+4)
          RY = DYS - SY(JNS+4)
          RZ = DZS - SZ(JNS+4)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,4)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          EWWT = EWWT + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FX2T = FX2T + FFX
          FY2T = FY2T + FFY
          FZ2T = FZ2T + FFZ
          FPXJ = FPXJ + FFX
          FPYJ = FPYJ + FFY
          FPZJ = FPZJ + FFZ
          DXS = XD + SX(INS+4)
          DYS = YD + SY(INS+4)
          DZS = ZD + SZ(INS+4)
          RX = DXS - SX(JNS+2)
          RY = DYS - SY(JNS+2)
          RZ = DZS - SZ(JNS+2)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,4)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          EWWT = EWWT + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXPT = FFX
          FYPT = FFY
          FZPT = FFZ
          F1XJ = F1XJ + FFX
          F1YJ = F1YJ + FFY
          F1ZJ = F1ZJ + FFZ
          RX = DXS - SX(JNS+3)
          RY = DYS - SY(JNS+3)
          RZ = DZS - SZ(JNS+3)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(2,4)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          EWWT = EWWT + TEX
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXPT = FXPT + FFX
          FYPT = FYPT + FFY
          FZPT = FZPT + FFZ
          F2XJ = F2XJ + FFX
          F2YJ = F2YJ + FFY
          F2ZJ = F2ZJ + FFZ
          RX = DXS - SX(JNS+4)
          RY = DYS - SY(JNS+4)
          RZ = DZS - SZ(JNS+4)
          RSQ = RX*RX + RY*RY + RZ*RZ
          R = SQRT(RSQ)
          RM1 = R
          TEX = QQ(4,4)*RM1
          EFFET = EFFET + TEX
          FOR = TEX*RSQ
          EWWT = EWWT + TEX
          EWW = EWWT + EWW
          EFFE = EFFET + EFFE
          FFX = RX*FOR
          FFY = RY*FOR
          FFZ = RZ*FOR
          FXPT = FXPT + FFX
          FYPT = FYPT + FFY
          FZPT = FZPT + FFZ
          FPXJ = FPXJ + FFX
          FPYJ = FPYJ + FFY
          FPZJ = FPZJ + FFZ
          FXO = FXOT + FXO
          FYO = FYOT + FYO
          FZO = FZOT + FZO
          FX1 = FX1T + FX1
          FY1 = FY1T + FY1
          FZ1 = FZ1T + FZ1
          FX2 = FX2T + FX2
          FY2 = FY2T + FY2
          FZ2 = FZ2T + FZ2
          FXP = FXPT + FXP
          FYP = FYPT + FYP
          FZP = FZPT + FZP
          FOXP(J) = FOXJ
          FOYP(J) = FOYJ
          FOZP(J) = FOZJ
          F1XP(J) = F1XJ
          F1YP(J) = F1YJ
          F1ZP(J) = F1ZJ
          F2XP(J) = F2XJ
          F2YP(J) = F2YJ
          F2ZP(J) = F2ZJ
          FPXP(J) = FPXJ
          FPYP(J) = FPYJ
          FPZP(J) = FPZJ
 2200   CONTINUE
        DO 2400 J = 1, L
          K = IND(J)
          FOX(K) = FOX(K) - FOXP(J)
          FOY(K) = FOY(K) - FOYP(J)
          FOZ(K) = FOZ(K) - FOZP(J)
          F1X(K) = F1X(K) - F1XP(J)
          F1Y(K) = F1Y(K) - F1YP(J)
          F1Z(K) = F1Z(K) - F1ZP(J)
          F2X(K) = F2X(K) - F2XP(J)
          F2Y(K) = F2Y(K) - F2YP(J)
          F2Z(K) = F2Z(K) - F2ZP(J)
          FPX(K) = FPX(K) - FPXP(J)
          FPY(K) = FPY(K) - FPYP(J)
          FPZ(K) = FPZ(K) - FPZP(J)
 2400   CONTINUE
        FOX(I) = FOX(I) + FXO
        FOY(I) = FOY(I) + FYO
        FOZ(I) = FOZ(I) + FZO
        F1X(I) = F1X(I) + FX1
        F1Y(I) = F1Y(I) + FY1
        F1Z(I) = F1Z(I) + FZ1
        F2X(I) = F2X(I) + FX2
        F2Y(I) = F2Y(I) + FY2
        F2Z(I) = F2Z(I) + FZ2
        FPX(I) = FPX(I) + FXP
        FPY(I) = FPY(I) + FYP
        FPZ(I) = FPZ(I) + FZP
 2600   CONTINUE
 2800 CONTINUE
      ISIT = NSITES(1)
      NSP = NSPECI(1)
      IF (NION .LE. 0) GO TO 3400
      ION = 0
      DO 3200 ION = 1, NION
        K = NSP + ION
        JSP = NSS + ION
        XX = 0
        YY = 0
        ZZ = 0
        DO 3000 I = 1, NSP
          INS = (I-1)*ISIT
          XD = X0(I) - X0(K)
          YD = Y0(I) - Y0(K)
          ZD = Z0(I) - Z0(K)
          XD = XD - 2.*ALENGT*(XD*ALENGM)
          YD = YD - 2.*ALENGT*(YD*ALENGM)
          ZD = ZD - 2.*ZD
          DX = XD + SX(INS+1)
          DY = YD + SY(INS+1)
          DZ = ZD + SZ(INS+1)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = A(1)*DSQI
          T2 = B(1)*D6I
          T3 = C(1)*D12I
          EWIT = T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          XO = DX*GGG
          YO = DY*GGG
          ZO = DZ*GGG
          DX = XD + SX(INS+2)
          DY = YD + SY(INS+2)
          DZ = ZD + SZ(INS+2)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = A(2)*DSQI
          T2 = B(2)*D6I
          T3 = C(2)*D12I
          EWIT = EWIT + T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          X1 = DX*GGG
          Y1 = DY*GGG
          Z1 = DZ*GGG
          DX = XD + SX(INS+3)
          DY = YD + SY(INS+3)
          DZ = ZD + SZ(INS+3)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = A(3)*DSQI
          T2 = B(3)*D6I
          T3 = C(3)*D12I
          EWIT = EWIT + T1 + T2 + T3
          EWI = EWI + EWIT
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          X2 = DX*GGG
          Y2 = DY*GGG
          Z2 = DZ*GGG
          FOX(I) = FOX(I) + XO
          FOY(I) = FOY(I) + YO
          FOZ(I) = FOZ(I) + ZO
          F1X(I) = F1X(I) + X1
          F1Y(I) = F1Y(I) + Y1
          F1Z(I) = F1Z(I) + Z1
          F2X(I) = F2X(I) + X2
          F2Y(I) = F2Y(I) + Y2
          F2Z(I) = F2Z(I) + Z2
          XX = XX + XO + X1 + X2
          YY = YY + YO + Y1 + Y2
          ZZ = ZZ + ZO + Z1 + Z2
 3000   CONTINUE
        FSX(JSP) = FSX(JSP) - XX
        FSY(JSP) = FSY(JSP) - YY
        FSZ(JSP) = FSZ(JSP) - ZZ
 3200 CONTINUE
 3400 CONTINUE
      DO 3600 IA = 1, NATOMS
        FAX(IA) = 0
        FAY(IA) = 0
        FAZ(IA) = 0
 3600 CONTINUE
      ISIT = NSITES(1)
      NSP = NSPECI(1)
      DO 4000 I = 1, NSP
        INS = (I-1)*ISIT
        DO 3800 IA = 1, NATOMS
          K = IA + NOP
          XD = X0(I) - X0(K)
          YD = Y0(I) - Y0(K)
          ZD = Z0(I) - Z0(K)
          XD = XD - 2.*ALENGT*(XD*ALENGM)
          YD = YD - 2.*ALENGT*(YD*ALENGM)
          ZD = ZD - 2.*ZD
          DX = XD + SX(INS+1)
          DY = YD + SY(INS+1)
          DZ = ZD + SZ(INS+1)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = AA(1,IA)*DSQI
          T2 = BB(1,IA)*D6I
          T3 = CC(1,IA)*D12I
          EWAT = T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          FOX(I) = FOX(I) + DX*GGG
          FOY(I) = FOY(I) + DY*GGG
          FOZ(I) = FOZ(I) + DZ*GGG
          FAX(IA) = FAX(IA) + DX*GGG
          FAY(IA) = FAY(IA) + DY*GGG
          FAZ(IA) = FAZ(IA) + DZ*GGG
          DX = XD + SX(INS+2)
          DY = YD + SY(INS+2)
          DZ = ZD + SZ(INS+2)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = AA(2,IA)*DSQI
          T2 = BB(2,IA)*D6I
          T3 = CC(2,IA)*D12I
          EWAT = EWAT + T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          F1X(I) = F1X(I) + DX*GGG
          F1Y(I) = F1Y(I) + DY*GGG
          F1Z(I) = F1Z(I) + DZ*GGG
          FAX(IA) = FAX(IA) + DX*GGG
          FAY(IA) = FAY(IA) + DY*GGG
          FAZ(IA) = FAZ(IA) + DZ*GGG
          DX = XD + SX(INS+3)
          DY = YD + SY(INS+3)
          DZ = ZD + SZ(INS+3)
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = AA(3,IA)*DSQI
          T2 = BB(3,IA)*D6I
          T3 = CC(3,IA)*D12I
          EWAT = EWAT + T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          F2X(I) = F2X(I) + DX*GGG
          F2Y(I) = F2Y(I) + DY*GGG
          F2Z(I) = F2Z(I) + DZ*GGG
          FAX(IA) = FAX(IA) + DX*GGG
          FAY(IA) = FAY(IA) + DY*GGG
          FAZ(IA) = FAZ(IA) + DZ*GGG
          EWA = EWA + EWAT
 3800   CONTINUE
 4000 CONTINUE
      DO 4200 I = 1, NSP
        INS = (I-1)*ISIT
        FSX(INS+1) = FSX(INS+1) + FOX(I)
        FSY(INS+1) = FSY(INS+1) + FOY(I)
        FSZ(INS+1) = FSZ(INS+1) + FOZ(I)
        FSX(INS+2) = FSX(INS+2) + F1X(I)
        FSY(INS+2) = FSY(INS+2) + F1Y(I)
        FSZ(INS+2) = FSZ(INS+2) + F1Z(I)
        FSX(INS+3) = FSX(INS+3) + F2X(I)
        FSY(INS+3) = FSY(INS+3) + F2Y(I)
        FSZ(INS+3) = FSZ(INS+3) + F2Z(I)
        FSX(INS+4) = FSX(INS+4) + FPX(I)
        FSY(INS+4) = FSY(INS+4) + FPY(I)
        FSZ(INS+4) = FSZ(INS+4) + FPZ(I)
 4200 CONTINUE
      IF (NION .LE. 0) GO TO 5800
      DO 4600 I = 1, NION
        K = I + NSP
        ISP = NSS + I
        XX = 0
        YY = 0
        ZZ = 0
        XD = X0(K)
        YD = Y0(K)
        ZD = Z0(K)
        DO 4400 J = 1, NATOMS
          L = NOP + J
          DX = XD - X0(L)
          DY = YD - Y0(L)
          DZ = ZD - Z0(L)
          DX = DX - 2.*ALENGT*(DX*ALENGM)
          DY = DY - 2.*ALENGT*(DY*ALENGM)
          DZ = DZ - 2.*DZ
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = AAA(J)*DSQI
          T2 = BBB(J)*D6I
          T3 = CCC(J)*D12I
          EIA = EIA + T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          XX = XX + GGG*DX
          YY = YY + GGG*DY
          ZZ = ZZ + GGG*DZ
          FAX(J) = FAX(J) + GGG*DX
          FAY(J) = FAY(J) + GGG*DY
          FAZ(J) = FAZ(J) + GGG*DZ
 4400   CONTINUE
        FSX(ISP) = FSX(ISP) + XX
        FSY(ISP) = FSY(ISP) + YY
        FSZ(ISP) = FSZ(ISP) + ZZ
 4600 CONTINUE
      DO 4800 IA = 1, NATOMS
        JSP = NSS + NION + IA
        FSX(JSP) = FSX(JSP) - FAX(IA)
        FSY(JSP) = FSY(JSP) - FAY(IA)
        FSZ(JSP) = FSZ(JSP) - FAZ(IA)
 4800 CONTINUE
      IF (NION .EQ. 1) GO TO 5800
      DO 5000 I = 1, NION
        FIX(I) = 0
        FIY(I) = 0
        FIZ(I) = 0
 5000 CONTINUE
      DO 5400 I = 2, NION
        XX = 0
        YY = 0
        ZZ = 0
        K = I + NSP
        XD = X0(K)
        YD = Y0(K)
        ZD = Z0(K)
        DO 5200 J = 1, I - 1
          L = NSP + J
          JSP = NSS + J
          DX = XD - X0(L)
          DY = YD - Y0(L)
          DZ = ZD - Z0(L)
          DX = DX - 2.*ALENGT*(DX*ALENGM)
          DY = DY - 2.*ALENGT*(DY*ALENGM)
          DZ = DZ - 2.*DZ
          DD = DX*DX + DY*DY + DZ*DZ
          DDI = DD
          DSQI = SQRT(DDI)
          D6I = DDI*DDI*DDI
          D12I = D6I*D6I
          T1 = AAAA*DSQI
          T2 = BBBB*D6I
          T3 = CCCC*D12I
          EII = EII + T1 + T2 + T3
          GGG = T1 + 6.0*T2 + 12.0*T3
          GGG = GGG*DDI
          XX = XX + GGG*DX
          YY = YY + GGG*DY
          ZZ = ZZ + GGG*DZ
          FSX(JSP) = FSX(JSP) - GGG*DX
          FSY(JSP) = FSY(JSP) - GGG*DY
          FSZ(JSP) = FSZ(JSP) - GGG*DZ
 5200   CONTINUE
        FIX(I) = FIX(I) + XX
        FIY(I) = FIY(I) + YY
        FIZ(I) = FIZ(I) + ZZ
 5400 CONTINUE
      DO 5600 I = 1, NION
        ISP = NSS + I
        FSX(ISP) = FSX(ISP) + FIX(I)
        FSY(ISP) = FSY(ISP) + FIY(I)
        FSZ(ISP) = FSZ(ISP) + FIZ(I)
 5600 CONTINUE
 5800 CONTINUE
      DO 6000 I = 1, NOP
        FX(I) = 0
        FY(I) = 0
        FZ(I) = 0
 6000 CONTINUE
      DO 6200 I = 1, NSPECI(1)
        ISP = (I-1)*NSITES(1)
        FX(I)=FX(I)+FSX(ISP+1)+FSX(ISP+2)+FSX(ISP+3)+FSX(ISP+4)
        FY(I)=FY(I)+FSY(ISP+1)+FSY(ISP+2)+FSY(ISP+3)+FSY(ISP+4)
        FZ(I)=FZ(I)+FSZ(ISP+1)+FSZ(ISP+2)+FSZ(ISP+3)+FSZ(ISP+4)
        TX(I) = 0
        TY(I) = 0
        TZ(I) = 0
        TX(I) = FSZ(ISP+1)*SY(ISP+1) - FSY(ISP+1)*SZ(ISP+1) + FSZ(ISP+2)
     1     *SY(ISP+2) - FSY(ISP+2)*SZ(ISP+2) + FSZ(ISP+3)*SY(ISP+3) - 
     2     FSY(ISP+3)*SZ(ISP+3) + FSZ(ISP+4)*SY(ISP+4) - FSY(ISP+4)*SZ(
     3     ISP+4)
        TY(I) = FSX(ISP+1)*SZ(ISP+1) - FSZ(ISP+1)*SX(ISP+1) + FSX(ISP+2)
     1     *SZ(ISP+2) - FSZ(ISP+2)*SX(ISP+2) + FSX(ISP+3)*SZ(ISP+3) - 
     2     FSZ(ISP+3)*SX(ISP+3) + FSX(ISP+4)*SZ(ISP+4) - FSZ(ISP+4)*SX(
     3     ISP+4)
        TZ(I) = FSY(ISP+1)*SX(ISP+1) - FSX(ISP+1)*SY(ISP+1) + FSY(ISP+2)
     1     *SX(ISP+2) - FSX(ISP+2)*SY(ISP+2) + FSY(ISP+3)*SX(ISP+3) - 
     2     FSX(ISP+3)*SY(ISP+3) + FSY(ISP+4)*SX(ISP+4) - FSX(ISP+4)*SY(
     3     ISP+4)
 6200 CONTINUE
      N = NSS
      DO 6400 I = NSPECI(1) + 1, 2000
        N = N + 1
        FX(I) = FSX(N)
        FY(I) = FSY(N)
        FZ(I) = FSZ(N)
 6400 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB022(BUF,IW,NBES,K)
      PARAMETER (NX=125, NY=125, NZ=10)
 
      COMMON /DATA/  BES(150),DZR
      COMMON /DATA/  PP1(NX,NY,NZ),PM1(NX,NY,NZ)
      COMMON /DATA/  CDPP1(NX,NY,NZ),CDPM1(NX,NY,NZ)
 
      DIMENSION BUF(NX,NY,2,1)
 
      DO 1200 J = 1, NY
        DO 1000 I = 1, NX
          PP1(I,J,K) = BUF(I,J,2,IW)
          CDPP1(I,J,K) = BUF(I,J,1,IW)
          PM1(I,J,K) = BUF(I,J,1,IW)
          CDPM1(I,J,K) = BUF(I,J,2,IW)
 1000   CONTINUE
 1200 CONTINUE
      DO 1600 J = 1, NY
        DO 1400 I = 1, NX
          BUF(I,J,1,IW) = BES(1)*PM1(I,J,K) + BES(2)*PP1(I,J,K)
          BUF(I,J,2,IW) = BES(1)*CDPM1(I,J,K) + BES(2)*CDPP1(I,J,K)
 1400   CONTINUE
 1600 CONTINUE
      DZR = DZR*2.
      DO 2200 NB = 3, NBES
        DO 2000 J = 1, NY
          DO 1800 I = 1, NX
            BUF(I,J,1,IW) = BUF(I,J,1,IW) + BES(NB)*PM1(I,J,K)
            BUF(I,J,2,IW) = BUF(I,J,2,IW) + BES(NB)*CDPM1(I,J,K)
            CC = PM1(I,J,K)
            CCC = CDPM1(I,J,K)
            PM1(I,J,K) = PP1(I,J,K)
            CDPM1(I,J,K) = CDPP1(I,J,K)
            PP1(I,J,K) = CC
            CDPP1(I,J,K) = CCC
 1800     CONTINUE
 2000   CONTINUE
 2200 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB023(VLCP)
      LOGICAL ORTHO
      PARAMETER (EPS=1.0E-6,EXCUT=30.0)
      PARAMETER (IUMX = 1)
      COMPLEX STRF
      PARAMETER ( MXH=4414, MXV=401, MPX=21, NPK= 60, NAX=17, NTYPX= 3,
     &            LCORX=2, NPSX=3, NRX1=33, NRX2=32, NRX3=32, MAXTER=20,
     &            NRXX=NRX1*NRX2*NRX3,MXHC= MXH/1.415,MXVC= MXV/1.415)
      PARAMETER ( NGM=3000,NTYP=NTYPX,NAT=NAX,NLC=2,NNL=3)
      PARAMETER ( DQ=0.034, NQX=127 )
      PARAMETER ( NQXE=NQX*(NQX+1)/2)
      COMMON/DATA/   TAU(3,NAX),
     +       PI, TPI, FPI, ALAT, TPIBA, TPIBA2, OMEGA,
     +       G(3,NRXX), GG(NRXX),
     +       ECUT(MAXTER),
     +       ZP(NPSX), CC(2,NPSX), ALPC(2,NPSX),
     +       APS(6,0:3,NPSX), ALPS(3,0:3,NPSX),
     +       XP(NPSX,NTYPX),
     +       ZV(NTYPX),
     +       TAB(NQX*(NQX+1)/2,0:LCORX,NTYPX),
     +       STRF(NRXX,NTYPX), VLOC(NRXX,NTYPX)
 
      DIMENSION LMAX(NPSX), LCORE(NPSX),ITYP(NAX),
     +       IPSEUD(NPSX,NTYPX),  NPS(NTYPX)
      DO 1200 I = 1, NPSX
        LMAX(I) = 1
        LCORE(I) = 2
        DO 1000 J = 1, NTYPX
          IPSEUD(I,J) = 1
          NPS(J) = 3
 1000   CONTINUE
 1200 CONTINUE
      DO 1400 I = 1, NAX
        ITYP(I) = 2
 1400 CONTINUE
      DO 2000 IG = 1, NGM
        DO 1800 NT = 1, NTYP
          STRF(IG,NT) = (0.0,0.0)
          DO 1600 N = 1, NAT
            IF (ITYP(N) .EQ. NT) THEN
                ARG = (G(1,IG)*TAU(1,N)+G(2,IG)*TAU(2,N)+G(3,IG)*TAU(3,N
     1             ))*TPI
                STRF(IG,NT) = STRF(IG,NT) + CMPLX(COS(ARG),(-SIN(ARG)))
            ENDIF
 
 1600     CONTINUE
          STRF(IG,NT) = STRF(IG,NT)/OMEGA
 1800   CONTINUE
 2000 CONTINUE
      DO 3600 IG = 1, NGM
        G2 = GG(IG)*TPIBA2
        DO 3400 NT = 1, NTYP
          VLOC(IG,NT) = 0.0
          DO 3200 NP = 1, NPS(NT)
            IP = IPSEUD(NP,NT)
            VLCP = 0.0
            LMX = LMAX(IP)
            LCR = LCORE(IP)
            ORTHO = LMX .EQ. LCR+1
            IF (G2 .LE. EPS) THEN
                DO 2200 I = 1, NLC
                  VLCP = VLCP - CC(I,IP)*PI/ALPC(I,IP)
 2200           CONTINUE
            ELSE
                DO 2600 I = 1, NLC
                  G2A = 0.25*G2/ALPC(I,IP)
                  IF (G2A .GT. EXCUT) GO TO 2400
                  VLCP = VLCP + CC(I,IP)*FPI*EXP((-G2A))/G2
 2400             CONTINUE
 2600           CONTINUE
            ENDIF
 
            VLCP = -ZP(IP)*VLCP
            IF (ORTHO) THEN
                DO 3000 I = 1, NNL
                  G2A = 0.25*G2/ALPS(I,LMX,IP)
                  IF (G2A .GT. EXCUT) GO TO 2800
                  VLCP = VLCP + (PI/ALPS(I,LMX,IP))**1.5*EXP((-G2A))*(
     1               APS(I,LMX,IP)+APS(I+3,LMX,IP)*(1.5-G2A)/ALPS(I,LMX,
     2               IP))
 2800             CONTINUE
 3000           CONTINUE
            ENDIF
            VLOC(IG,NT) = VLOC(IG,NT) + XP(IP,NT)*VLCP
 3200     CONTINUE
 3400   CONTINUE
 3600 CONTINUE
      DO 4400 NT = 1, NTYP
        DO 4200 NP = 1, NPS(NT)
          IP = IPSEUD(NP,NT)
          LMX = LMAX(IP)
          LCR = LCORE(IP)
          DO 4000 IJ = 1, NQXE
            DO 3800 LAM = 0, LCR
              TAB(IJ,LAM,NT) = TAB(IJ,LAM,NT) + PI*XP(IP,NT)
 3800       CONTINUE
 4000     CONTINUE
 4200   CONTINUE
 4400 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB024(ZI,ZR,AI)
      PARAMETER (NM=100,N=100,M=100)
      COMMON /DATA/ AR(NM,N),TAU(2,N)
      DIMENSION ZR(NM,M),ZI(NM,M),AI(NM,N)
 
      IF (M .EQ. 0) GO TO 2400
 
      DO 1200 K = 1, N
        DO 1000 J = 1, M
          ZI(K,J) = -ZR(K,J)*TAU(2,K)
          ZR(K,J) = ZR(K,J)*TAU(1,K)
 1000   CONTINUE
 1200 CONTINUE
C
      IF (N .EQ. 1) GO TO 2400
      DO 2200 I = 2, N
        L = I - 1
        H = AI(I,I)
        IF (H .EQ. 0.0E0) GO TO 2000
C
        DO 1800 J = 1, M
          S = 0.0E0
          SI = 0.0E0
C
          DO 1400 K = 1, L
            S = S + AR(I,K)*ZR(K,J) - AI(I,K)*ZI(K,J)
            SI = SI + AR(I,K)*ZI(K,J) + AI(I,K)*ZR(K,J)
 1400     CONTINUE
          S = S*H
          SI = SI*H
          DO 1600 K = 1, L
            ZR(K,J) = ZR(K,J) + S*AR(I,K) - SI*AI(I,K)
            ZI(K,J) = ZI(K,J) - SI*AR(I,K) + S*AI(I,K)
 1600     CONTINUE
C
 1800   CONTINUE
C
 2000   CONTINUE
 2200 CONTINUE
C
 2400 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB025(GTEN)
      PARAMETER (NX=5,NY=100,NA=100)
      COMMON/DATA/
     1       GXX(NX,NY), GXY(NX,NY), GYY(NX,NY), G(NX,NY),
     1 JABC(NA,3), RTP(NA,3), C(3,NA), RP(3,NA), RM(3,NA), AM(NA),
     1 RCM(3), EV(5), DR(3,5,NA),U(5,5),RGT(15)
      DIMENSION GTEN(5,5)
      PI = 3.1415926535898
      DX = NX
      DX = 2.*PI/DX
      DY = NY
      DY = 2.*PI/DY
 
      DO 4400 JX = 1, NX
        X = JX - (NX+1)/2
        X = X*DX
 
        DO 4200 JY = 1, NY
          Y = JY - (NY+1)/2
          Y = Y*DY
 
          DO 1000 K = 1, NA
            DR(1,1,K) = 0.
            DR(1,2,K) = RP(3,K)
            DR(1,3,K) = -RP(2,K)
            DR(2,1,K) = -RP(3,K)
            DR(2,2,K) = 0.
            DR(2,3,K) = RP(1,K)
            DR(3,1,K) = RP(2,K)
            DR(3,2,K) = -RP(1,K)
            DR(3,3,K) = 0.
 1000     CONTINUE
          X = X + DX/6.
          X = X - 2.*DX/6.
 
          DO 1400 I = 1, 3
            DO 1200 K = 1, NA
              DR(I,4,K) = (RP(I,K)-RM(I,K))*4./DX
 1200       CONTINUE
 1400     CONTINUE
          X = X - DX/6.
          X = X + 4.*DX/6.
          X = X - 2.*DX/6.
 
          DO 1800 I = 1, 3
            DO 1600 K = 1, NA
              DR(I,4,K) = DR(I,4,K) + (RP(I,K)-RM(I,K))/2./DX
 1600       CONTINUE
 1800     CONTINUE
          Y = Y + DY/6.
          Y = Y - 2.*DY/6.
 
          DO 2200 I = 1, 3
            DO 2000 K = 1, NA
              DR(I,5,K) = (RP(I,K)-RM(I,K))*4./DY
 2000       CONTINUE
 2200     CONTINUE
          Y = Y - DY/6.
          Y = Y + 4.*DY/6.
          Y = Y - 2.*DY/6.
 
          DO 2600 I = 1, 3
            DO 2400 K = 1, NA
              DR(I,5,K) = DR(I,5,K) + (RP(I,K)-RM(I,K))/2./DY
 2400       CONTINUE
 2600     CONTINUE
 
          DO 3200 I = 1, 5
            DO 3000 J = I, 5
              S = 0.
 
              DO 2800 K = 1, NA
                S = S + AM(K)*(DR(1,I,K)*DR(1,J,K)+DR(2,I,K)*DR(2,J,K)+
     1             DR(3,I,K)*DR(3,J,K))
 2800         CONTINUE
              GTEN(I,J) = S
              GTEN(J,I) = S
 3000       CONTINUE
 3200     CONTINUE
          DET = 1.
 
          DO 3400 I = 1, 5
            IF (GTEN(I,I) .NE. 0) EV(I) = 505379.05/GTEN(I,I)
            DET = DET*GTEN(I,I)
 3400     CONTINUE
          L = 0
          DO 4000 I = 1, 5
            DO 3800 J = I, 5
              S = 0.
 
              DO 3600 M = 1, 5
                S = S + U(I,M)*EV(M)*U(J,M)
 3600         CONTINUE
              L = L + 1
              RGT(L) = S
              GTEN(I,J) = S
 3800       CONTINUE
 4000     CONTINUE
          GXX(JX,JY) = GTEN(4,4)
          GXY(JX,JY) = GTEN(4,5)
          GYY(JX,JY) = GTEN(5,5)
          G(JX,JY) = DET
 4200   CONTINUE
 4400 CONTINUE
      JX = (NX+1)/2
      JY = (NY+1)/2
      SC = .001
      IF (G(JX,JY) .NE. 0) SC = 10000./G(JX,JY)
      RETURN 
      END
      SUBROUTINE SUB026(F)
      COMPLEX P,B,GAM2,DEL2,DEL4,G2O2B,FST,CDLNS,CDLNS0,EP,EPP
      COMPLEX DINC,DINT,YA,OVER,TERM,CX2,FCTP,FCTM
      COMPLEX ARGU,ARGUM
      COMMON /DATA/ P,B,GAM2,DEL2,DEL4,G2O2B,FST,CDLNS,CDLNS0
      COMMON /DATA/ DINC,DINT,YA(12),OVER,TERM,CX2,FCTP,FCTM
      COMMON /DATA/ ARGU,ARGUM,EP,EPP
      REAL MMBSJ0
      COMMON /DATA/ BES(43,43,24),MMBSJ0(43,43)
      COMMON /DATA/ XP(6),C(12),D(12),YR(12),YI(12)
      COMMON /DATA/ TL(24),TH(19),DTL(24),DTH(19),ZERO(40)
      DIMENSION IN(2),F(43)
      DATA IN/19,19/,IER/20/
 
      PI = 3.141592653
      HBARCP = .624008
      SSQ = 0.
C
      S = 52.8
      DO 3200 J = 1, 2
        IF (J .EQ. 2) S = 546.
        S = S*S
C
        DLNS = ALOG(S)
        CDLNS = CMPLX(DLNS,(-PI/2.))
        EP = CMPLX(XP(2),0.)
        REF = ALOG(100.)
        CDLNS0 = CDLNS - CMPLX(REF,0.)
        P = (XP(1)+EP*CDLNS0**2)/(1.+EP*CDLNS0**2)
        B = CMPLX(XP(3),0.) + CMPLX(XP(4),0.)*CDLNS0**2
        GAM2 = (.78,0.)
        DEL2 = CMPLX(XP(5),0.) + CMPLX(XP(6),0.)*CDLNS0**2
        DEL4 = DEL2**2/4.
        G2O2B = (.5,0.)*GAM2/B
 1000   CONTINUE
C
        ISKIP = 1
        MAX = IN(J)
 
        DO 3000 I = 1, MAX, ISKIP
          TM = TL(I)
          IF (J .EQ. 2) TM = TH(I)
          DINT = (0.,0.)
          XL = 1.E-7
          T = -TM
          T1 = TM
          IF (I .EQ. 1) T1 = .1
          ADDI = T1 + 1.
          KMAX = 3.*ADDI
          IF (T1 .LT. 3.) KMAX = 4.*ADDI
          KMAX = MIN0(40,KMAX)
          IRUN = I + 24*(J-1)
 
          DO 1400 K = 1, KMAX
            XU = ZERO(K)/SQRT(T1)
            A = .5*(XU+XL)
            BB = XU - XL
 
            DO 1200 II = 1, 12
              ADD = BB*C(II)
              X = A + ADD
              IY = X*SQRT(TM)
              IY = MIN0(40,IY)
              BES(IRUN,K,II) = MMBSJ0(IY,IER)
              III = II + 12
              X = A - ADD
              IY = X*SQRT(TM)
              IY = MIN0(40,IY)
              BES(IRUN,K,III) = MMBSJ0(IY,IER)
 1200       CONTINUE
 
            XL = XU
 1400     CONTINUE
 1600     CONTINUE
          XL = 1.E-7
 
          DO 2200 K = 1, KMAX
            XU = ZERO(K)/SQRT(T1)
            A = .5*(XL+XU)
            BB = XU - XL
 
            DO 1800 II = 1, 12
              ADD = BB*C(II)
              X = A + ADD
              CX2 = CMPLX(X*X,0.)
              ARGU = (1.,0.) - G2O2B*CX2
              ARGI = AIMAG(ARGU)
              TERM = G2O2B*CX2*(COS(ARGI)+(0.,1.)*SIN(ARGI))*EXP(REAL(
     1           ARGU))
              ARGUM = -CX2/(4.*B)
              ARGI = AIMAG(ARGUM)
              OVER = P*(COS(ARGI)+(0.,1.)*SIN(ARGI))*EXP(REAL(ARGUM))*(
     1           1.+DEL2*TERM+DEL4*TERM**2)
              Y = X*SQRT(TM)
              FCTP = (0.,1.)*CMPLX(X,0.)*((1.,0.)-CSQRT((1.,0.)-OVER))*
     1           CMPLX(BES(IRUN,K,II),0.)
              X = A - ADD
              CX2 = CMPLX(X*X,0.)
              ARGU = (1.,0.) - G2O2B*CX2
              ARGI = AIMAG(ARGU)
              TERM = G2O2B*CX2*(COS(ARGI)+(0.,1.)*SIN(ARGI))*EXP(REAL(
     1           ARGU))
              ARGUM = -CX2/(4.*B)
              ARGI = AIMAG(ARGUM)
              OVER = P*(COS(ARGI)+(0.,1.)*SIN(ARGI))*EXP(REAL(ARGUM))*(
     1           1.+DEL2*TERM+DEL4*TERM**2)
              Y = X*SQRT(TM)
              III = II + 12
              FCTM = (0.,1.)*CMPLX(X,0.)*((1.,0.)-CSQRT((1.,0.)-OVER))*
     1           CMPLX(BES(IRUN,K,III),0.)
              YA(II) = D(II)*(FCTP+FCTM)
              YR(II) = REAL(YA(II))
              YI(II) = AIMAG(YA(II))
 1800       CONTINUE
 
            SSUM0 = 0
            SSUM1 = 0
            DO 2000 IJK = 1, 12
              SSUM0 = SSUM0 + YR(IJK)
              SSUM1 = SSUM1 + YI(IJK)
 2000       CONTINUE
            DINCR = BB*SSUM0
            DINCI = BB*SSUM1
            DINC = CMPLX(DINCR,DINCI)
            DINT = DINT + DINC
            XL = XU
 2200     CONTINUE
 
 2400     CONTINUE
          FST = DINT
          IF (I .EQ. 1) STOT = 4.*PI*HBARCP**2*AIMAG(FST)
          DSIGMA = PI*HBARCP**2*CABS(FST)**2
          IF (J .EQ. 2) GO TO 2600
          DDT = DTL(I)
          RESIDD = ALOG(DSIGMA) - ALOG(DDT)
          IF (I.GT.16 .AND. I.LT.23) RESIDD = RESIDD*2.
          GO TO 2800
 2600     CONTINUE
          DDT = DTH(I)
          RESIDD = ALOG(DSIGMA) - ALOG(DDT)
 2800     CONTINUE
          IF (I.EQ.1 .OR. I.EQ.2) RESIDD = RESIDD*5.
          RESIDD = RESIDD/T1**.25
          F(IRUN) = RESIDD
          SSQ = SSQ + RESIDD**2
 3000   CONTINUE
 3200 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB027
      PARAMETER (NX=100,NY=100,NV=100)
      COMMON /DATA/ PS(NX,NY,NV),W(5,5),S(9)
      DIMENSION IX(9),IY(9)
      DO 1000 I = 1, 9
        IX(I) = I
        IY(I) = I
 1000 CONTINUE
      W(1,1) = 1.
      W(2,1) = 4.
      W(3,1) = 6.
      W(4,1) = 4.
      W(5,1) = 1.
      DO 1200 K = 1, 5
        W(1,K) = W(K,1)
 1200 CONTINUE
      DO 1600 K = 2, 5
        DO 1400 L = 2, 5
          W(K,L) = W(K,1)*W(1,L)
 1400   CONTINUE
 1600 CONTINUE
      LP = 0
      DO 3000 LV = 1, NV
        DO 2000 JX = 1, NX
          DO 1800 JY = 1, NY
            PS(JX,JY,LV) = 0.
 1800     CONTINUE
 2000   CONTINUE
        DO 2200 L = 1, 4
          IF (S(L) .NE. 0.) LP = L
 2200   CONTINUE
        DO 2800 L = 1, LP
          JX = IX(L) + (NX+1)/2 - 3
          JY = IY(L) + (NY+1)/2 - 3
          DO 2600 KX = 1, 5
            JPX = JX + KX
            DO 2400 KY = 1, 5
              JPY = JY + KY
              PS(JPX,JPY,LV) = PS(JPX,JPY,LV) + W(KX,KY)*S(L)
 2400       CONTINUE
 2600     CONTINUE
 2800   CONTINUE
 3000 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB028
C
      PARAMETER (NM=1000,N=100)
      COMMON /DATA/ AR(NM,N),AI(NM,N),D(N),E(N),E2(N),TAU(2,N)
C
      TAU(1,N) = 1.0E0
      TAU(2,N) = 0.0E0
C
      DO 1000 I = 1, N
        D(I) = AR(I,I)
 1000 CONTINUE
 
      DO 4200 II = 1, N
        I = N + 1 - II
        L = I - 1
        H = 0.0E0
        SCALE = 0.0E0
        IF (L .LT. 1) GO TO 1400
 
        DO 1200 K = 1, L
          SCALE = SCALE + ABS(AR(I,K)) + ABS(AI(I,K))
 1200   CONTINUE
C
        IF (SCALE .NE. 0.0E0) GO TO 1600
        TAU(1,L) = 1.0E0
        TAU(2,L) = 0.0E0
 1400   CONTINUE
        E(I) = 0.0E0
        E2(I) = 0.0E0
        GO TO 4000
C
 1600   CONTINUE
        DO 1800 K = 1, L
          AR(I,K) = AR(I,K)/SCALE
          AI(I,K) = AI(I,K)/SCALE
          H = H + AR(I,K)*AR(I,K) + AI(I,K)*AI(I,K)
 1800   CONTINUE
C
        E2(I) = SCALE*SCALE*H
        G = SQRT(H)
        E(I) = SCALE*G
        F = 3.14
        IF (F .EQ. 0.0E0) GO TO 2000
        TAU(1,L) = (AI(I,L)*TAU(2,I)-AR(I,L)*TAU(1,I))/F
        SI = (AR(I,L)*TAU(2,I)+AI(I,L)*TAU(1,I))/F
        H = H + F*G
        G = 1.0E0 + G/F
        AR(I,L) = G*AR(I,L)
        AI(I,L) = G*AI(I,L)
        IF (L .EQ. 1) GO TO 3600
        GO TO 2200
 2000   CONTINUE
        TAU(1,L) = -TAU(1,I)
        SI = TAU(2,I)
        AR(I,L) = G
 2200   CONTINUE
        F = 0.0E0
C
        DO 3000 J = 1, L
          G = 0.0E0
          GI = 0.0E0
 
          DO 2400 K = 1, J
            G = G + AR(J,K)*AR(I,K) + AI(J,K)*AI(I,K)
            GI = GI - AR(J,K)*AI(I,K) + AI(J,K)*AR(I,K)
 2400     CONTINUE
C
          JP1 = J + 1
          IF (L .LT. JP1) GO TO 2800
C
          DO 2600 K = JP1, L
            G = G + AR(K,J)*AR(I,K) - AI(K,J)*AI(I,K)
            GI = GI - AR(K,J)*AI(I,K) - AI(K,J)*AR(I,K)
 2600     CONTINUE
 2800     CONTINUE
          E(J) = G/H
          TAU(2,J) = GI/H
          F = F + E(J)*AR(I,J) - TAU(2,J)*AI(I,J)
 3000   CONTINUE
C
        HH = F/(H+H)
        DO 3400 J = 1, L
          F = AR(I,J)
          G = E(J) - HH*F
          E(J) = G
          FI = -AI(I,J)
          GI = TAU(2,J) - HH*FI
          TAU(2,J) = -GI
C
          DO 3200 K = 1, J
            AR(J,K)=AR(J,K)-F*E(K)-G*AR(I,K)+FI*TAU(2,K)+GI*AI(I,K)
            AI(J,K)=AI(J,K)-F*TAU(2,K)-G*AI(I,K)-FI*E(K)-GI*AR(I,K)
 3200     CONTINUE
 3400   CONTINUE
C
 3600   CONTINUE
        DO 3800 K = 1, L
          AR(I,K) = SCALE*AR(I,K)
          AI(I,K) = SCALE*AI(I,K)
 3800   CONTINUE
C
        TAU(2,L) = -SI
 4000   CONTINUE
        HH = D(I)
        D(I) = AR(I,I)
        AR(I,I) = HH
        AI(I,I) = SCALE*SQRT(H)
 4200 CONTINUE
C
      RETURN 
      END
      SUBROUTINE SUB029(GTEN)
      PARAMETER (NX=100,NY=100,NA=100)
      COMMON /DATA/
     1       GXX(NX,NY), GXY(NX,NY), GYY(NX,NY), G(NX,NY),
     1 JABC(NA,3), RTP(NA,3), C(3,NA), RP(3,NA),R, RM(3,NA), AM(NA),
     1 RCM(3), EV(5), DR(3,5,NA),U(5,5),RGT(15),PARAM(10),XTEN(5,5)
      DIMENSION GTEN(5,5)
 
      PI = 3.1415926535898
      DX = NX
      DX = 2.*PI/DX
      DY = NY
      DY = 2.*PI/DY
      DO 3600 JX = 1, NX
        X = JX - (NX+1)/2
        X = X*DX
        DO 3400 JY = 1, 25
          Y = JY - (NY+1)/2
          Y = Y*DY
          DO 1000 K = 1, NA
            DR(1,1,K) = 0.
            DR(1,2,K) = RP(3,K)
            DR(1,3,K) = -RP(2,K)
            DR(2,1,K) = -RP(3,K)
            DR(2,2,K) = 0.
            DR(2,3,K) = RP(1,K)
            DR(3,1,K) = RP(2,K)
            DR(3,2,K) = -RP(1,K)
            DR(3,3,K) = 0.
 1000     CONTINUE
          X = X + DX/6.
          X = X - 2.*DX/6.
          DO 1200 K = 1, NA
            DR(1,3,K) = (RP(1,K)-RM(1,K))*4./DX
            DR(2,3,K) = (RP(2,K)-RM(2,K))*4./DX
            DR(3,3,K) = (RP(3,K)-RM(3,K))*4./DX
 1200     CONTINUE
          X = X - DX/6.
          X = X + 4.*DX/6.
          X = X - 2.*DX/6.
          DO 1400 K = 1, NA
            DR(1,4,K) = (RP(1,K)-RM(1,K))/2./DX
            DR(2,4,K) = (RP(2,K)-RM(2,K))/2./DX
            DR(3,4,K) = (RP(3,K)-RM(3,K))/2./DX
 1400     CONTINUE
          Y = Y + DY/6.
          Y = Y - 2.*DY/6.
          DO 1600 K = 1, NA
            DR(1,2,K) = (RP(1,K)-RM(1,K))*4./DY
            DR(2,2,K) = (RP(2,K)-RM(2,K))*4./DY
            DR(3,2,K) = (RP(3,K)-RM(3,K))*4./DY
 1600     CONTINUE
          Y = Y - DY/6.
          Y = Y + 4.*DY/6.
          Y = Y - 2.*DY/6.
          DO 1800 K = 1, NA
            DR(1,5,K) = (RP(1,K)-RM(1,K))/2./DY
            DR(2,5,K) = (RP(2,K)-RM(2,K))/2./DY
            DR(3,5,K) = (RP(3,K)-RM(3,K))/2./DY
 1800     CONTINUE
          DO 2400 I = 1, 5
            DO 2200 J = I, 5
              S = 0.
              DO 2000 K = 1, NA
                S = S + AM(K)*(DR(1,I,K)*DR(1,J,K)+DR(2,I,K)*DR(2,J,K)+
     1             DR(3,I,K)*DR(3,J,K))
 2000         CONTINUE
              XTEN(I,J) = S
 2200       CONTINUE
 2400     CONTINUE
          DET = 1.
          DO 2600 I = 1, 5
            EV(I) = 505379.05/XTEN(I,I)
            DET = DET*XTEN(I,I)
 2600     CONTINUE
          DO 3200 I = 1, 5
            DO 3000 J = I, 5
              S = 0.
              DO 2800 M = 1, 5
                S = S + U(I,M)*EV(M)*U(J,M)
 2800         CONTINUE
              GTEN(I,J) = S
 3000       CONTINUE
 3200     CONTINUE
          GXX(JX,JY) = GTEN(4,4)
          GXY(JX,JY) = GTEN(4,5)
          GYY(JX,JY) = GTEN(5,5)
          G(JX,JY) = DET
 3400   CONTINUE
 3600 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB030(JMAX,IMAX,RESMI)
      PARAMETER (IM=1000,JM=100)
      DIMENSION RESMI(JMAX)
      COMMON /DATA/ PTD(IM,JM),RES(IM,JM),CFE(IM,JM)
      COMMON /DATA/ CFW(IM,JM),CFN(IM,JM),CFS(IM,JM)
      COMMON /DATA/ ZTD(IM,JM),COF(IM,JM)
      SOR = 3.14
      DO 1200 J = 1, JMAX
        DO 1000 I = 1, IMAX
          PTD(I,J) = PTD(I,J) + SOR*RES(I,J)
 1000   CONTINUE
 1200 CONTINUE
 
      DO 1800 J = 2, JMAX - 1
        RESMI(J) = 0.0
        DO 1400 I = 2, IMAX - 1
          RES(I,J) = COF(I,J)*(CFE(I,J)*(PTD(I+1,J)-PTD(I,J))+CFW(I,J)*(
     1       PTD(I-1,J)-PTD(I,J))+CFN(I,J)*(PTD(I,J+1)-PTD(I,J))+CFS(I,J
     2       )*(PTD(I,J-1)-PTD(I,J))-ZTD(I,J))
 1400   CONTINUE
        DO 1600 I = 1, IMAX
          RESMI(J) = RESMI(J) + RES(I,J)*RES(I,J)
 1600   CONTINUE
 1800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB031
      PARAMETER ( JDIM=129,KDIM=129,LDIM=101,MDIM=129, ND=6, NV=5 )
      PARAMETER (LS=1,LE=101,KS=1,KE=129,KD=129,LD=101,MD=129)
C
      COMMON/DATA/ U12(MD),U13(MD),U14(MD),U15(MD),U23(MD),
     $               U24(MD),U25(MD),U34(MD),U35(MD),U45(MD),
     $               B11(MD),B21(MD),B31(MD),B41(MD),B51(MD),
     $               B22(MD),B32(MD),B42(MD),B52(MD),B33(MD),
     $               B43(MD),B53(MD),B44(MD),B54(MD),B55(MD),F(LD,KD,5)
      COMMON/DATA/ A(LD,KD,5,5), B(LD,KD,5,5), C(LD,KD,5,5)
      COMMON/DATA/ E(LDIM,5,5),Q(LDIM,5,5),FN(LDIM,5),S(LDIM,5,5)
     $  ,H(LDIM,KDIM,5,5),U(LDIM,KDIM,5,5)
      K = KS
 
      DO 1400 N = 1, 5
        DO 1200 M = 1, 5
          DO 1000 L = LS, LE
            E(L,N,M) = C(L,KE,N,M)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
C
 
      DO 1600 L = LS, LE
        B11(L) = 5.E0*B(L,K,1,1)
        U12(L) = B(L,K,1,2)*B11(L)
        U13(L) = B(L,K,1,3)*B11(L)
        U14(L) = B(L,K,1,4)*B11(L)
        U15(L) = B(L,K,1,5)*B11(L)
        B21(L) = B(L,K,2,1)
        B22(L) = 5.E0*(B(L,K,2,2)-B21(L)*U12(L))
        U23(L) = (B(L,K,2,3)-B21(L)*U13(L))*B22(L)
        U24(L) = (B(L,K,2,4)-B21(L)*U14(L))*B22(L)
        U25(L) = (B(L,K,2,5)-B21(L)*U15(L))*B22(L)
        B31(L) = B(L,K,3,1)
        B32(L) = B(L,K,3,2) - B31(L)*U12(L)
        B33(L) = 5.E0*((B(L,K,3,3)-B31(L)*U13(L))-B32(L)*U23(L))
        U34(L) = ((B(L,K,3,4)-B31(L)*U14(L))-B32(L)*U24(L))*B33(L)
        U35(L) = ((B(L,K,3,5)-B31(L)*U15(L))-B32(L)*U25(L))*B33(L)
        B41(L) = B(L,K,4,1)
        B42(L) = B(L,K,4,2) - B41(L)*U12(L)
        B43(L) = (B(L,K,4,3)-B41(L)*U13(L)) - B42(L)*U23(L)
        B44(L) = 5.E0*(((B(L,K,4,4)-B41(L)*U14(L))-B42(L)*U24(L))-B43(L)
     1     *U34(L))
        U45(L) = (((B(L,K,4,5)-B41(L)*U15(L))-B42(L)*U25(L))-B43(L)*U35(
     1     L))*B44(L)
        B51(L) = B(L,K,5,1)
        B52(L) = B(L,K,5,2) - B51(L)*U12(L)
        B53(L) = (B(L,K,5,3)-B51(L)*U13(L)) - B52(L)*U23(L)
        B54(L)=((B(L,K,5,4)-B51(L)*U14(L))-B52(L)*U24(L))-B53(L)*U34(L)
        B55(L) = 5.E0*((((B(L,K,5,5)-B51(L)*U15(L))-B52(L)*U25(L))-B53(L
     1     )*U35(L))-B54(L)*U45(L))
 1600 CONTINUE
C
      DO 1800 L = LS, LE
        D1 = B11(L)*F(L,K,1)
        D2 = B22(L)*(F(L,K,2)-B21(L)*D1)
        D3 = B33(L)*(F(L,K,3)-B31(L)*D1-B32(L)*D2)
        D4 = B44(L)*(F(L,K,4)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
        D5 = B55(L)*(F(L,K,5)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*D4)
        F(L,K,5) = D5
        F(L,K,4) = D4 - U45(L)*D5
        F(L,K,3) = D3 - U35(L)*D5 - U34(L)*F(L,K,4)
        F(L,K,2) = D2 - U25(L)*D5 - U24(L)*F(L,K,4) - U23(L)*F(L,K,3)
        F(L,K,1) = D1 - U15(L)*D5 - U14(L)*F(L,K,4) - U13(L)*F(L,K,3) - 
     1     U12(L)*F(L,K,2)
 1800 CONTINUE
C
      DO 2200 M = 1, 5
        DO 2000 L = LS, LE
          D1 = B11(L)*C(L,K,1,M)
          D2 = B22(L)*(C(L,K,2,M)-B21(L)*D1)
          D3 = B33(L)*(C(L,K,3,M)-B31(L)*D1-B32(L)*D2)
          D4 = B44(L)*(C(L,K,4,M)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
          D5 = B55(L)*(C(L,K,5,M)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*
     1       D4)
          U(L,K,5,M) = D5
          U(L,K,4,M) = D4 - U45(L)*D5
          U(L,K,3,M) = D3 - U35(L)*D5 - U34(L)*U(L,K,4,M)
          U(L,K,2,M)=D2-U25(L)*D5-U24(L)*U(L,K,4,M)-U23(L)*U(L,K,3,M)
          U(L,K,1,M) = D1 - U15(L)*D5 - U14(L)*U(L,K,4,M) - U13(L)*U(L,K
     1       ,3,M) - U12(L)*U(L,K,2,M)
 2000   CONTINUE
 2200 CONTINUE
 
      DO 2600 M = 1, 5
 
        DO 2400 L = LS, LE
          D1 = B11(L)*A(L,K,1,M)
          D2 = B22(L)*(A(L,K,2,M)-B21(L)*D1)
          D3 = B33(L)*(A(L,K,3,M)-B31(L)*D1-B32(L)*D2)
          D4 = B44(L)*(A(L,K,4,M)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
          D5 = B55(L)*(A(L,K,5,M)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*
     1       D4)
          H(L,K,5,M) = D5
          H(L,K,4,M) = D4 - U45(L)*D5
          H(L,K,3,M) = D3 - U35(L)*D5 - U34(L)*H(L,K,4,M)
          H(L,K,2,M)=D2-U25(L)*D5-U24(L)*H(L,K,4,M)-U23(L)*H(L,K,3,M)
          H(L,K,1,M) = D1 - U15(L)*D5 - U14(L)*H(L,K,4,M) - U13(L)*H(L,K
     1       ,3,M) - U12(L)*H(L,K,2,M)
 2400   CONTINUE
 2600 CONTINUE
C
 
      DO 3400 N = 1, 5
 
        DO 2800 L = LS, LE
          FN(L,N) = F(L,KE,N) - E(L,N,1)*F(L,K,1) - E(L,N,2)*F(L,K,2) - 
     1       E(L,N,3)*F(L,K,3) - E(L,N,4)*F(L,K,4) - E(L,N,5)*F(L,K,5)
 2800   CONTINUE
 
        DO 3200 M = 1, 5
 
          DO 3000 L = LS, LE
            Q(L,N,M) = B(L,KE,N,M) - E(L,N,1)*H(L,K,1,M) - E(L,N,2)*H(L,
     1         K,2,M) - E(L,N,3)*H(L,K,3,M) - E(L,N,4)*H(L,K,4,M) - E(L,
     2         N,5)*H(L,K,5,M)
 3000     CONTINUE
 3200   CONTINUE
 3400 CONTINUE
C
      DO 7000 K = KS + 1, KE - 2
        I = K - 1
 
        DO 4200 N = 1, 5
 
          DO 3600 L = LS, LE
            F(L,K,N) = F(L,K,N) - A(L,K,N,1)*F(L,I,1) - A(L,K,N,2)*F(L,I
     1         ,2) - A(L,K,N,3)*F(L,I,3) - A(L,K,N,4)*F(L,I,4) - A(L,K,N
     2         ,5)*F(L,I,5)
 3600     CONTINUE
C
 
          DO 4000 M = 1, 5
 
            DO 3800 L = LS, LE
              B(L,K,N,M) = B(L,K,N,M) - A(L,K,N,1)*U(L,I,1,M) - A(L,K,N,
     1           2)*U(L,I,2,M) - A(L,K,N,3)*U(L,I,3,M) - A(L,K,N,4)*U(L,
     2           I,4,M) - A(L,K,N,5)*U(L,I,5,M)
              S(L,N,M) = (-E(L,N,1)*U(L,I,1,M)) - E(L,N,2)*U(L,I,2,M) - 
     1           E(L,N,3)*U(L,I,3,M) - E(L,N,4)*U(L,I,4,M) - E(L,N,5)*U(
     2           L,I,5,M)
              H(L,K,N,M) = (-A(L,K,N,1)*H(L,I,1,M)) - A(L,K,N,2)*H(L,I,2
     1           ,M) - A(L,K,N,3)*H(L,I,3,M) - A(L,K,N,4)*H(L,I,4,M) - A
     2           (L,K,N,5)*H(L,I,5,M)
 3800       CONTINUE
 4000     CONTINUE
 4200   CONTINUE
C
 
        DO 4800 N = 1, 5
 
          DO 4600 M = 1, 5
 
            DO 4400 L = LS, LE
              E(L,N,M) = S(L,N,M)
 4400       CONTINUE
 4600     CONTINUE
 4800   CONTINUE
C
 
        DO 5000 L = LS, LE
          B11(L) = 5.E0*B(L,K,1,1)
          U12(L) = B(L,K,1,2)*B11(L)
          U13(L) = B(L,K,1,3)*B11(L)
          U14(L) = B(L,K,1,4)*B11(L)
          U15(L) = B(L,K,1,5)*B11(L)
          B21(L) = B(L,K,2,1)
          B22(L) = 5.E0*(B(L,K,2,2)-B21(L)*U12(L))
          U23(L) = (B(L,K,2,3)-B21(L)*U13(L))*B22(L)
          U24(L) = (B(L,K,2,4)-B21(L)*U14(L))*B22(L)
          U25(L) = (B(L,K,2,5)-B21(L)*U15(L))*B22(L)
          B31(L) = B(L,K,3,1)
          B32(L) = B(L,K,3,2) - B31(L)*U12(L)
          B33(L) = 5.E0*((B(L,K,3,3)-B31(L)*U13(L))-B32(L)*U23(L))
          U34(L) = ((B(L,K,3,4)-B31(L)*U14(L))-B32(L)*U24(L))*B33(L)
          U35(L) = ((B(L,K,3,5)-B31(L)*U15(L))-B32(L)*U25(L))*B33(L)
          B41(L) = B(L,K,4,1)
          B42(L) = B(L,K,4,2) - B41(L)*U12(L)
          B43(L) = (B(L,K,4,3)-B41(L)*U13(L)) - B42(L)*U23(L)
          B44(L) = 5.E0*(((B(L,K,4,4)-B41(L)*U14(L))-B42(L)*U24(L))-B43(
     1       L)*U34(L))
          U45(L) = (((B(L,K,4,5)-B41(L)*U15(L))-B42(L)*U25(L))-B43(L)*
     1       U35(L))*B44(L)
          B51(L) = B(L,K,5,1)
          B52(L) = B(L,K,5,2) - B51(L)*U12(L)
          B53(L) = (B(L,K,5,3)-B51(L)*U13(L)) - B52(L)*U23(L)
          B54(L) = ((B(L,K,5,4)-B51(L)*U14(L))-B52(L)*U24(L)) - B53(L)*
     1       U34(L)
          B55(L) = 5.E0*((((B(L,K,5,5)-B51(L)*U15(L))-B52(L)*U25(L))-B53
     1       (L)*U35(L))-B54(L)*U45(L))
 5000   CONTINUE
C
 
 
        DO 5200 L = LS, LE
          D1 = B11(L)*F(L,K,1)
          D2 = B22(L)*(F(L,K,2)-B21(L)*D1)
          D3 = B33(L)*(F(L,K,3)-B31(L)*D1-B32(L)*D2)
          D4 = B44(L)*(F(L,K,4)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
          D5 = B55(L)*(F(L,K,5)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*D4)
          F(L,K,5) = D5
          F(L,K,4) = D4 - U45(L)*D5
          F(L,K,3) = D3 - U35(L)*D5 - U34(L)*F(L,K,4)
          F(L,K,2) = D2 - U25(L)*D5 - U24(L)*F(L,K,4) - U23(L)*F(L,K,3)
          F(L,K,1) = D1 - U15(L)*D5 - U14(L)*F(L,K,4) - U13(L)*F(L,K,3)
     1        - U12(L)*F(L,K,2)
 5200   CONTINUE
C
 
        DO 5600 M = 1, 5
 
          DO 5400 L = LS, LE
            D1 = B11(L)*C(L,K,1,M)
            D2 = B22(L)*(C(L,K,2,M)-B21(L)*D1)
            D3 = B33(L)*(C(L,K,3,M)-B31(L)*D1-B32(L)*D2)
            D4 = B44(L)*(C(L,K,4,M)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
            D5 = B55(L)*(C(L,K,5,M)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)
     1         *D4)
            U(L,K,5,M) = D5
            U(L,K,4,M) = D4 - U45(L)*D5
            U(L,K,3,M) = D3 - U35(L)*D5 - U34(L)*U(L,K,4,M)
            U(L,K,2,M)=D2-U25(L)*D5-U24(L)*U(L,K,4,M)-U23(L)*U(L,K,3,M)
            U(L,K,1,M) = D1 - U15(L)*D5 - U14(L)*U(L,K,4,M) - U13(L)*U(L
     1         ,K,3,M) - U12(L)*U(L,K,2,M)
 5400     CONTINUE
 5600   CONTINUE
C
 
        DO 6000 M = 1, 5
 
          DO 5800 L = LS, LE
            D1 = B11(L)*H(L,K,1,M)
            D2 = B22(L)*(H(L,K,2,M)-B21(L)*D1)
            D3 = B33(L)*(H(L,K,3,M)-B31(L)*D1-B32(L)*D2)
            D4 = B44(L)*(H(L,K,4,M)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
            D5 = B55(L)*(H(L,K,5,M)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)
     1         *D4)
            H(L,K,5,M) = D5
            H(L,K,4,M) = D4 - U45(L)*D5
            H(L,K,3,M) = D3 - U35(L)*D5 - U34(L)*H(L,K,4,M)
            H(L,K,2,M)=D2-U25(L)*D5-U24(L)*H(L,K,4,M)-U23(L)*H(L,K,3,M)
            H(L,K,1,M) = D1 - U15(L)*D5 - U14(L)*H(L,K,4,M) - U13(L)*H(L
     1         ,K,3,M) - U12(L)*H(L,K,2,M)
 5800     CONTINUE
 6000   CONTINUE
C
 
 
        DO 6800 N = 1, 5
 
          DO 6200 L = LS, LE
            FN(L,N) = FN(L,N) - E(L,N,1)*F(L,K,1) - E(L,N,2)*F(L,K,2) - 
     1         E(L,N,3)*F(L,K,3) - E(L,N,4)*F(L,K,4) - E(L,N,5)*F(L,K,5)
 6200     CONTINUE
 
          DO 6600 M = 1, 5
 
            DO 6400 L = LS, LE
              Q(L,N,M) = Q(L,N,M) - E(L,N,1)*H(L,K,1,M) - E(L,N,2)*H(L,K
     1           ,2,M) - E(L,N,3)*H(L,K,3,M) - E(L,N,4)*H(L,K,4,M) - E(L
     2           ,N,5)*H(L,K,5,M)
 6400       CONTINUE
 6600     CONTINUE
 6800   CONTINUE
 7000 CONTINUE
C
      K = KE - 1
      I = K - 1
 
      DO 7800 N = 1, 5
 
        DO 7200 L = LS, LE
          F(L,K,N) = F(L,K,N) - A(L,K,N,1)*F(L,I,1) - A(L,K,N,2)*F(L,I,2
     1       ) - A(L,K,N,3)*F(L,I,3) - A(L,K,N,4)*F(L,I,4) - A(L,K,N,5)*
     2       F(L,I,5)
 7200   CONTINUE
 
        DO 7600 M = 1, 5
 
          DO 7400 L = LS, LE
            B(L,K,N,M) = B(L,K,N,M) - A(L,K,N,1)*U(L,I,1,M) - A(L,K,N,2)
     1         *U(L,I,2,M) - A(L,K,N,3)*U(L,I,3,M) - A(L,K,N,4)*U(L,I,4,
     2         M) - A(L,K,N,5)*U(L,I,5,M)
            S(L,N,M) = (-E(L,N,1)*U(L,I,1,M)) - E(L,N,2)*U(L,I,2,M) - E(
     1         L,N,3)*U(L,I,3,M) - E(L,N,4)*U(L,I,4,M) - E(L,N,5)*U(L,I,
     2         5,M) + A(L,KE,N,M)
            H(L,K,N,M) = (-A(L,K,N,1)*H(L,I,1,M)) - A(L,K,N,2)*H(L,I,2,M
     1         ) - A(L,K,N,3)*H(L,I,3,M) - A(L,K,N,4)*H(L,I,4,M) - A(L,K
     2         ,N,5)*H(L,I,5,M) + C(L,K,N,M)
 7400     CONTINUE
 7600   CONTINUE
 7800 CONTINUE
C
 
 
      DO 8400 N = 1, 5
 
        DO 8200 M = 1, 5
 
          DO 8000 L = LS, LE
            E(L,N,M) = S(L,N,M)
 8000     CONTINUE
 8200   CONTINUE
 8400 CONTINUE
C
 
      DO 8600 L = LS, LE
        B11(L) = 5.E0*B(L,K,1,1)
        U12(L) = B(L,K,1,2)*B11(L)
        U13(L) = B(L,K,1,3)*B11(L)
        U14(L) = B(L,K,1,4)*B11(L)
        U15(L) = B(L,K,1,5)*B11(L)
        B21(L) = B(L,K,2,1)
        B22(L) = 5.E0*(B(L,K,2,2)-B21(L)*U12(L))
        U23(L) = (B(L,K,2,3)-B21(L)*U13(L))*B22(L)
        U24(L) = (B(L,K,2,4)-B21(L)*U14(L))*B22(L)
        U25(L) = (B(L,K,2,5)-B21(L)*U15(L))*B22(L)
        B31(L) = B(L,K,3,1)
        B32(L) = B(L,K,3,2) - B31(L)*U12(L)
        B33(L) = 5.E0*((B(L,K,3,3)-B31(L)*U13(L))-B32(L)*U23(L))
        U34(L) = ((B(L,K,3,4)-B31(L)*U14(L))-B32(L)*U24(L))*B33(L)
        U35(L) = ((B(L,K,3,5)-B31(L)*U15(L))-B32(L)*U25(L))*B33(L)
        B41(L) = B(L,K,4,1)
        B42(L) = B(L,K,4,2) - B41(L)*U12(L)
        B43(L) = (B(L,K,4,3)-B41(L)*U13(L)) - B42(L)*U23(L)
        B44(L) = 5.E0*(((B(L,K,4,4)-B41(L)*U14(L))-B42(L)*U24(L))-B43(L)
     1     *U34(L))
        U45(L) = (((B(L,K,4,5)-B41(L)*U15(L))-B42(L)*U25(L))-B43(L)*U35(
     1     L))*B44(L)
        B51(L) = B(L,K,5,1)
        B52(L) = B(L,K,5,2) - B51(L)*U12(L)
        B53(L) = (B(L,K,5,3)-B51(L)*U13(L)) - B52(L)*U23(L)
        B54(L)=((B(L,K,5,4)-B51(L)*U14(L))-B52(L)*U24(L))-B53(L)*U34(L)
        B55(L) = 5.E0*((((B(L,K,5,5)-B51(L)*U15(L))-B52(L)*U25(L))-B53(L
     1     )*U35(L))-B54(L)*U45(L))
 8600 CONTINUE
C
      DO 8800 L = LS, LE
        D1 = B11(L)*F(L,K,1)
        D2 = B22(L)*(F(L,K,2)-B21(L)*D1)
        D3 = B33(L)*(F(L,K,3)-B31(L)*D1-B32(L)*D2)
        D4 = B44(L)*(F(L,K,4)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
        D5 = B55(L)*(F(L,K,5)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*D4)
        F(L,K,5) = D5
        F(L,K,4) = D4 - U45(L)*D5
        F(L,K,3) = D3 - U35(L)*D5 - U34(L)*F(L,K,4)
        F(L,K,2) = D2 - U25(L)*D5 - U24(L)*F(L,K,4) - U23(L)*F(L,K,3)
        F(L,K,1) = D1 - U15(L)*D5 - U14(L)*F(L,K,4) - U13(L)*F(L,K,3) - 
     1     U12(L)*F(L,K,2)
 8800 CONTINUE
C
 
      DO 9200 M = 1, 5
 
        DO 9000 L = LS, LE
          D1 = B11(L)*H(L,K,1,M)
          D2 = B22(L)*(H(L,K,2,M)-B21(L)*D1)
          D3 = B33(L)*(H(L,K,3,M)-B31(L)*D1-B32(L)*D2)
          D4 = B44(L)*(H(L,K,4,M)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
          D5 = B55(L)*(H(L,K,5,M)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*
     1       D4)
          H(L,K,5,M) = D5
          H(L,K,4,M) = D4 - U45(L)*D5
          H(L,K,3,M) = D3 - U35(L)*D5 - U34(L)*H(L,K,4,M)
          H(L,K,2,M)=D2-U25(L)*D5-U24(L)*H(L,K,4,M)-U23(L)*H(L,K,3,M)
          H(L,K,1,M) = D1 - U15(L)*D5 - U14(L)*H(L,K,4,M) - U13(L)*H(L,K
     1       ,3,M) - U12(L)*H(L,K,2,M)
 9000   CONTINUE
 9200 CONTINUE
 
      DO 10000 N = 1, 5
 
        DO 9400 L = LS, LE
          FN(L,N) = FN(L,N) - E(L,N,1)*F(L,K,1) - E(L,N,2)*F(L,K,2) - E(
     1       L,N,3)*F(L,K,3) - E(L,N,4)*F(L,K,4) - E(L,N,5)*F(L,K,5)
 9400   CONTINUE
 
        DO 9800 M = 1, 5
 
          DO 9600 L = LS, LE
            Q(L,N,M) = Q(L,N,M) - E(L,N,1)*H(L,K,1,M) - E(L,N,2)*H(L,K,2
     1         ,M) - E(L,N,3)*H(L,K,3,M) - E(L,N,4)*H(L,K,4,M) - E(L,N,5
     2         )*H(L,K,5,M)
 9600     CONTINUE
 9800   CONTINUE
10000 CONTINUE
C
      K = KE
C
 
      DO 10200 L = LS, LE
        B11(L) = 5.E0*Q(L,1,1)
        U12(L) = Q(L,1,2)*B11(L)
        U13(L) = Q(L,1,3)*B11(L)
        U14(L) = Q(L,1,4)*B11(L)
        U15(L) = Q(L,1,5)*B11(L)
        B21(L) = Q(L,2,1)
        B22(L) = 5.E0*(Q(L,2,2)-B21(L)*U12(L))
        U23(L) = (Q(L,2,3)-B21(L)*U13(L))*B22(L)
        U24(L) = (Q(L,2,4)-B21(L)*U14(L))*B22(L)
        U25(L) = (Q(L,2,5)-B21(L)*U15(L))*B22(L)
        B31(L) = Q(L,3,1)
        B32(L) = Q(L,3,2) - B31(L)*U12(L)
        B33(L) = 5.E0*((Q(L,3,3)-B31(L)*U13(L))-B32(L)*U23(L))
        U34(L) = ((Q(L,3,4)-B31(L)*U14(L))-B32(L)*U24(L))*B33(L)
        U35(L) = ((Q(L,3,5)-B31(L)*U15(L))-B32(L)*U25(L))*B33(L)
        B41(L) = Q(L,4,1)
        B42(L) = Q(L,4,2) - B41(L)*U12(L)
        B43(L) = (Q(L,4,3)-B41(L)*U13(L)) - B42(L)*U23(L)
        B44(L) = 5.E0*(((Q(L,4,4)-B41(L)*U14(L))-B42(L)*U24(L))-B43(L)*
     1     U34(L))
        U45(L) = (((Q(L,4,5)-B41(L)*U15(L))-B42(L)*U25(L))-B43(L)*U35(L)
     1     )*B44(L)
        B51(L) = Q(L,5,1)
        B52(L) = Q(L,5,2) - B51(L)*U12(L)
        B53(L) = (Q(L,5,3)-B51(L)*U13(L)) - B52(L)*U23(L)
        B54(L)=((Q(L,5,4)-B51(L)*U14(L))-B52(L)*U24(L))-B53(L)*U34(L)
        B55(L) = 5.E0*((((Q(L,5,5)-B51(L)*U15(L))-B52(L)*U25(L))-B53(L)*
     1     U35(L))-B54(L)*U45(L))
10200 CONTINUE
C
 
      DO 10400 L = LS, LE
        D1 = B11(L)*FN(L,1)
        D2 = B22(L)*(FN(L,2)-B21(L)*D1)
        D3 = B33(L)*(FN(L,3)-B31(L)*D1-B32(L)*D2)
        D4 = B44(L)*(FN(L,4)-B41(L)*D1-B42(L)*D2-B43(L)*D3)
        D5 = B55(L)*(FN(L,5)-B51(L)*D1-B52(L)*D2-B53(L)*D3-B54(L)*D4)
        F(L,K,5) = D5
        F(L,K,4) = D4 - U45(L)*D5
        F(L,K,3) = D3 - U35(L)*D5 - U34(L)*F(L,K,4)
        F(L,K,2) = D2 - U25(L)*D5 - U24(L)*F(L,K,4) - U23(L)*F(L,K,3)
        F(L,K,1) = D1 - U15(L)*D5 - U14(L)*F(L,K,4) - U13(L)*F(L,K,3) - 
     1     U12(L)*F(L,K,2)
10400 CONTINUE
 
      K = KE - 1
 
      DO 10800 N = 1, 5
 
        DO 10600 L = LS, LE
          F(L,K,N) = F(L,K,N) - H(L,K,N,1)*F(L,KE,1) - H(L,K,N,2)*F(L,KE
     1       ,2) - H(L,K,N,3)*F(L,KE,3) - H(L,K,N,4)*F(L,KE,4) - H(L,K,N
     2       ,5)*F(L,KE,5)
10600   CONTINUE
10800 CONTINUE
C
 
      DO 11400 KK = KS, KE - 2
        K = KS + KE - 2 - KK
        I = K + 1
 
        DO 11200 N = 1, 5
 
          DO 11000 L = LS, LE
            F(L,K,N) = F(L,K,N) - U(L,K,N,1)*F(L,I,1) - U(L,K,N,2)*F(L,I
     1         ,2) - U(L,K,N,3)*F(L,I,3) - U(L,K,N,4)*F(L,I,4) - U(L,K,N
     2         ,5)*F(L,I,5) - H(L,K,N,1)*F(L,KE,1) - H(L,K,N,2)*F(L,KE,2
     3         ) - H(L,K,N,3)*F(L,KE,3) - H(L,K,N,4)*F(L,KE,4) - H(L,K,N
     4         ,5)*F(L,KE,5)
11000     CONTINUE
11200   CONTINUE
11400 CONTINUE
 
      RETURN 
      END
      SUBROUTINE SUB032
      COMMON/DATA/Q(120,23,30,6)
      COMMON/DATA/
     *             XX(120,23,30),XY(120,23,30),XZ(120,23,30),
     *             YX(120,23,30),YY(120,23,30),YZ(120,23,30),
     *             ZX(120,23,30),ZY(120,23,30),ZZ(120,23,30)
      COMMON/DATA/S(120,23,30,5),VARDT(120,23,30)
      COMMON /DATA/ SPECT(120,23,30),COEF(120,23,30)
      COMMON /DATA/ CC(120,120)
     *,  WR1(120,120),WR2(120,120)
     *,  Q6(120,120),FD(5)
      DATA JMAX/120/,KMAX/23/LMAX/30/,JM/119/KM/22/LM/29/
C
      DT = .5
      GAMMA = .6
      GAMI = .7
      FSMACH = .8
      ALP = DT
      DIS2 = DT
      DIS4 = DIS2
      CNBR = .5
      PI = 3.14
      EPS2 = DIS2*DT
      EPS4 = DIS4*64.*DT
C
      DO 1400 L = 1, LMAX
        DO 1200 K = 1, KMAX
          DO 1000 J = 1, JMAX
            COEF(J,K,L) = 0.
            SPECT(J,K,L) = 1.
            Q(J,K,L,1) = Q(J,K,L,1)*Q(J,K,L,6)
            Q(J,K,L,2) = Q(J,K,L,2)*Q(J,K,L,6)
            Q(J,K,L,3) = Q(J,K,L,3)*Q(J,K,L,6)
            Q(J,K,L,4) = Q(J,K,L,4)*Q(J,K,L,6)
            Q(J,K,L,5) = Q(J,K,L,5)*Q(J,K,L,6)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
C
      DO 2000 L = 1, LMAX
        DO 1800 K = 1, KMAX
          DO 1600 J = 1, JMAX
            RI = Q(J,K,L,1)
            U = Q(J,K,L,2)*RI
            V = Q(J,K,L,3)*RI
            W = Q(J,K,L,4)*RI
            SNDSP2 = GAMI*GAMMA*(Q(J,K,L,5)*RI-.5*(U*U+V*V+W*W))
            SIGA = ABS(U*XX(J,K,L)+V*XY(J,K,L)+W*XZ(J,K,L)) + SQRT(
     1         SNDSP2*(XX(J,K,L)**2+XY(J,K,L)**2+XZ(J,K,L)**2))
            SIGB = ABS(U*YX(J,K,L)+V*YY(J,K,L)+W*YZ(J,K,L)) + SQRT(
     1         SNDSP2*(YX(J,K,L)**2+YY(J,K,L)**2+YZ(J,K,L)**2))
            SIGC = ABS(U*ZX(J,K,L)+V*ZY(J,K,L)+W*ZZ(J,K,L)) + SQRT(
     1         SNDSP2*(ZX(J,K,L)**2+ZY(J,K,L)**2+ZZ(J,K,L)**2))
            SPECT(J,K,L) = SIGA + SIGB + SIGC
 1600     CONTINUE
 1800   CONTINUE
 2000 CONTINUE
C
      DO 7000 L = 2, LM
C
        DO 2400 J = 1, JM + 1
          DO 2200 K = 1, KM + 1
            Q6(J,K) = Q(J,K,L,6)
 2200     CONTINUE
 2400   CONTINUE
C
        DO 4600 N = 1, 5
C
          DO 2800 J = 1, JM
            JPL = J + 1
            DO 2600 K = 2, KM
              WR1(J,K) = Q(JPL,K,L,N) - Q(J,K,L,N)
 2600       CONTINUE
 2800     CONTINUE
C
          DO 3000 K = 2, KM
            WR1(JMAX,K) = WR1(JM,K)
 3000     CONTINUE
C
          DO 3400 J = 2, JM
            JPL = J + 1
            JMI = J - 1
            DO 3200 K = 2, KM
              WR2(J,K) = WR1(JPL,K) - 2.*WR1(J,K) + WR1(JMI,K)
 3200       CONTINUE
 3400     CONTINUE
C
          DO 3600 K = 2, KM
            WR2(1,K) = Q(3,K,L,N) - 2.*Q(2,K,L,N) + Q(1,K,L,N)
            WR2(JMAX,K) = 0.
 3600     CONTINUE
C
          DO 4000 J = 1, JM
            JPL = J + 1
            DO 3800 K = 2, KM
              FIL = SPECT(JPL,K,L)*Q6(JPL,K) + SPECT(J,K,L)*Q6(J,K)
              COEF2 = EPS2*COEF(J,K,L)*FIL
              COEF4 = EPS4*FIL
              CC(J,K) = COEF2*WR1(J,K) - COEF4*WR2(J,K)
 3800       CONTINUE
 4000     CONTINUE
C
          DO 4400 J = 2, JM
            JMI = J - 1
            DO 4200 K = 2, KM
              S(J,K,L,N) = S(J,K,L,N) + (CC(J,K)-CC(JMI,K))
 4200       CONTINUE
 4400     CONTINUE
C
 4600   CONTINUE
C
        DO 6800 N = 1, 5
C
          DO 5000 K = 1, KM
            KPL = K + 1
            DO 4800 J = 2, JM
              WR1(J,K) = Q(J,KPL,L,N) - Q(J,K,L,N)
 4800       CONTINUE
 5000     CONTINUE
C
          DO 5200 J = 2, JM
            WR1(J,KMAX) = WR1(J,KM)
 5200     CONTINUE
C
          DO 5600 K = 2, KM
            KPL = K + 1
            KMI = K - 1
            DO 5400 J = 2, JM
              WR2(J,K) = WR1(J,KPL) - 2.*WR1(J,K) + WR1(J,KMI)
 5400       CONTINUE
 5600     CONTINUE
C
          DO 5800 J = 2, JM
            WR2(J,1) = Q(J,3,L,N) - 2.*Q(J,2,L,N) + Q(J,1,L,N)
            WR2(J,KMAX) = 0.
 5800     CONTINUE
C
          DO 6200 K = 1, KM
            DO 6000 J = 2, JM
C
              FIL = SPECT(J,K+1,L)*Q6(J,K+1) + SPECT(J,K,L)*Q6(J,K)
              COEF2 = EPS2*COEF(J,K,L)*FIL
              COEF4 = EPS4*FIL
              CC(J,K) = COEF2*WR1(J,K) - COEF4*WR2(J,K)
 6000       CONTINUE
 6200     CONTINUE
C
          DO 6600 K = 2, KM
            DO 6400 J = 2, JM
              S(J,K,L,N) = S(J,K,L,N) + (CC(J,K)-CC(J,K-1))
 6400       CONTINUE
 6600     CONTINUE
C
 6800   CONTINUE
C
C  END LOOP IN L
C
 7000 CONTINUE
C
      DO 9800 K = 2, KM
C
        DO 7400 L = 1, LM + 1
          DO 7200 J = 2, JM
            Q6(J,L) = Q(J,K,L,6)
 7200     CONTINUE
 7400   CONTINUE
C
        DO 9600 N = 1, 5
C
          DO 7800 L = 1, LM
            LPL = L + 1
            DO 7600 J = 2, JM
              WR1(J,L) = Q(J,K,LPL,N) - Q(J,K,L,N)
 7600       CONTINUE
 7800     CONTINUE
C
          DO 8000 J = 2, JM
            WR1(J,LMAX) = WR1(J,LM)
 8000     CONTINUE
C
          DO 8400 L = 2, LM
            LPL = L + 1
            LMI = L - 1
            DO 8200 J = 2, JM
              WR2(J,L) = WR1(J,LPL) - 2.*WR1(J,L) + WR1(J,LMI)
 8200       CONTINUE
 8400     CONTINUE
C
          DO 8600 J = 2, JM
            WR2(J,1) = Q(J,K,3,N) - 2.*Q(J,K,2,N) + Q(J,K,1,N)
            WR2(J,LMAX) = 0.
 8600     CONTINUE
C
          DO 9000 L = 1, LM
            DO 8800 J = 2, JM
C
              FIL = SPECT(J,K,L+1)*Q6(J,L+1) + SPECT(J,K,L)*Q6(J,L)
              COEF2 = EPS2*COEF(J,K,L)*FIL
              COEF4 = EPS4*FIL
              CC(J,L) = COEF2*WR1(J,L) - COEF4*WR2(J,L)
 8800       CONTINUE
 9000     CONTINUE
C
          DO 9400 L = 2, LM
            DO 9200 J = 2, JM
              S(J,K,L,N) = S(J,K,L,N) + (CC(J,L)-CC(J,L-1))
 9200       CONTINUE
 9400     CONTINUE
C
 9600   CONTINUE
C
 9800 CONTINUE
C
      DO 10400 L = 1, LMAX
        DO 10200 K = 1, KMAX
          DO 10000 J = 1, JMAX
            RJ = Q(J,K,L,6)
            Q(J,K,L,1) = Q(J,K,L,1)*RJ
            Q(J,K,L,2) = Q(J,K,L,2)*RJ
            Q(J,K,L,3) = Q(J,K,L,3)*RJ
            Q(J,K,L,4) = Q(J,K,L,4)*RJ
            Q(J,K,L,5) = Q(J,K,L,5)*RJ
10000     CONTINUE
10200   CONTINUE
10400 CONTINUE
C
      RETURN 
      END
      SUBROUTINE SUB033(IRECT,MSR,NSV,ILOC,IRTL,ISEG,NSN)
      PARAMETER (JMAX=1000)
      DIMENSION IRECT(4,1),MSR(1),NSV(1),ILOC(1),
     1          IRTL(1),ISEG(1)
      COMMON /DATA/ FDAT(5,JMAX)
      COMMON /DATA/ X(3,JMAX),E(JMAX),STF(JMAX)
      COMMON /DATA/ FRIC(JMAX),AMX,AMY,AMZ,N1,N2,N3
      COMMON /DATA/ XX1(JMAX),XX2(JMAX),XX3(JMAX),H(4)
      DIMENSION IX(4)
      REAL      N1,N2,N3
      SS = 3.14
      TT = .5
      DT2 = .75
      FCOEFF = FRIC(1)**2 + FRIC(2)**2 + FRIC(3)**2
      DO 2800 II = 1, NSN
        I = NSV(II)
        J = ILOC(II)
        K = MSR(J)
        L = IRTL(II)
        DO 1000 JJ = 1, 4
          NN = IRECT(JJ,L)
          IX(JJ) = NN
          XX1(JJ) = X(1,NN)
          XX2(JJ) = X(2,NN)
          XX3(JJ) = X(3,NN)
 1000   CONTINUE
        XS1 = X(1,I)
        YS1 = X(2,I)
        ZS1 = X(3,I)
        IF (K .NE. IX(1)) GO TO 1200
        K1 = 1
        K2 = 2
        K3 = 4
        GO TO 1800
 1200   CONTINUE
        IF (K .NE. IX(2)) GO TO 1400
        K1 = 2
        K2 = 3
        K3 = 1
        GO TO 1800
 1400   CONTINUE
        IF (K .NE. IX(3)) GO TO 1600
        K1 = 3
        K2 = 4
        K3 = 2
        IF (IX(3) .EQ. IX(4)) K2 = 1
        GO TO 1800
 1600   CONTINUE
        IF (K .NE. IX(4)) GO TO 1800
        K1 = 4
        K2 = 1
        K3 = 3
 1800   CONTINUE
        IERR = 0
        I3 = 3*I
        I2 = I3 - 1
        I1 = I2 - 1
        ANS = N1*(XS1-AMX) + N2*(YS1-AMY) + N3*(ZS1-AMZ)
        FNI = ANS*STF(L)
        FXI = N1*FNI
        FYI = N2*FNI
        FZI = N3*FNI
        IF (FCOEFF .EQ. 0.0) GO TO 2400
        JJ = ISEG(II)
        IF (JJ .NE. 0) GO TO 2000
        ISEG(II) = L
        FDAT(1,II) = SS
        FDAT(2,II) = TT
        GO TO 2400
 2000   CONTINUE
        TP = .25*(1.0+FDAT(2,II))
        TM = .25*(1.0-FDAT(2,II))
        SP = 1.0 + FDAT(1,II)
        SM = 1.0 - FDAT(1,II)
        H1 = TM*SM
        H2 = TM*SP
        H3 = TP*SP
        H4 = TP*SM
        NN1 = IRECT(1,JJ)
        NN2 = IRECT(2,JJ)
        NN3 = IRECT(3,JJ)
        NN4 = IRECT(4,JJ)
        DX = AMX - H1*X(1,NN1) - H2*X(1,NN2) - H3*X(1,NN3) - H4*X(1,NN4)
        DY = AMY - H1*X(2,NN1) - H2*X(2,NN2) - H3*X(2,NN3) - H4*X(2,NN4)
        DZ = AMZ - H1*X(3,NN1) - H2*X(3,NN2) - H3*X(3,NN3) - H4*X(3,NN4)
        VEL = SQRT(DX**2+DY**2+DZ**2)/AMAX1(1.E-20,DT2)
        FDAT(3,II) = FDAT(3,II) + STF(L)*DX
        FDAT(4,II) = FDAT(4,II) + STF(L)*DY
        FDAT(5,II) = FDAT(5,II) + STF(L)*DZ
        PROJ = FDAT(3,II)*N1 + FDAT(4,II)*N2 + FDAT(5,II)*N3
        FDAT(3,II) = FDAT(3,II) - PROJ*N1
        FDAT(4,II) = FDAT(4,II) - PROJ*N2
        FDAT(5,II) = FDAT(5,II) - PROJ*N3
        FMAX = -(FRIC(2)+(FRIC(1)-FRIC(2))*EXP((-FRIC(3)*VEL)))*FNI
        FMAG = SQRT(FDAT(3,II)**2+FDAT(4,II)**2+FDAT(5,II)**2)
        IF (FMAX.GE.FMAG .OR. FMAG.EQ.0.) GO TO 2200
        IF (FMAG .NE. 0) SCLF = FMAX/FMAG
        FDAT(3,II) = SCLF*FDAT(3,II)
        FDAT(4,II) = SCLF*FDAT(4,II)
        FDAT(5,II) = SCLF*FDAT(5,II)
 2200   CONTINUE
        FXI = FXI + FDAT(3,II)
        FYI = FYI + FDAT(4,II)
        FZI = FZI + FDAT(5,II)
        ISEG(II) = L
        FDAT(1,II) = SS
        FDAT(2,II) = TT
 2400   CONTINUE
        DO 2600 JJ = 1, 4
          J3 = 3*IX(JJ)
          J2 = J3 - 1
          J1 = J2 - 1
          E(J1) = E(J1) + FXI*H(JJ)
          E(J2) = E(J2) + FYI*H(JJ)
          E(J3) = E(J3) + FZI*H(JJ)
 2600   CONTINUE
        E(I1) = E(I1) - FXI
        E(I2) = E(I2) - FYI
        E(I3) = E(I3) - FZI
 2800 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB034(LMAX,KMAX)
      PARAMETER (RADIUS  = 4.0)
      PARAMETER (DENSTY = 5.0)
      PARAMETER (VSCALE  = 2.0)
      PARAMETER (KMESH = 100)
      PARAMETER (LMESH = 100)
      PARAMETER (CYCLES = 100)
      PARAMETER (TIME   = 1.0)
      PARAMETER (NOPRNT  = 1)
      PARAMETER (IVREG  = 64)
      PARAMETER (KKMAX = KMESH + 1)
      PARAMETER (LLMAX = LMESH + 1)
      PARAMETER (NCMAX = KKMAX + LLMAX)
      PARAMETER (NZONM = KKMAX * LLMAX)
      PARAMETER (FMEM10 = -1.E-10)
      PARAMETER (F1EM10 = 1.E-10)
      PARAMETER (F2EM10 = 2.E-10)
      PARAMETER (F1E10 = 1.E10)
      PARAMETER (F1EM4 = 1.E-4)
      PARAMETER (F1EM12 = 1.E-12)
      PARAMETER (F1EM5 = 1.E-5)
      PARAMETER (F1EM6 = 1.E-6)
      PARAMETER (F1EM36 = 1.E-36)
      PARAMETER (F1EM8 = 1.E-8)
      PARAMETER (IMXSES = 5000)
      PARAMETER (IMMAX = 1)
      PARAMETER (NULL      = 0)
      PARAMETER (IENRGY    = 1)
      PARAMETER (IDEDT     = 2)
      PARAMETER (IDEDR     = 4)
      PARAMETER (IPRESS    = 8)
      PARAMETER (IDPDT     = 16)
      PARAMETER (IDPDR     = 32)
      PARAMETER (IDNSTY    = 64)
      PARAMETER (ITHETA    = 128)
      INTEGER
     .             IKQN    ,
     .             ILQN    
      COMMON /DATA/
     .     DDOR   (KKMAX,LLMAX) ,
     .     DDUAC  (KKMAX,LLMAX) ,
     .     DDUBC  (KKMAX,LLMAX) ,
     .     DDUMIN (KKMAX,LLMAX) ,
     .     DUAC   (KKMAX,LLMAX) ,
     .     DUBC   (KKMAX,LLMAX)
      COMMON/DATA/
     .              CNDN    , CNUP    ,
     .              CSTOP   , CYCLE   ,
     .              DCNDN   , DCNUP   , DELNDN  , DELNUP  ,
     .              DTAN    , DTCN    ,
     .              DTEN    , DTMAXN  ,
     .              DTMIN   , DTN     , DTNDN   ,
     .              DTNUP   , DTQN    ,
     .              ETEST   ,
     .              RXDTA   , RXDTC   ,
     .              RXDTEN  , RXDTQ   ,
     .              THFLOR  ,
     .              TN      ,
     .              TNDN    ,
     .              TNUP    ,
     .              TSTEP   , TSTOP
      COMMON/MASKS/
     .             IFB     , IFE     , MASKIF  ,
     .             IMB     , IME     , MASKIM  ,
     .             IHB     , IHE     , MASKIH  ,
     .             ICE
      COMMON/BITFLG/
     .       MSKIMZ, MSKF15,  MSKMBK, MSKMK2,
     .       MSKUKK, MSKUKC, MSKMBL, MSKML2, MSKULL, MSKULC,
     .       MSKAMK, MSKAML, MSKHMR, MSKHMZ,
     .       MSKTZL, MSKTZK,
     .       MKIMZ, MKF15, MKMBK, MKMK2,
     .       MKUKK, MKUKC, MKMBL, MKML2, MKULL, MKULC,
     .       MKAMK, MKAML, MKHMR, MKHMZ,
     .       MKTZL, MKTZK
      COMMON/MASKS/
     .             MASKF1  , MASKF2  , MASKF3  , MASKF4
      COMMON /DATA/
     .          FIT    (KKMAX,LLMAX) ,
     .          RT     (KKMAX,LLMAX) ,
     .          ZT     (KKMAX,LLMAX) ,
     .          AMT    (KKMAX,LLMAX) ,
     .          TT     (KKMAX,LLMAX)
      COMMON /DATA/
     .          RTH    (KKMAX,LLMAX) ,
     .          ZTH    (KKMAX,LLMAX) ,
     .          TTCH   (KKMAX,LLMAX) ,
     .          FJTCH  (KKMAX,LLMAX) ,
     .          ALR    (KKMAX,LLMAX) ,
     .          ALZ    (KKMAX,LLMAX) ,
     .          AKR    (KKMAX,LLMAX) ,
     .          AKZ    (KKMAX,LLMAX) ,
     .          DLRRCH (KKMAX,LLMAX) ,
     .          DKRRCH (KKMAX,LLMAX)
      COMMON /DATA/
     .      ET     (KKMAX,LLMAX) ,
     .      THAT   (KKMAX,LLMAX) ,
     .      PT     (KKMAX,LLMAX) ,
     .      UT     (KKMAX,LLMAX) ,
     .      VT     (KKMAX,LLMAX)
      COMMON /DATA/
     .     THCT   (KKMAX,LLMAX) ,
     .     DTHT   (KKMAX,LLMAX) ,
     .     FJT    (KKMAX,LLMAX) ,
     .     FJOIT  (KKMAX,LLMAX) ,
     .     Q1T    (KKMAX,LLMAX) ,
     .     Q2T    (KKMAX,LLMAX) ,
     .     Q3T    (KKMAX,LLMAX) ,
     .     Q4T    (KKMAX,LLMAX) ,
     .     DESRC  (KKMAX,LLMAX) ,
     .     DET    (KKMAX,LLMAX)
      COMMON /DATA/
     .     AIF3   (NCMAX)       ,
     .     XIUKK  (NCMAX)       ,
     .     XIUKKM (NCMAX)       ,
     .     XIUKKC (NCMAX)       ,
     .     XIULL  (NCMAX)       ,
     .     XIULLC (NCMAX)       ,
     .     DNDTC  (NCMAX)
      INDMAX(N,R,I) = ISAMAX(N,R,I)
*      SEARCH(IM,Y,IY,N,X,IX,J,D,F) = SRCHDF(IM,Y,IY,N,X,IX,J,D,F)
      DDUF(A,B,C,Z1,Z2)=ABS(A-B)*Z1+ABS(B-C)*Z2
      RCENTF(R1,R2,R3,R4)=(.25*(R1+R2+R3+R4)+R1+R2)/3.
      DUF(A,B)=A-B
      MIFB2 = IFB + 2
      DO 1200 K = 2, KMAX
        DO 1000 L = 2, LMAX
          DDUAC(K,L) = SQRT(DDUF(DUAC(K+1,L),DUAC(K,L),DUAC(K-1,L),XIUKK
     1       (L),XIUKKM(L))*XIUKKC(L))**3
          DDUBC(K,L) = SQRT(DDUF(DUBC(K,L+1),DUBC(K,L),DUBC(K,L-1),XIULL
     1       (L),XIULL(L-1))*XIULLC(L))**3
 1000   CONTINUE
 1200 CONTINUE
      DO 1600 K = 1, KKMAX
        DO 1400 L = 1, LLMAX
          DDUMIN(K,L) = 0.0
 1400   CONTINUE
 1600 CONTINUE
      DO 2000 K = 2, KMAX
        DO 1800 L = 2, LMAX
          RKLRF = .7071067814/(TTCH(K,L)+AIF3(L))
          D2UB = (VT(K,L)-VT(K,L-1))*AKR(K,L) - (UT(K,L)-UT(K,L-1))*AKZ(
     1       K,L)
          IF (FMEM10 - D2UB .LT. 0) D2UB = 0.0
          D4UB = (VT(K-1,L)-VT(K-1,L-1))*AKR(K,L) - (UT(K-1,L)-UT(K-1,L-
     1       1))*AKZ(K,L)
          IF (FMEM10 - D4UB .LT. 0) D4UB = 0.0
          SQDR = 1.0/(SQRT(DKRRCH(K,L))+AIF3(L))
          Q2T(K,L) = SQRT((-D2UB*SQDR))*RKLRF*DDUBC(K,L)
          Q4T(K,L) = SQRT((-D4UB*SQDR))*RKLRF*DDUBC(K,L)
          IF (F1EM10 - Q2T(K,L) .GE. 0) Q2T(K,L) = 0.0
          IF (F1EM10 - Q4T(K,L) .GE. 0) Q4T(K,L) = 0.0
          DQE2 = -.5*DTNUP*RCENTF(RTH(K,L),RTH(K,L-1),RTH(K-1,L),RTH(K-1
     1       ,L-1))*D2UB*Q2T(K,L)
          DQE4 = -.5*DTNUP*RCENTF(RTH(K-1,L),RTH(K-1,L-1),RTH(K,L),RTH(K
     1       ,L-1))*D4UB*Q4T(K,L)
          D1UA = (UT(K,L)-UT(K-1,L))*ALZ(K,L) - (VT(K,L)-VT(K-1,L))*ALR(
     1       K,L)
          IF (FMEM10 - D1UA .LT. 0) D1UA = 0.0
          D3UA = (UT(K,L-1)-UT(K-1,L-1))*ALZ(K,L) - (VT(K,L-1)-VT(K-1,L-
     1       1))*ALR(K,L)
          IF (FMEM10 - D3UA .LT. 0) D3UA = 0.0
          DDUMIN(K,L) = -(MIN(D2UB,D4UB)+MIN(D1UA,D3UA))/(FJT(K,L)*TT(K,
     1       L)+AIF3(L))
          SQDR = 1.0/(SQRT(DLRRCH(K,L))+AIF3(L))
          Q1T(K,L) = SQRT((-D1UA*SQDR))*RKLRF*DDUAC(K,L)
          Q3T(K,L) = SQRT((-D3UA*SQDR))*RKLRF*DDUAC(K,L)
          IF (F1EM10 - Q1T(K,L) .GE. 0) Q1T(K,L) = 0.0
          IF (F1EM10 - Q3T(K,L) .GE. 0) Q3T(K,L) = 0.0
          DQE1 = -.5*DTNUP*RCENTF(RTH(K,L),RTH(K-1,L),RTH(K,L-1),RTH(K-1
     1       ,L-1))*D1UA*Q1T(K,L)
          DQE3 = -.5*DTNUP*RCENTF(RTH(K,L-1),RTH(K-1,L-1),RTH(K,L),RTH(K
     1       -1,L))*D3UA*Q3T(K,L)
          DET(K,L) = DET(K,L) + (DQE1+DQE3+DQE2+DQE4)/(AMT(K,L)+AIF3(L))
          DDOR(K,L) = (DLRRCH(K,L)+DKRRCH(K,L))/((FJT(K,L)*TT(K,L))**2+
     1       AIF3(L))
 1800   CONTINUE
 2000 CONTINUE
      KKQ = INDMAX(NZONM,DDUMIN(1,1),1)
      DDUMAX = DDUMIN(KKQ,1)
      IF (DDUMAX .EQ. 0) GO TO 2200
      ILQN = KKQ/KKMAX + 1
      IKQN = KKQ - (ILQN-1)*KKMAX
      DTQN = RXDTQ/(10.*DDUMAX)
 2200 CONTINUE
      DO 2600 K = 2, KMAX
        DO 2400 L = 2, LMAX
          IF (ET(K,L) .EQ. 0) THEN
              CVMG = 1.0
          ELSE
              CVMG = ET(K,L)
          ENDIF
          DNDTC(L) = PT(K,L)*TTCH(K,L) + (PT(K,L)*TTCH(K,L))**2/CVMG
          IF (ET(K,L).LT.F1EM10 .OR. ABS(PT(K,L)).LT.F1EM10) THEN
              DNDTC(L) = 0.0
          ELSE
              DNDTC(L) = DNDTC(L)*DDOR(K,L)
          ENDIF
 2400   CONTINUE
 2600 CONTINUE
      RETURN 
      END
      SUBROUTINE SUB035(I2,J2,K2,RTRMS)
      PARAMETER ( IGMAX=96, JGMAX=24, KGMAX=24,
     1            IGMAX1=IGMAX+1, JGMAX1=JGMAX+1, KGMAX1=KGMAX+1,
     2            IGMAX2=IGMAX+2, JGMAX2=JGMAX+2, KGMAX2=KGMAX+2,
     3            IGMAX3=IGMAX+3, JGMAX3=JGMAX+3, KGMAX3=KGMAX+3,
     4            NNMG1=(IGMAX+2)*(JGMAX+2)*(KGMAX+2),
     5            NNMG2=(IGMAX/2+2)*(JGMAX/2+2)*(KGMAX/2+2),
     6            NNMG3=(IGMAX/4+2)*(JGMAX/4+2)*(KGMAX/4+2),
     7            NNMG4=(IGMAX/8+2)*(JGMAX/8+2)*(KGMAX/8+2),
     8            NNMG5=(IGMAX/16+2)*(JGMAX/16+2)*(KGMAX/16+2),
     8            NWD1V=NNMG1+NNMG2+NNMG3+NNMG4+NNMG5,
     9            NWD5V=5*NWD1V,
     A            NWDCRS=5*(NNMG2+NNMG3+NNMG4+NNMG5),
     B            NWDFIN=5*NNMG1 )
      PARAMETER (IL=96,JL=24,KL=24)
      PARAMETER (KTIP=24,ITL=96,ITU=96)
      COMMON/DATA/   GAMMA,RM,RHO0,P0,EI0,H0,C0,U0,V0,W0,CA,SA
      COMMON/DATA/   X(IGMAX1,JGMAX1,KGMAX1,3),SCAL
      COMMON/DATA/   DTMIN,CFL,VT,HM,
     .            QFIL,VIS0,VIS2,VIS4,BC,SMOOPI,SMOOPJ,SMOOPK
      COMMON/DATA/   RTMAX,HRMS,HMAX
      COMMON/DATA/ C(6)
      COMMON/DATA/ FW(IGMAX1,JGMAX1,JGMAX1,5)
      COMMON/DATA/ DW(IGMAX3,JGMAX3,KGMAX3,5)
      COMMON/DATA/ FCOLL,FADD,FBC
      COMMON/DATA/ SIX(IGMAX1),SIY(IGMAX1),SIZ(IGMAX1),
     .            SJX(IGMAX1),SJY(IGMAX1),SJZ(IGMAX1),
     .            SKX(IGMAX1),SKY(IGMAX1),SKZ(IGMAX1),
     .            DW1(IGMAX1),DW2(IGMAX1),DW3(IGMAX1),DW4(IGMAX1),
     .            DW5(IGMAX1),FS1(IGMAX1),FS2(IGMAX1),FS3(IGMAX1),
     .            FS4(IGMAX1),FS5(IGMAX1),GS1(IGMAX1),GS2(IGMAX1),
     .            GS3(IGMAX1),GS4(IGMAX1),GS5(IGMAX1),
     .            HS1(IGMAX1,JGMAX1),HS2(IGMAX1,JGMAX1),
     .            HS3(IGMAX1,JGMAX1),HS4(IGMAX1,JGMAX1),
     .            HS5(IGMAX1,JGMAX1)
      COMMON/DATA/ QQQ(IGMAX+1),H(IGMAX+1),RT(IGMAX+1)
      COMMON /DATA/ WR(96,24,24,5),W1(96,24,24,5),
     .              P(96,24,24),VOL(96,24,24),DTL(96,24,24)
      COMMON /DATA/W(96,24,24,5)
      DATA NSUP/0/,MSTAGE/2/
C
      MDISSP = 1
      IF (QFIL .GT. 0.) MDISSP = 2
C
      KSMOOP = 0
      IF (SMOOPI.NE.0. .OR. SMOOPJ.NE.0. .OR. SMOOPK.NE.0.) KSMOOP = 1
      IF (SMOOPI.LT.0. .OR. SMOOPJ.LT.0. .OR. SMOOPK.LT.0.) KSMOOP = -1
      ISMOOP = IABS(KSMOOP)
      IF (MOD(MSTAGE,2) .EQ. 0) ISMOOP = KSMOOP
      NSTAGE = 1
C
      DO 1400 K = 1, K2
        DO 1200 J = 1, J2
          DO 1000 I = 1, I2
            W1(I,J,K,1) = W(I,J,K,1)
            W1(I,J,K,2) = W(I,J,K,2)
            W1(I,J,K,3) = W(I,J,K,3)
            W1(I,J,K,4) = W(I,J,K,4)
            W1(I,J,K,5) = W(I,J,K,5)
 1000     CONTINUE
 1200   CONTINUE
 1400 CONTINUE
 1600 CONTINUE
C
      FN = .25*C(NSTAGE)*CFL
      FT = (1.-VT)*FN
      GT = VT*FN*DTMIN
C
      DO 2000 J = 2, JL
        M = J - 1
        DO 1800 I = 2, IL
          L = I - 1
          SX = (X(I,J,1,2)-X(L,M,1,2))*(X(L,J,1,3)-X(I,M,1,3)) - (X(I,J,
     1       1,3)-X(L,M,1,3))*(X(L,J,1,2)-X(I,M,1,2))
          SY = (X(I,J,1,3)-X(L,M,1,3))*(X(L,J,1,1)-X(I,M,1,1)) - (X(I,J,
     1       1,1)-X(L,M,1,1))*(X(L,J,1,3)-X(I,M,1,3))
          SZ = (X(I,J,1,1)-X(L,M,1,1))*(X(L,J,1,2)-X(I,M,1,2)) - (X(I,J,
     1       1,2)-X(L,M,1,2))*(X(L,J,1,1)-X(I,M,1,1))
          HS1(I,J) = 0.
          HS2(I,J) = (P(I,J,2)+P(I,J,1))*SX
          HS3(I,J) = (P(I,J,2)+P(I,J,1))*SY
          HS4(I,J) = (P(I,J,2)+P(I,J,1))*SZ
          HS5(I,J) = 0.
 1800   CONTINUE
 2000 CONTINUE
C
      DO 3800 K = 2, KL
        N = K - 1
C
        DO 2200 I = 2, IL
          L = I - 1
          SX = (X(I,1,N,2)-X(L,1,K,2))*(X(L,1,N,3)-X(I,1,K,3)) - (X(I,1,
     1       N,3)-X(L,1,K,3))*(X(L,1,N,2)-X(I,1,K,2))
          SY = (X(I,1,N,3)-X(L,1,K,3))*(X(L,1,N,1)-X(I,1,K,1)) - (X(I,1,
     1       N,1)-X(L,1,K,1))*(X(L,1,N,3)-X(I,1,K,3))
          SZ = (X(I,1,N,1)-X(L,1,K,1))*(X(L,1,N,2)-X(I,1,K,2)) - (X(I,1,
     1       N,2)-X(L,1,K,2))*(X(L,1,N,1)-X(I,1,K,1))
          RA = W(I,2,K,1) + W(I,1,K,1)
          RUA = W(I,2,K,2) + W(I,1,K,2)
          RVA = W(I,2,K,3) + W(I,1,K,3)
          RWA = W(I,2,K,4) + W(I,1,K,4)
          REA = W(I,2,K,5) + W(I,1,K,5)
          PA = P(I,2,K) + P(I,1,K)
          QS = (RUA*SX+RVA*SY+RWA*SZ)*RA
          IF (K.LE.KTIP .AND. I.GT.ITL .AND. I.LE.ITU) QS = 0.
          GS1(I) = QS*RA
          GS2(I) = QS*RUA + PA*SX
          GS3(I) = QS*RVA + PA*SY
          GS4(I) = QS*RWA + PA*SZ
          GS5(I) = QS*(REA+PA)
 2200   CONTINUE
C
        DO 3600 J = 2, JL
C
          M = J - 1
          DO 2400 I = 1, IL
            SIX(I) = (X(I,J,N,2)-X(I,M,K,2))*(X(I,J,K,3)-X(I,M,N,3)) - (
     1         X(I,J,N,3)-X(I,M,K,3))*(X(I,J,K,2)-X(I,M,N,2))
            SIY(I) = (X(I,J,N,3)-X(I,M,K,3))*(X(I,J,K,1)-X(I,M,N,1)) - (
     1         X(I,J,N,1)-X(I,M,K,1))*(X(I,J,K,3)-X(I,M,N,3))
            SIZ(I) = (X(I,J,N,1)-X(I,M,K,1))*(X(I,J,K,2)-X(I,M,N,2)) - (
     1         X(I,J,N,2)-X(I,M,K,2))*(X(I,J,K,1)-X(I,M,N,1))
 2400     CONTINUE
          DO 2600 I = 2, IL
            L = I - 1
            SJX(I) = (X(I,J,N,2)-X(L,J,K,2))*(X(L,J,N,3)-X(I,J,K,3)) - (
     1         X(I,J,N,3)-X(L,J,K,3))*(X(L,J,N,2)-X(I,J,K,2))
            SJY(I) = (X(I,J,N,3)-X(L,J,K,3))*(X(L,J,N,1)-X(I,J,K,1)) - (
     1         X(I,J,N,1)-X(L,J,K,1))*(X(L,J,N,3)-X(I,J,K,3))
            SJZ(I) = (X(I,J,N,1)-X(L,J,K,1))*(X(L,J,N,2)-X(I,J,K,2)) - (
     1         X(I,J,N,2)-X(L,J,K,2))*(X(L,J,N,1)-X(I,J,K,1))
            SKX(I) = (X(I,J,K,2)-X(L,M,K,2))*(X(L,J,K,3)-X(I,M,K,3)) - (
     1         X(I,J,K,3)-X(L,M,K,3))*(X(L,J,K,2)-X(I,M,K,2))
            SKY(I) = (X(I,J,K,3)-X(L,M,K,3))*(X(L,J,K,1)-X(I,M,K,1)) - (
     1         X(I,J,K,1)-X(L,M,K,1))*(X(L,J,K,3)-X(I,M,K,3))
            SKZ(I) = (X(I,J,K,1)-X(L,M,K,1))*(X(L,J,K,2)-X(I,M,K,2)) - (
     1         X(I,J,K,2)-X(L,M,K,2))*(X(L,J,K,1)-X(I,M,K,1))
 2600     CONTINUE
C
          RUA = W(I+1,J,K,2) + W(I,J,K,2)
          RVA = W(I+1,J,K,3) + W(I,J,K,3)
          RWA = W(I+1,J,K,4) + W(I,J,K,4)
          REA = W(I+1,J,K,5) + W(I,J,K,5)
          PA = P(I+1,J,K) + P(I,J,K)
          QS = (RUA*SIX(I)+RVA*SIY(I)+RWA*SIZ(I))*RA
          FS1(I) = QS*RA
          FS2(I) = QS*RUA + PA*SIX(I)
          FS3(I) = QS*RVA + PA*SIY(I)
          FS4(I) = QS*RWA + PA*SIZ(I)
          FS5(I) = QS*(REA+PA)
 2800     CONTINUE
C
          DO 3000 I = 2, IL
            DW1(I) = FS1(I) - FS1(I-1) - GS1(I) - HS1(I,J)
            DW2(I) = FS2(I) - FS2(I-1) - GS2(I) - HS2(I,J)
            DW3(I) = FS3(I) - FS3(I-1) - GS3(I) - HS3(I,J)
            DW4(I) = FS4(I) - FS4(I-1) - GS4(I) - HS4(I,J)
            DW5(I) = FS5(I) - FS5(I-1) - GS5(I) - HS5(I,J)
 3000     CONTINUE
          DO 3200 I = 2, IL
C
            RA = W(I,J+1,K,1) + W(I,J,K,1)
            RUA = W(I,J+1,K,2) + W(I,J,K,2)
            RVA = W(I,J+1,K,3) + W(I,J,K,3)
            RWA = W(I,J+1,K,4) + W(I,J,K,4)
            REA = W(I,J+1,K,5) + W(I,J,K,5)
            PA = P(I,J+1,K) + P(I,J,K)
            QS = (RUA*SJX(I)+RVA*SJY(I)+RWA*SJZ(I))*RA
            GS1(I) = QS*RA
            GS2(I) = QS*RUA + PA*SJX(I)
            GS3(I) = QS*RVA + PA*SJY(I)
            GS4(I) = QS*RWA + PA*SJZ(I)
            GS5(I) = QS*(REA+PA)
C
            RA = W(I,J,K+1,1) + W(I,J,K,1)
            RUA = W(I,J,K+1,2) + W(I,J,K,2)
            RVA = W(I,J,K+1,3) + W(I,J,K,3)
            RWA = W(I,J,K+1,4) + W(I,J,K,4)
            REA = W(I,J,K+1,5) + W(I,J,K,5)
            PA = P(I,J,K+1) + P(I,J,K)
            QS = (RUA*SKX(I)+RVA*SKY(I)+RWA*SKZ(I))*RA
            HS1(I,J) = QS*RA
            HS2(I,J) = QS*RUA + PA*SKX(I)
            HS3(I,J) = QS*RVA + PA*SKY(I)
            HS4(I,J) = QS*RWA + PA*SKZ(I)
            HS5(I,J) = QS*(REA+PA)
 3200     CONTINUE
C
          DO 3400 I = 2, IL
            DW(I,J,K,1) = DW1(I) + GS1(I) + HS1(I,J) + FW(I,J,K,1)
            DW(I,J,K,2) = DW2(I) + GS2(I) + HS2(I,J) + FW(I,J,K,2)
            DW(I,J,K,3) = DW3(I) + GS3(I) + HS3(I,J) + FW(I,J,K,3)
            DW(I,J,K,4) = DW4(I) + GS4(I) + HS4(I,J) + FW(I,J,K,4)
            DW(I,J,K,5) = DW5(I) + GS5(I) + HS5(I,J) + FW(I,J,K,5)
 3400     CONTINUE
 3600   CONTINUE
 3800 CONTINUE
      DO 4400 K = 2, KL
        DO 4200 J = 2, JL
          DO 4000 I = 2, IL
            WR(I,J,K,1) = FCOLL*WR(I,J,K,1) - DW(I,J,K,1)
            WR(I,J,K,2) = FCOLL*WR(I,J,K,2) - DW(I,J,K,2)
            WR(I,J,K,3) = FCOLL*WR(I,J,K,3) - DW(I,J,K,3)
            WR(I,J,K,4) = FCOLL*WR(I,J,K,4) - DW(I,J,K,4)
            WR(I,J,K,5) = FCOLL*WR(I,J,K,5) - DW(I,J,K,5)
 4000     CONTINUE
 4200   CONTINUE
 4400 CONTINUE
 4600 CONTINUE
      DO 5200 K = 2, KL
        DO 5000 J = 2, JL
          DO 4800 I = 2, IL
            DW(I,J,K,1) = DW(I,J,K,1) + WR(I,J,K,1)
            DW(I,J,K,2) = DW(I,J,K,2) + WR(I,J,K,2)
            DW(I,J,K,3) = DW(I,J,K,3) + WR(I,J,K,3)
            DW(I,J,K,4) = DW(I,J,K,4) + WR(I,J,K,4)
            DW(I,J,K,5) = DW(I,J,K,5) + WR(I,J,K,5)
 4800     CONTINUE
 5000   CONTINUE
 5200 CONTINUE
      DO 5800 K = 2, KL
        DO 5600 J = 2, JL
          DO 5400 I = 2, IL
            DT = (FT*DTL(I,J,K)+GT)*VOL(I,J,K)
            DW(I,J,K,1) = DT*DW(I,J,K,1)
            DW(I,J,K,2) = DT*DW(I,J,K,2)
            DW(I,J,K,3) = DT*DW(I,J,K,3)
            DW(I,J,K,4) = DT*DW(I,J,K,4)
            DW(I,J,K,5) = DT*DW(I,J,K,5)
 5400     CONTINUE
 5600   CONTINUE
 5800 CONTINUE
C
      DO 6400 K = 2, KL
        DO 6200 J = 2, JL
          DO 6000 I = 2, IL
            W(I,J,K,1) = W1(I,J,K,1) - DW(I,J,K,1)
            W(I,J,K,2) = W1(I,J,K,2) - DW(I,J,K,2)
            W(I,J,K,3) = W1(I,J,K,3) - DW(I,J,K,3)
            W(I,J,K,4) = W1(I,J,K,4) - DW(I,J,K,4)
            W(I,J,K,5) = W1(I,J,K,5) - DW(I,J,K,5)
            QQ = (W(I,J,K,2)+W(I,J,K,3)+W(I,J,K,4))*W(I,J,K,1)
            P(I,J,K) = (GAMMA-1.)*(W(I,J,K,5)-.5*QQ+H0*W(I,J,K,1))
 6000     CONTINUE
 6200   CONTINUE
 6400 CONTINUE
      IF (NSTAGE .EQ. MSTAGE) GO TO 6600
C
      NSTAGE = NSTAGE + 1
      IF (KSMOOP .LT. 0) ISMOOP = -ISMOOP
      GO TO 1600
C
 6600 CONTINUE
      IF (HM .LE. 0.) GO TO 7400
C
      DO 7200 K = 2, KL
        DO 7000 J = 2, JL
          DO 6800 I = 2, IL
            F = 1. + HM*(W(I,J,K,5)+P(I,J,K))*W(I,J,K,1)
            W(I,J,K,1) = F*W(I,J,K,1)
            W(I,J,K,2) = F*W(I,J,K,2)
            W(I,J,K,3) = F*W(I,J,K,3)
            W(I,J,K,4) = F*W(I,J,K,4)
            W(I,J,K,5) = (W(I,J,K,5)-HM*P(I,J,K))*(1.+HM)
            QQ = (W(I,J,K,2)+W(I,J,K,3)+W(I,J,K,4))*W(I,J,K,1)
            P(I,J,K) = (GAMMA-1.)*(W(I,J,K,5)-.5*QQ+H0*W(I,J,K,1))
 6800     CONTINUE
 7000   CONTINUE
 7200 CONTINUE
 7400 CONTINUE
C
      HRMS = 0.
      HMAX = 0.
      HMAXI = 0.
      RTRMS = 0.
      RTMAX = 0.
      RTMAXI = 0.
      NSUP = 0
      DO 9000 K = 2, KL
        DO 8800 J = 2, JL
          DO 7600 I = 2, IL
            QQQ(I) = (W(I,J,K,2)+W(I,J,K,3)+W(I,J,K,4))*W(I,J,K,1)
            H(I) = ABS((W(I,J,K,5)+P(I,J,K))*W(I,J,K,1))
            HRMS = HRMS + H(I)
            HMAXI = AMAX1(HMAXI,H(I))
            DT = ABS(CFL*((1.-VT)*DTL(I,J,K)+VT*DTMIN))
            RT(I) = (W(I,J,K,1)-W1(I,J,K,1))*DT
            RTRMS = RTRMS + RT(I)
            RTMAXI = AMAX1(RTMAXI,RT(I))
 7600     CONTINUE
C
          IF (HMAXI .GT. HMAX) THEN
              DO 7800 I = 2, IL
                IF (HMAXI .EQ. H(I)) THEN
                    IH = I
                    JH = J
                    KH = K
                    HMAX = HMAXI
                    GO TO 8000
                ENDIF
 7800         CONTINUE
          ENDIF
C
 8000     CONTINUE
C
          IF (RTMAXI .GT. RTMAX) THEN
              DO 8200 I = 2, IL
                IF (RTMAXI .EQ. RT(I)) THEN
                    IRT = I
                    JRT = J
                    KRT = K
                    RTMAX = RTMAXI
                    GO TO 8400
                ENDIF
 8200         CONTINUE
          ENDIF
C
 8400     CONTINUE
C
          DO 8600 I = 2, IL
            IF (QQQ(I) .GT. GAMMA*P(I,J,K)) NSUP = NSUP + 1
 8600     CONTINUE
C
 8800   CONTINUE
 9000 CONTINUE
C
C
      RTRMS = SQRT(RTRMS*FLOAT((IL-1)*(JL-1)*(KL-1)))
      HRMS = SQRT(HRMS*FLOAT((IL-1)*(JL-1)*(KL-1)))
      RETURN 
      END
      SUBROUTINE SUB036(N,M,A2)
      DIMENSION A2(M,N)
C
      PARAMETER (IDIM1=100)
      PARAMETER (IDIM2=100)
      PARAMETER (IDIM3=IDIM1*IDIM2)
C
      REAL A1(IDIM1)
      REAL B1(IDIM1)
      REAL C1(IDIM1)
      REAL D1(IDIM1)
      REAL E1(IDIM1)
      REAL F1(IDIM1)
      REAL G1(IDIM1)
      REAL H1(IDIM1)
C
      COMMON /DATA/A1,B1,C1,D1,E1,F1,G1,H1
C
      REAL B2(IDIM1,IDIM2)
      REAL C2(IDIM1,IDIM2)
      REAL D2(IDIM1,IDIM2)
      REAL E2(IDIM1,IDIM2)
      REAL F2(IDIM1,IDIM2)
      REAL G2(IDIM1,IDIM2)
      REAL H2(IDIM1,IDIM2)
      INTEGER I2(IDIM1,IDIM2)
      INTEGER J2(IDIM1,IDIM2)
      INTEGER K2(IDIM1,IDIM2)
      INTEGER L2(IDIM1,IDIM2)
      INTEGER M2(IDIM1,IDIM2)
      INTEGER N2(IDIM1,IDIM2)
      REAL O2(IDIM1,IDIM2)
      REAL R2(IDIM1,IDIM2)
      REAL Z2(IDIM1,IDIM2)
      INTEGER INT2(IDIM1,IDIM2)
      LOGICAL LOG2(IDIM1,IDIM2)
      DOUBLE PRECISION DBLE2(IDIM1,IDIM2)
      DOUBLE PRECISION DBLE22(IDIM1,IDIM2)
      COMPLEX CMPLX2(IDIM1,IDIM2)
C
      COMMON /DATA/B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2
      COMMON /DATA/ INT2,LOG2,DBLE2,DBLE22,CMPLX2,O2,R2,Z2
 
C
C     INITIALIZE VARIABLES
C
      DO 1200 I = 1, N
        DO 1000 J = 1, M
          INT2(I,J) = 1
          LOG2(I,J) = .TRUE.
          DBLE2(I,J) = 1.
          DBLE22(I,J) = 1.
          CMPLX2(I,J) = 1.
 1000   CONTINUE
 1200 CONTINUE
      S1 = 0
 
C
C
C     DOUBLY DIMENSIONED ARRAY - SIMPLE ASSIGNMENT
C
      DO 1600 I = 1, N
        DO 1400 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
 1400   CONTINUE
 1600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH SCALAR MULTIPLIER
C
      DO 2000 I = 1, N
        DO 1800 J = 1, M
          A2(J,I) = B2(J,I) + S1*C2(J,I)
 1800   CONTINUE
 2000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH ONE DIMENSIONAL MULTIPLIER
C
      DO 2400 I = 1, N
        DO 2200 J = 1, M
          A2(J,I) = B2(J,I) + D1(I)*C2(J,I)
 2200   CONTINUE
 2400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH ONE DIMENSIONAL MULTIPLIER
C
      DO 2800 I = 1, N
        DO 2600 J = 1, M
          A2(J,I) = E2(J,I) + F1(J)*G2(J,I)
 2600   CONTINUE
 2800 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY - WITH REUSED VALUE
C
      DO 3200 I = 1, N
        DO 3000 J = 1, M
          A2(J,I) = B2(J,I) + C2(J,I)
          B2(J,I) = A2(J,I) + D2(J,I)
 3000   CONTINUE
 3200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE SCALAR TEMPORARY
C
      DO 3600 I = 1, N
        DO 3400 J = 1, M
          A06 = B2(J,I) + C2(J,I)
          A2(J,I) = A06*D2(J,I)
 3400   CONTINUE
 3600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PARTITIONED ARRAY TEMPORARY
C
      DO 4000 I = 1, N
        DO 3800 J = 1, M
          A1(I) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(I)*D2(J,I)
 3800   CONTINUE
 4000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH PRIVATE ARRAY TEMPORARY
C
      DO 4400 I = 1, N
        DO 4200 J = 1, M
          A1(J) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(J)*D2(J,I)
 4200   CONTINUE
 4400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH BOTH PRIVATE AND SHARED TEMPORARIES
C
      DO 4800 I = 1, N
        DO 4600 J = 1, M
          A1(I) = B2(J,I) + C2(J,I)
          A2(J,I) = A1(I)*D2(J,I)
          B1(J) = E2(J,I) + F2(J,I)
          B2(J,I) = B1(J)*G2(J,I)
 4600   CONTINUE
 4800 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH INTRINSIC FUNCTION REFERENCES
C
      DO 5200 I = 1, N
        DO 5000 J = 1, M
          A2(J,I) = SQRT(D2(J,I))
          B2(J,I) = ABS(D2(J,I))
          C2(J,I) = MOD(D2(J,I),E2(J,I))
          D2(J,I) = EXP(D2(J,I))
          E2(J,I) = ALOG(D2(J,I))
          F2(J,I) = ALOG10(D2(J,I))
 5000   CONTINUE
 5200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH TYPE CONVERSION INTRINSICS
C
      DO 5600 I = 1, N
        DO 5400 J = 1, M
          A2(J,I) = FLOAT(INT2(J,I))
          B2(J,I) = REAL(D2(J,I))
          C2(J,I) = SNGL(DBLE2(J,I))
          I2(J,I) = INT(D2(J,I))
          J2(J,I) = IFIX(D2(J,I))
          K2(J,I) = IDINT(DBLE2(J,I))
          R2(J,I) = DBLE(D2(J,I))
          Z2(J,I) = CMPLX(D2(J,I),B2(J,I))
 5400   CONTINUE
 5600 CONTINUE
C
C     DOUBLY DIMENSIONED D.P. WITH INTRINSIC FUNCTION REFERENCES
C
      DO 6000 I = 1, N
        DO 5800 J = 1, M
          A2(J,I) = DSQRT(DBLE2(J,I))
          B2(J,I) = DABS(DBLE2(J,I))
          C2(J,I) = DMOD(DBLE2(J,I),DBLE22(J,I))
          D2(J,I) = DEXP(DBLE2(J,I))
          E2(J,I) = DLOG(DBLE2(J,I))
          F2(J,I) = DLOG10(DBLE2(J,I))
 5800   CONTINUE
 6000 CONTINUE
C
C     DOUBLY DIMENSIONED D.P. WITH TRIG INTRINSIC FUNCTION
C
      DO 6400 I = 1, N
        DO 6200 J = 1, M
          A2(J,I) = DSIN(DBLE2(J,I))
          B2(J,I) = DCOS(DBLE2(J,I))
          C2(J,I) = DTAN(DBLE2(J,I))
          D2(J,I) = DASIN(DBLE2(J,I))
          E2(J,I) = DACOS(DBLE2(J,I))
          F2(J,I) = DATAN(DBLE2(J,I))
          G2(J,I) = DATAN2(DBLE2(J,I),DBLE22(J,I))
 6200   CONTINUE
 6400 CONTINUE
C
C     DOUBLY DIMENSIONED D.P. WITH HYPERBOLIC TRIG FUNCTIONS
C
      DO 6800 I = 1, N
        DO 6600 J = 1, M
          A2(J,I) = DSINH(DBLE2(J,I))
          B2(J,I) = DCOSH(DBLE2(J,I))
          C2(J,I) = DTANH(DBLE2(J,I))
 6600   CONTINUE
 6800 CONTINUE
C
C     DOUBLY DIMENSIONED D.P. WITH LESSER USED INTRINSICS
C
      DO 7200 I = 1, N
        DO 7000 J = 1, M
          A2(J,I) = DINT(DBLE2(J,I))
          B2(J,I) = DNINT(DBLE2(J,I))
          C2(J,I) = DSIGN(DBLE2(J,I),DBLE22(J,I))
          D2(J,I) = DDIM(DBLE2(J,I),DBLE22(J,I))
 7000   CONTINUE
 7200 CONTINUE
C
C     DOUBLY DIMENSIONED COMPLEX INTRINSICS
C
      DO 7600 I = 1, N
        DO 7400 J = 1, M
          A2(J,I) = CABS(CMPLX2(J,I))
          B2(J,I) = CSIN(CMPLX2(J,I))
          B2(J,I) = CCOS(CMPLX2(J,I))
          B2(J,I) = CSQRT(CMPLX2(J,I))
          B2(J,I) = CEXP(CMPLX2(J,I))
          B2(J,I) = CLOG(CMPLX2(J,I))
 7400   CONTINUE
 7600 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH IF..THEN  CONDITION
C
      DO 8000 I = 1, N
        DO 7800 J = 1, M
          IF (B2(J,I) .NE. 0.0) A2(J,I) = C2(J,I)
 7800   CONTINUE
 8000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH IF..THEN...ELSE CONDITION
C
      DO 8400 I = 1, N
        DO 8200 J = 1, M
          IF (B2(J,I) .NE. 0.0) THEN
              A2(J,I) = C2(J,I)
          ELSE
              B2(J,I) = C2(J,I)
          ENDIF
 8200   CONTINUE
 8400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH IF..GOTO CONDITION
C
      DO 9200 I = 1, N
        DO 9000 J = 1, M
          IF (B2(J,I) .EQ. 0.0) GO TO 8600
          A2(J,I) = C2(J,I)
          GO TO 8800
 8600     CONTINUE
          B2(J,I) = C2(J,I)
 8800     CONTINUE
 9000   CONTINUE
 9200 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH THREE BRANCH IF
C
      DO 10000 I = 1, N
        DO 9800 J = 1, M
          A2(J,I) = C2(J,I)
          IF (B2(J,I) .GE. 0) GO TO 9400
          B2(J,I) = C2(J,I)
          GO TO 9600
 9400     CONTINUE
          C2(J,I) = C2(J,I)
 9600     CONTINUE
 9800   CONTINUE
10000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH INDIRECT LOGICAL IF
C
      DO 11000 I = 1, N
        DO 10800 J = 1, M
          A2(J,I) = C2(J,I)
          IF (B2(J,I) .EQ. 0.0) GO TO 10400
10200     CONTINUE
          B2(J,I) = C2(J,I)
          GO TO 10600
10400     CONTINUE
          C2(J,I) = C2(J,I)
10600     CONTINUE
10800   CONTINUE
11000 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH COMPOUND BLOCK IF
C
      DO 11400 I = 1, N
        DO 11200 J = 1, M
          IF (B2(J,I) .EQ. 0.0) THEN
              A2(J,I) = C2(J,I)
          ELSE IF (B2(J,I) .GT. 0.0) THEN
              B2(J,I) = C2(J,I)
          ELSE IF (C2(J,I) .GT. 0.0) THEN
              C2(J,I) = C2(J,I)
          ELSE
              D2(J,I) = C2(J,I)
          ENDIF
11200   CONTINUE
11400 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH NESTED BLOCK IF
C
      DO 11800 I = 1, N
        DO 11600 J = 1, M
          IF (B2(J,I) .EQ. 0.0) THEN
              A2(J,I) = C2(J,I)
              IF (D2(J,I) .GT. 0.0) THEN
                  B2(J,I) = C2(J,I)
              ELSE
                  C2(J,I) = C2(J,I)
              ENDIF
          ELSE
              D2(J,I) = C2(J,I)
          ENDIF
11600   CONTINUE
11800 CONTINUE
C
C     DOUBLY DIMENSIONED ARRAY WITH COMPUTED GOTO
C
      DO 13000 I = 1, N
        DO 12800 J = 1, M
          GO TO (12000,12200,12400,12600) INT2(I,J)
          A2(J,I) = A2(J,I)
12000     CONTINUE
          B2(J,I) = B2(J,I)
12200     CONTINUE
          C2(J,I) = C2(J,I)
12400     CONTINUE
          D2(J,I) = D2(J,I)
12600     CONTINUE
          E2(J,I) = D2(J,I)
12800   CONTINUE
13000 CONTINUE
C
C     COMPUTED GOTO RECAST AS BLOCK IFS
C
      DO 13400 I = 1, N
        DO 13200 J = 1, M
          IF (INT2(I,J).LE.0 .OR. INT2(I,J).GT.4) A2(J,I) = A2(J,I)
          IF (INT2(I,J).LE.1 .OR. INT2(I,J).GT.4) B2(J,I) = A2(J,I)
          IF (INT2(I,J).LE.2 .OR. INT2(I,J).GT.4) C2(J,I) = A2(J,I)
          IF (INT2(I,J).LE.3 .OR. INT2(I,J).GT.4) D2(J,I) = A2(J,I)
          E2(J,I) = A2(J,I)
13200   CONTINUE
13400 CONTINUE
C
C     ASSIGNED GOTO (PRIVATE DECLARATION NEEDED)
C
      DO 14400 I = 1, N
        DO 14200 J = 1, M
          ASSIGN 13600 TO ILBL
          A2(J,I) = A2(J,I)
          IF (C2(J,I) .NE. 0.0) THEN
              ASSIGN 13800 TO ILBL
              B2(J,I) = B2(J,I)
          ENDIF
          GO TO ILBL
13600     CONTINUE
          C2(J,I) = C2(J,I)
          GO TO 14000
13800     CONTINUE
          D2(J,I) = D2(J,I)
14000     CONTINUE
14200   CONTINUE
14400 CONTINUE
C
C     DOUBLE LOOP INVOLVING PRIVATE ARRAY PASSED FROM FIRST TO SECOND
C
      DO 15000 I = 1, N
        DO 14600 J = 1, M
          A1(J) = D2(J,I) + A2(J,I)
14600   CONTINUE
        DO 14800 J = 2, M - 1
          B2(J,I) = A1(J)*B2(J,I)
14800   CONTINUE
15000 CONTINUE
C
C     DOUBLE LOOP WITH INNER DEPENDENT LOOP
C
      DO 15400 I = 1, N
        DO 15200 J = 2, M
          A2(J,I) = A2(J,I) - A2(J-1,I)*.99999
15200   CONTINUE
15400 CONTINUE
C
C     DOUBLE LOOP INVOLVING PRIVATE ARRAY WITH DEPENDENCY
C
      DO 16000 I = 1, N
        A1(1) = 1.0
        DO 15600 J = 2, M
          A1(J) = C2(J,I) - A1(J-1)*B2(J,I)
15600   CONTINUE
        DO 15800 J = 1, M
          B2(J,I) = D2(J,I)*A1(J)
15800   CONTINUE
16000 CONTINUE
C
C     DOUBLE LOOP WITH SEPARABLE DEPENDENCY ON FIRST ITERATION
C
      DO 16600 I = 1, N
        IF (I .EQ. 1) THEN
            DO 16200 J = 1, M
              A2(J,I) = A2(J,I) + A2(J,N)/2.0
16200       CONTINUE
        ELSE
            DO 16400 J = 1, M
              A2(J,I) = D2(J,I)*A2(J,I)
16400       CONTINUE
        ENDIF
16600 CONTINUE
C
C     DOUBLE LOOP WITH UNROLLING
C
      DO 17000 I = 1, N, 4
        DO 16800 J = 1, M
          A2(J,I) = A2(J,I) + D2(J,I)
          A2(J,I+1) = A2(J,I+1) + D2(J,I+1)
          A2(J,I+2) = A2(J,I+2) + D2(J,I+2)
          A2(J,I+3) = A2(J,I+3) + D2(J,I+3)
16800   CONTINUE
17000 CONTINUE
C
C     DOUBLE LOOP WITH DEPENDENCY EQUAL TO STRIDE ON OUTER LOOP
C
      DO 17400 I = 1, N, 2
        DO 17200 J = 1, M
          A2(J,I) = A2(J,I) + D2(J,I)
          A2(J,I+1) = A2(J,I+1) + A2(J,I)*C2(J,I)
17200   CONTINUE
17400 CONTINUE
C
C     TRIANGULAR MATRIX OPERATION
C
      DO 17800 I = 1, N
        DO 17600 J = 1, I
          A2(I,J) = A2(J,I)*D2(J,I)
17600   CONTINUE
17800 CONTINUE
C
C     NON-OVERLAPPING REFERENCES TO THE SAME ARRAY
C
      NM2 = N/2
      DO 18200 I = 1, NM2
        DO 18000 J = 1, M
          A2(J,I) = A2(J,I)*A2(J,I+NM2)
18000   CONTINUE
18200 CONTINUE
C
      RETURN 
      END
      integer function isamax(n,sx,incx)
c
c     finds the index of element having max. absolute value.
c     jack dongarra, linpack, 3/11/78.
c     modified to correct problem with negative increments, 9/29/88.  
c
      real sx(1),smax
      integer i,incx,ix,n
c
      isamax = 0
      if( n .lt. 1 ) return
      isamax = 1
      if(n.eq.1)return
      if(incx.eq.1)go to 20
c
c        code for increment not equal to 1
c
      ix = 1
      if(incx.lt.0)ix = (-n+1)*incx + 1
      smax = abs(sx(ix))
      ix = ix + incx
      do 10 i = 2,n
         if(abs(sx(ix)).le.smax) go to 5
         isamax = i
         smax = abs(sx(ix))
    5    ix = ix + incx
   10 continue
      return
c
c        code for increment equal to 1
c
   20 smax = abs(sx(1))
      do 30 i = 2,n
         if(abs(sx(i)).le.smax) go to 30
         isamax = i
         smax = abs(sx(i))
   30 continue
      return
      end
